package person;

import com.dexels.navajo.server.*;
import com.dexels.navajo.mapping.*;
import com.dexels.navajo.document.*;
import com.dexels.navajo.parser.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Stack;


/**
 * Generated Java code by TSL compiler.
 * $Id$
 *
 * Java version: Java HotSpot(TM) Client VM (1.5.0_10-b03)
 * OS: Linux 2.6.20-1.2948.fc6
 * Hostname: localhost.localdomain
 *
 * WARNING NOTICE: DO NOT EDIT THIS FILE UNLESS YOU ARE COMPLETELY AWARE OF WHAT YOU ARE DOING
 *
 */

public final class ProcessInsertPerson extends CompiledScript {


public final void setValidations() {
}

public final void finalBlock(Parameters parms, Navajo inMessage, Access access, NavajoConfig config) throws Exception {
}
public final void execute(Parameters parms, Navajo inMessage, Access access, NavajoConfig config) throws Exception { 

inDoc = inMessage;
matchingConditions = false;
{
  sValue = new Integer(0);
  matchingConditions = true;
}
type = (sValue != null) ? MappingUtils.determineNavajoType(sValue) : "";
subtype = "";
p = MappingUtils.setProperty(true, currentParamMsg, "UpdateCount", sValue, type, subtype, "", "", -1, access.getOutputDoc(), inMessage, !matchingConditions);
p.setCardinality("1");
{ // Starting new mappable object context. 
  treeNodeStack.push(currentMap);
  currentMap = new MappableTreeNode(access, currentMap, (Mappable) classLoader.getClass("com.dexels.navajo.adapter.SQLMap").newInstance(), false);
  mappableObject0 = (com.dexels.navajo.adapter.SQLMap) currentMap.myObject;
  mappableObject0.load(parms, inMessage, access, config);
  try {
    if (true) {
      {
        sValue = "default";
        matchingConditions = true;
      }
      mappableObject0.setDatasource((String) sValue);
    }
    if (true) {
      {
        sValue = "\n                INSERT INTO person (  \n                       id\n                ,      lastname\n                ,      infix\n                ,      initials\n                ,      firstname\n                ,      dateofbirth\n                ,      nationality\n                ,      sex\n                ,      streetname\n                ,      housenumber\n                ,      numberappendix\n                ,      city\n                ,      zipcode\n                ,      countrycode\n                ,      telephonenumber\n                ,      mobilenumber\n                ,      emailaddress )\n                VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,\n                         ?, ?, ?, ?, ?, ?, ? )\n            ";
        matchingConditions = true;
      }
      mappableObject0.setUpdate((String) sValue);
    }
    if (true) {
      {
        sValue = null;
        matchingConditions = true;
      }
      mappableObject0.setParameter(sValue);
    }
    if (true) {
      {
        op = Expression.evaluate("[/Person/LastName]", inMessage, currentMap, currentInMsg, currentParamMsg, currentSelection, null);
        sValue = op.value;
        matchingConditions = true;
      }
      mappableObject0.setParameter(sValue);
    }
    if (true) {
      {
        op = Expression.evaluate("[/Person/Infix]", inMessage, currentMap, currentInMsg, currentParamMsg, currentSelection, null);
        sValue = op.value;
        matchingConditions = true;
      }
      mappableObject0.setParameter(sValue);
    }
    if (true) {
      {
        op = Expression.evaluate("[/Person/Initials]", inMessage, currentMap, currentInMsg, currentParamMsg, currentSelection, null);
        sValue = op.value;
        matchingConditions = true;
      }
      mappableObject0.setParameter(sValue);
    }
    if (true) {
      {
        op = Expression.evaluate("[/Person/FirstName]", inMessage, currentMap, currentInMsg, currentParamMsg, currentSelection, null);
        sValue = op.value;
        matchingConditions = true;
      }
      mappableObject0.setParameter(sValue);
    }
    if (true) {
      {
        op = Expression.evaluate("[/Person/DateOfBirth]", inMessage, currentMap, currentInMsg, currentParamMsg, currentSelection, null);
        sValue = op.value;
        matchingConditions = true;
      }
      mappableObject0.setParameter(sValue);
    }
    if (true) {
      {
        op = Expression.evaluate("[/Person/Nationality]", inMessage, currentMap, currentInMsg, currentParamMsg, currentSelection, null);
        sValue = op.value;
        matchingConditions = true;
      }
      mappableObject0.setParameter(sValue);
    }
    if (true) {
      {
        op = Expression.evaluate("[/Person/Sex]", inMessage, currentMap, currentInMsg, currentParamMsg, currentSelection, null);
        sValue = op.value;
        matchingConditions = true;
      }
      mappableObject0.setParameter(sValue);
    }
    if (true) {
      {
        op = Expression.evaluate("[/Person/StreetName]", inMessage, currentMap, currentInMsg, currentParamMsg, currentSelection, null);
        sValue = op.value;
        matchingConditions = true;
      }
      mappableObject0.setParameter(sValue);
    }
    if (true) {
      {
        op = Expression.evaluate("[/Person/HouseNumber]", inMessage, currentMap, currentInMsg, currentParamMsg, currentSelection, null);
        sValue = op.value;
        matchingConditions = true;
      }
      mappableObject0.setParameter(sValue);
    }
    if (true) {
      {
        op = Expression.evaluate("[/Person/NumberAppendix]", inMessage, currentMap, currentInMsg, currentParamMsg, currentSelection, null);
        sValue = op.value;
        matchingConditions = true;
      }
      mappableObject0.setParameter(sValue);
    }
    if (true) {
      {
        op = Expression.evaluate("[/Person/City]", inMessage, currentMap, currentInMsg, currentParamMsg, currentSelection, null);
        sValue = op.value;
        matchingConditions = true;
      }
      mappableObject0.setParameter(sValue);
    }
    if (true) {
      {
        op = Expression.evaluate("[/Person/ZipCode]", inMessage, currentMap, currentInMsg, currentParamMsg, currentSelection, null);
        sValue = op.value;
        matchingConditions = true;
      }
      mappableObject0.setParameter(sValue);
    }
    if (true) {
      {
        op = Expression.evaluate("[/Person/CountryCode]", inMessage, currentMap, currentInMsg, currentParamMsg, currentSelection, null);
        sValue = op.value;
        matchingConditions = true;
      }
      mappableObject0.setParameter(sValue);
    }
    if (true) {
      {
        op = Expression.evaluate("[/Person/TelephoneNumber]", inMessage, currentMap, currentInMsg, currentParamMsg, currentSelection, null);
        sValue = op.value;
        matchingConditions = true;
      }
      mappableObject0.setParameter(sValue);
    }
    if (true) {
      {
        op = Expression.evaluate("[/Person/MobileNumber]", inMessage, currentMap, currentInMsg, currentParamMsg, currentSelection, null);
        sValue = op.value;
        matchingConditions = true;
      }
      mappableObject0.setParameter(sValue);
    }
    if (true) {
      {
        op = Expression.evaluate("[/Person/EmailAddress]", inMessage, currentMap, currentInMsg, currentParamMsg, currentSelection, null);
        sValue = op.value;
        matchingConditions = true;
      }
      mappableObject0.setParameter(sValue);
    }
    if (true) {
      {
        sValue = new Boolean(true);
        matchingConditions = true;
      }
      mappableObject0.setDoUpdate(((Boolean) sValue).booleanValue());
    }
    matchingConditions = false;
    {
      op = Expression.evaluate("[/@UpdateCount] + $updateCount", inMessage, currentMap, currentInMsg, currentParamMsg, currentSelection, null);
      sValue = op.value;
      matchingConditions = true;
    }
    type = (sValue != null) ? MappingUtils.determineNavajoType(sValue) : "";
    subtype = "";
    p = MappingUtils.setProperty(true, currentParamMsg, "UpdateCount", sValue, type, subtype, "", "", -1, access.getOutputDoc(), inMessage, !matchingConditions);
p.setCardinality("1");
  } catch (Exception e2) {
  mappableObject0.kill();
    throw e2;
  }
  mappableObject0.store();
  currentMap.setEndtime();
currentMap = (MappableTreeNode) treeNodeStack.pop();
} // EOF MapContext 
if (!kill) { execute_sub0(parms, inMessage, access, config); }
}// EOM
private final void execute_sub0(Parameters parms, Navajo inMessage, Access access, NavajoConfig config) throws Exception {

  if (!kill) {
  count = 1;
  Message [] messageList0 = null;
  messageList0 = MappingUtils.addMessage(access.getOutputDoc(), currentOutMsg, "Result", "", count, "", "", "");
  for (int messageCount2 = 0; messageCount2 < messageList0.length; messageCount2++) {
 if (!kill) {
    outMsgStack.push(currentOutMsg);
    currentOutMsg = messageList0[messageCount2];
    access.setCurrentOutMessage(currentOutMsg);
    matchingConditions = false;
    if (Condition.evaluate("?[/@UpdateCount] AND [/@UpdateCount] > 0", inMessage, currentMap, currentInMsg, currentParamMsg))    {
      op = Expression.evaluate("[/@UpdateCount]", inMessage, currentMap, currentInMsg, currentParamMsg, currentSelection, null);
      sValue = op.value;
      matchingConditions = true;
    }
     else 
    {
      sValue = new Integer(0);
      matchingConditions = true;
    }
    type = (sValue != null) ? MappingUtils.determineNavajoType(sValue) : "integer";
    subtype = "";
    p = MappingUtils.setProperty(false, currentOutMsg, "UpdateCount", sValue, type, subtype, "out", "Wijzigingen", -1, access.getOutputDoc(), inMessage, !matchingConditions);
p.setCardinality("1");
  currentOutMsg = (Message) outMsgStack.pop();
  access.setCurrentOutMessage(currentOutMsg);
  }
 } // EOF messageList for 
  }
}


com.dexels.navajo.adapter.SQLMap mappableObject0 = null;
}//EOF