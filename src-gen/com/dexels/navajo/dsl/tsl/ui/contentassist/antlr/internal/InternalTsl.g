/*
* generated by Xtext
*/
grammar InternalTsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package com.dexels.navajo.dsl.tsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.dexels.navajo.dsl.tsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.dexels.navajo.dsl.tsl.services.TslGrammarAccess;

}

@parser::members {
 
 	private TslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleTml
entryRuleTml 
:
{ before(grammarAccess.getTmlRule()); }
	 ruleTml
{ after(grammarAccess.getTmlRule()); } 
	 EOF 
;

// Rule Tml
ruleTml
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTmlAccess().getGroup()); }
(rule__Tml__Group__0)
{ after(grammarAccess.getTmlAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePossibleExpression
entryRulePossibleExpression 
:
{ before(grammarAccess.getPossibleExpressionRule()); }
	 rulePossibleExpression
{ after(grammarAccess.getPossibleExpressionRule()); } 
	 EOF 
;

// Rule PossibleExpression
rulePossibleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPossibleExpressionAccess().getGroup()); }
(rule__PossibleExpression__Group__0)
{ after(grammarAccess.getPossibleExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessage
entryRuleMessage 
:
{ before(grammarAccess.getMessageRule()); }
	 ruleMessage
{ after(grammarAccess.getMessageRule()); } 
	 EOF 
;

// Rule Message
ruleMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageAccess().getGroup()); }
(rule__Message__Group__0)
{ after(grammarAccess.getMessageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMap
entryRuleMap 
:
{ before(grammarAccess.getMapRule()); }
	 ruleMap
{ after(grammarAccess.getMapRule()); } 
	 EOF 
;

// Rule Map
ruleMap
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMapAccess().getGroup()); }
(rule__Map__Group__0)
{ after(grammarAccess.getMapAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMapStart
entryRuleMapStart 
:
{ before(grammarAccess.getMapStartRule()); }
	 ruleMapStart
{ after(grammarAccess.getMapStartRule()); } 
	 EOF 
;

// Rule MapStart
ruleMapStart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMapStartAccess().getGroup()); }
(rule__MapStart__Group__0)
{ after(grammarAccess.getMapStartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getGroup()); }
(rule__Property__Group__0)
{ after(grammarAccess.getPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionTag
entryRuleExpressionTag 
:
{ before(grammarAccess.getExpressionTagRule()); }
	 ruleExpressionTag
{ after(grammarAccess.getExpressionTagRule()); } 
	 EOF 
;

// Rule ExpressionTag
ruleExpressionTag
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionTagAccess().getGroup()); }
(rule__ExpressionTag__Group__0)
{ after(grammarAccess.getExpressionTagAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTopLevel
entryRuleTopLevel 
:
{ before(grammarAccess.getTopLevelRule()); }
	 ruleTopLevel
{ after(grammarAccess.getTopLevelRule()); } 
	 EOF 
;

// Rule TopLevel
ruleTopLevel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTopLevelAccess().getToplevelExpressionAssignment()); }
(rule__TopLevel__ToplevelExpressionAssignment)
{ after(grammarAccess.getTopLevelAccess().getToplevelExpressionAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathElement
entryRulePathElement 
:
{ before(grammarAccess.getPathElementRule()); }
	 rulePathElement
{ after(grammarAccess.getPathElementRule()); } 
	 EOF 
;

// Rule PathElement
rulePathElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathElementAccess().getAlternatives()); }
(rule__PathElement__Alternatives)
{ after(grammarAccess.getPathElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTmlExpression
entryRuleTmlExpression 
:
{ before(grammarAccess.getTmlExpressionRule()); }
	 ruleTmlExpression
{ after(grammarAccess.getTmlExpressionRule()); } 
	 EOF 
;

// Rule TmlExpression
ruleTmlExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTmlExpressionAccess().getGroup()); }
(rule__TmlExpression__Group__0)
{ after(grammarAccess.getTmlExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExistsTmlExpression
entryRuleExistsTmlExpression 
:
{ before(grammarAccess.getExistsTmlExpressionRule()); }
	 ruleExistsTmlExpression
{ after(grammarAccess.getExistsTmlExpressionRule()); } 
	 EOF 
;

// Rule ExistsTmlExpression
ruleExistsTmlExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExistsTmlExpressionAccess().getGroup()); }
(rule__ExistsTmlExpression__Group__0)
{ after(grammarAccess.getExistsTmlExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMapGetReference
entryRuleMapGetReference 
:
{ before(grammarAccess.getMapGetReferenceRule()); }
	 ruleMapGetReference
{ after(grammarAccess.getMapGetReferenceRule()); } 
	 EOF 
;

// Rule MapGetReference
ruleMapGetReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMapGetReferenceAccess().getGroup()); }
(rule__MapGetReference__Group__0)
{ after(grammarAccess.getMapGetReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpression
entryRuleOrExpression 
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
(rule__OrExpression__Group__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpression
entryRuleAndExpression 
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression 
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
(rule__EqualityExpression__Group__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression 
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
(rule__AdditiveExpression__Group__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression 
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
(rule__MultiplicativeExpression__Group__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression 
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
(rule__UnaryExpression__Alternatives)
{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionName
entryRuleFunctionName 
:
{ before(grammarAccess.getFunctionNameRule()); }
	 ruleFunctionName
{ after(grammarAccess.getFunctionNameRule()); } 
	 EOF 
;

// Rule FunctionName
ruleFunctionName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionNameAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getFunctionNameAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionCall
entryRuleFunctionCall 
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
(rule__FunctionCall__Group__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Tml__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getGroup_3_0()); }
(rule__Tml__Group_3_0__0)
{ after(grammarAccess.getTmlAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getTmlAccess().getSolidusGreaterThanSignKeyword_3_1()); }

	'/>' 

{ after(grammarAccess.getTmlAccess().getSolidusGreaterThanSignKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__Alternatives_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getChildrenAssignment_3_0_1_0()); }
(rule__Tml__ChildrenAssignment_3_0_1_0)
{ after(grammarAccess.getTmlAccess().getChildrenAssignment_3_0_1_0()); }
)

    |(
{ before(grammarAccess.getTmlAccess().getChildrenAssignment_3_0_1_1()); }
(rule__Tml__ChildrenAssignment_3_0_1_1)
{ after(grammarAccess.getTmlAccess().getChildrenAssignment_3_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getGroup_2_0()); }
(rule__PossibleExpression__Group_2_0__0)
{ after(grammarAccess.getPossibleExpressionAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getPossibleExpressionAccess().getValueAssignment_2_1()); }
(rule__PossibleExpression__ValueAssignment_2_1)
{ after(grammarAccess.getPossibleExpressionAccess().getValueAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getPossibleExpressionAccess().getEMPTYSTRINGTerminalRuleCall_2_2()); }
	RULE_EMPTYSTRING
{ after(grammarAccess.getPossibleExpressionAccess().getEMPTYSTRINGTerminalRuleCall_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getGroup_3_0()); }
(rule__Message__Group_3_0__0)
{ after(grammarAccess.getMessageAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getMessageAccess().getSolidusGreaterThanSignKeyword_3_1()); }

	'/>' 

{ after(grammarAccess.getMessageAccess().getSolidusGreaterThanSignKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Alternatives_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getChildrenAssignment_3_0_1_0()); }
(rule__Message__ChildrenAssignment_3_0_1_0)
{ after(grammarAccess.getMessageAccess().getChildrenAssignment_3_0_1_0()); }
)

    |(
{ before(grammarAccess.getMessageAccess().getChildrenAssignment_3_0_1_1()); }
(rule__Message__ChildrenAssignment_3_0_1_1)
{ after(grammarAccess.getMessageAccess().getChildrenAssignment_3_0_1_1()); }
)

    |(
{ before(grammarAccess.getMessageAccess().getChildrenAssignment_3_0_1_2()); }
(rule__Message__ChildrenAssignment_3_0_1_2)
{ after(grammarAccess.getMessageAccess().getChildrenAssignment_3_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getSolidusGreaterThanSignKeyword_1_0()); }

	'/>' 

{ after(grammarAccess.getMapAccess().getSolidusGreaterThanSignKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getMapAccess().getGroup_1_1()); }
(rule__Map__Group_1_1__0)
{ after(grammarAccess.getMapAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Alternatives_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getChildrenAssignment_1_1_1_0()); }
(rule__Map__ChildrenAssignment_1_1_1_0)
{ after(grammarAccess.getMapAccess().getChildrenAssignment_1_1_1_0()); }
)

    |(
{ before(grammarAccess.getMapAccess().getChildrenAssignment_1_1_1_1()); }
(rule__Map__ChildrenAssignment_1_1_1_1)
{ after(grammarAccess.getMapAccess().getChildrenAssignment_1_1_1_1()); }
)

    |(
{ before(grammarAccess.getMapAccess().getChildrenAssignment_1_1_1_2()); }
(rule__Map__ChildrenAssignment_1_1_1_2)
{ after(grammarAccess.getMapAccess().getChildrenAssignment_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getSolidusGreaterThanSignKeyword_3_0()); }

	'/>' 

{ after(grammarAccess.getPropertyAccess().getSolidusGreaterThanSignKeyword_3_0()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getGroup_3_1()); }
(rule__Property__Group_3_1__0)
{ after(grammarAccess.getPropertyAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathElementAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getPathElementAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPathElementAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getPathElementAccess().getFullStopKeyword_1()); }
)

    |(
{ before(grammarAccess.getPathElementAccess().getFullStopFullStopKeyword_2()); }

	'..' 

{ after(grammarAccess.getPathElementAccess().getFullStopFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1_0()); }
(rule__EqualityExpression__Group_1_0__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1_1()); }
(rule__EqualityExpression__Group_1_1__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0()); }
(rule__AdditiveExpression__Group_1_0__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1_1()); }
(rule__AdditiveExpression__Group_1_1__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0()); }
(rule__MultiplicativeExpression__Group_1_0__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_1()); }
(rule__MultiplicativeExpression__Group_1_1__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
(rule__UnaryExpression__Group_0__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_1()); }
	rulePrimaryExpression
{ after(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getParametersAssignment_0()); }
(rule__PrimaryExpression__ParametersAssignment_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getParametersAssignment_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
(rule__PrimaryExpression__Group_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getGroup_0()); }
(rule__Literal__Group_0__0)
{ after(grammarAccess.getLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getValueStringAssignment_1()); }
(rule__Literal__ValueStringAssignment_1)
{ after(grammarAccess.getLiteralAccess().getValueStringAssignment_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_2()); }
(rule__Literal__Group_2__0)
{ after(grammarAccess.getLiteralAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getFunctionCallParserRuleCall_3()); }
	ruleFunctionCall
{ after(grammarAccess.getLiteralAccess().getFunctionCallParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_4()); }
(rule__Literal__Group_4__0)
{ after(grammarAccess.getLiteralAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getElementsAssignment_5()); }
(rule__Literal__ElementsAssignment_5)
{ after(grammarAccess.getLiteralAccess().getElementsAssignment_5()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getElementsAssignment_6()); }
(rule__Literal__ElementsAssignment_6)
{ after(grammarAccess.getLiteralAccess().getElementsAssignment_6()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getElementsAssignment_7()); }
(rule__Literal__ElementsAssignment_7)
{ after(grammarAccess.getLiteralAccess().getElementsAssignment_7()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getElementsAssignment_8()); }
(rule__Literal__ElementsAssignment_8)
{ after(grammarAccess.getLiteralAccess().getElementsAssignment_8()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getParametersAssignment_9()); }
(rule__Literal__ParametersAssignment_9)
{ after(grammarAccess.getLiteralAccess().getParametersAssignment_9()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getParametersAssignment_10()); }
(rule__Literal__ParametersAssignment_10)
{ after(grammarAccess.getLiteralAccess().getParametersAssignment_10()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getParametersAssignment_11()); }
(rule__Literal__ParametersAssignment_11)
{ after(grammarAccess.getLiteralAccess().getParametersAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Tml__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tml__Group__0__Impl
	rule__Tml__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getNavascriptKeyword_0()); }

	'<navascript' 

{ after(grammarAccess.getTmlAccess().getNavascriptKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tml__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tml__Group__1__Impl
	rule__Tml__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getTmlAction_1()); }
(

)
{ after(grammarAccess.getTmlAccess().getTmlAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tml__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tml__Group__2__Impl
	rule__Tml__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getAttributesAssignment_2()); }
(rule__Tml__AttributesAssignment_2)*
{ after(grammarAccess.getTmlAccess().getAttributesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tml__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tml__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getAlternatives_3()); }
(rule__Tml__Alternatives_3)
{ after(grammarAccess.getTmlAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Tml__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tml__Group_3_0__0__Impl
	rule__Tml__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getGreaterThanSignKeyword_3_0_0()); }

	'>' 

{ after(grammarAccess.getTmlAccess().getGreaterThanSignKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tml__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tml__Group_3_0__1__Impl
	rule__Tml__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getAlternatives_3_0_1()); }
(rule__Tml__Alternatives_3_0_1)*
{ after(grammarAccess.getTmlAccess().getAlternatives_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tml__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tml__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getNavascriptKeyword_3_0_2()); }

	'</navascript>' 

{ after(grammarAccess.getTmlAccess().getNavascriptKeyword_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PossibleExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PossibleExpression__Group__0__Impl
	rule__PossibleExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getKeyAssignment_0()); }
(rule__PossibleExpression__KeyAssignment_0)
{ after(grammarAccess.getPossibleExpressionAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PossibleExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PossibleExpression__Group__1__Impl
	rule__PossibleExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getPossibleExpressionAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PossibleExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PossibleExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getAlternatives_2()); }
(rule__PossibleExpression__Alternatives_2)
{ after(grammarAccess.getPossibleExpressionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PossibleExpression__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PossibleExpression__Group_2_0__0__Impl
	rule__PossibleExpression__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getQUOTEQTerminalRuleCall_2_0_0()); }
	RULE_QUOTEQ
{ after(grammarAccess.getPossibleExpressionAccess().getQUOTEQTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PossibleExpression__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PossibleExpression__Group_2_0__1__Impl
	rule__PossibleExpression__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getExpressionValueAssignment_2_0_1()); }
(rule__PossibleExpression__ExpressionValueAssignment_2_0_1)
{ after(grammarAccess.getPossibleExpressionAccess().getExpressionValueAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PossibleExpression__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PossibleExpression__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getSemicolonQuotationMarkKeyword_2_0_2()); }

	';"' 

{ after(grammarAccess.getPossibleExpressionAccess().getSemicolonQuotationMarkKeyword_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Message__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__0__Impl
	rule__Message__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getMessageKeyword_0()); }

	'<message' 

{ after(grammarAccess.getMessageAccess().getMessageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__1__Impl
	rule__Message__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getMessageAction_1()); }
(

)
{ after(grammarAccess.getMessageAccess().getMessageAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__2__Impl
	rule__Message__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getAttributesAssignment_2()); }
(rule__Message__AttributesAssignment_2)*
{ after(grammarAccess.getMessageAccess().getAttributesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getAlternatives_3()); }
(rule__Message__Alternatives_3)
{ after(grammarAccess.getMessageAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Message__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group_3_0__0__Impl
	rule__Message__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getGreaterThanSignKeyword_3_0_0()); }

	'>' 

{ after(grammarAccess.getMessageAccess().getGreaterThanSignKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group_3_0__1__Impl
	rule__Message__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getAlternatives_3_0_1()); }
(rule__Message__Alternatives_3_0_1)*
{ after(grammarAccess.getMessageAccess().getAlternatives_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getMessageKeyword_3_0_2()); }

	'</message>' 

{ after(grammarAccess.getMessageAccess().getMessageKeyword_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Map__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group__0__Impl
	rule__Map__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getMapStartParserRuleCall_0()); }
	ruleMapStart
{ after(grammarAccess.getMapAccess().getMapStartParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getAlternatives_1()); }
(rule__Map__Alternatives_1)
{ after(grammarAccess.getMapAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Map__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group_1_1__0__Impl
	rule__Map__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getGreaterThanSignKeyword_1_1_0()); }

	'>' 

{ after(grammarAccess.getMapAccess().getGreaterThanSignKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group_1_1__1__Impl
	rule__Map__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getAlternatives_1_1_1()); }
(rule__Map__Alternatives_1_1_1)*
{ after(grammarAccess.getMapAccess().getAlternatives_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group_1_1__2__Impl
	rule__Map__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getMapKeyword_1_1_2()); }

	'</map.' 

{ after(grammarAccess.getMapAccess().getMapKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group_1_1__3__Impl
	rule__Map__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getMapClosingNameAssignment_1_1_3()); }
(rule__Map__MapClosingNameAssignment_1_1_3)
{ after(grammarAccess.getMapAccess().getMapClosingNameAssignment_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getGreaterThanSignKeyword_1_1_4()); }

	'>' 

{ after(grammarAccess.getMapAccess().getGreaterThanSignKeyword_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MapStart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapStart__Group__0__Impl
	rule__MapStart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapStart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapStartAccess().getMapAction_0()); }
(

)
{ after(grammarAccess.getMapStartAccess().getMapAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapStart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapStart__Group__1__Impl
	rule__MapStart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapStart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapStartAccess().getMapKeyword_1()); }

	'<map.' 

{ after(grammarAccess.getMapStartAccess().getMapKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapStart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapStart__Group__2__Impl
	rule__MapStart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapStart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapStartAccess().getMapNameAssignment_2()); }
(rule__MapStart__MapNameAssignment_2)
{ after(grammarAccess.getMapStartAccess().getMapNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapStart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapStart__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapStart__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapStartAccess().getAttributesAssignment_3()); }
(rule__MapStart__AttributesAssignment_3)*
{ after(grammarAccess.getMapStartAccess().getAttributesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Property__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getPropertyKeyword_0()); }

	'<property' 

{ after(grammarAccess.getPropertyAccess().getPropertyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getPropertyAction_1()); }
(

)
{ after(grammarAccess.getPropertyAccess().getPropertyAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__2__Impl
	rule__Property__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getAttributesAssignment_2()); }
(rule__Property__AttributesAssignment_2)*
{ after(grammarAccess.getPropertyAccess().getAttributesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getAlternatives_3()); }
(rule__Property__Alternatives_3)
{ after(grammarAccess.getPropertyAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Property__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_3_1__0__Impl
	rule__Property__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getGreaterThanSignKeyword_3_1_0()); }

	'>' 

{ after(grammarAccess.getPropertyAccess().getGreaterThanSignKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_3_1__1__Impl
	rule__Property__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getExpressionValueAssignment_3_1_1()); }
(rule__Property__ExpressionValueAssignment_3_1_1)?
{ after(grammarAccess.getPropertyAccess().getExpressionValueAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getPropertyKeyword_3_1_2()); }

	'</property>' 

{ after(grammarAccess.getPropertyAccess().getPropertyKeyword_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExpressionTag__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionTag__Group__0__Impl
	rule__ExpressionTag__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTag__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionTagAccess().getExpressionKeyword_0()); }

	'<expression>' 

{ after(grammarAccess.getExpressionTagAccess().getExpressionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionTag__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionTag__Group__1__Impl
	rule__ExpressionTag__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTag__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionTagAccess().getExpressionAssignment_1()); }
(rule__ExpressionTag__ExpressionAssignment_1)
{ after(grammarAccess.getExpressionTagAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionTag__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionTag__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTag__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionTagAccess().getExpressionKeyword_2()); }

	'</expression>' 

{ after(grammarAccess.getExpressionTagAccess().getExpressionKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TmlExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TmlExpression__Group__0__Impl
	rule__TmlExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TmlExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlExpressionAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getTmlExpressionAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TmlExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TmlExpression__Group__1__Impl
	rule__TmlExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TmlExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlExpressionAccess().getAbsoluteAssignment_1()); }
(rule__TmlExpression__AbsoluteAssignment_1)?
{ after(grammarAccess.getTmlExpressionAccess().getAbsoluteAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TmlExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TmlExpression__Group__2__Impl
	rule__TmlExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TmlExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlExpressionAccess().getElementsAssignment_2()); }
(rule__TmlExpression__ElementsAssignment_2)
{ after(grammarAccess.getTmlExpressionAccess().getElementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TmlExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TmlExpression__Group__3__Impl
	rule__TmlExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TmlExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlExpressionAccess().getGroup_3()); }
(rule__TmlExpression__Group_3__0)*
{ after(grammarAccess.getTmlExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TmlExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TmlExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TmlExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlExpressionAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getTmlExpressionAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TmlExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TmlExpression__Group_3__0__Impl
	rule__TmlExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TmlExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlExpressionAccess().getSolidusKeyword_3_0()); }

	'/' 

{ after(grammarAccess.getTmlExpressionAccess().getSolidusKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TmlExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TmlExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TmlExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlExpressionAccess().getElementsAssignment_3_1()); }
(rule__TmlExpression__ElementsAssignment_3_1)
{ after(grammarAccess.getTmlExpressionAccess().getElementsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExistsTmlExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsTmlExpression__Group__0__Impl
	rule__ExistsTmlExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTmlExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsTmlExpressionAccess().getQuestionMarkKeyword_0()); }

	'?' 

{ after(grammarAccess.getExistsTmlExpressionAccess().getQuestionMarkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsTmlExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsTmlExpression__Group__1__Impl
	rule__ExistsTmlExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTmlExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsTmlExpressionAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getExistsTmlExpressionAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsTmlExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsTmlExpression__Group__2__Impl
	rule__ExistsTmlExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTmlExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsTmlExpressionAccess().getAbsoluteAssignment_2()); }
(rule__ExistsTmlExpression__AbsoluteAssignment_2)?
{ after(grammarAccess.getExistsTmlExpressionAccess().getAbsoluteAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsTmlExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsTmlExpression__Group__3__Impl
	rule__ExistsTmlExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTmlExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsTmlExpressionAccess().getElementsAssignment_3()); }
(rule__ExistsTmlExpression__ElementsAssignment_3)
{ after(grammarAccess.getExistsTmlExpressionAccess().getElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsTmlExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsTmlExpression__Group__4__Impl
	rule__ExistsTmlExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTmlExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsTmlExpressionAccess().getGroup_4()); }
(rule__ExistsTmlExpression__Group_4__0)*
{ after(grammarAccess.getExistsTmlExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsTmlExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsTmlExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTmlExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsTmlExpressionAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getExistsTmlExpressionAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ExistsTmlExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsTmlExpression__Group_4__0__Impl
	rule__ExistsTmlExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTmlExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsTmlExpressionAccess().getSolidusKeyword_4_0()); }

	'/' 

{ after(grammarAccess.getExistsTmlExpressionAccess().getSolidusKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsTmlExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsTmlExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTmlExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsTmlExpressionAccess().getElementsAssignment_4_1()); }
(rule__ExistsTmlExpression__ElementsAssignment_4_1)
{ after(grammarAccess.getExistsTmlExpressionAccess().getElementsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MapGetReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapGetReference__Group__0__Impl
	rule__MapGetReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapGetReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapGetReferenceAccess().getOperationsAssignment_0()); }
(rule__MapGetReference__OperationsAssignment_0)
{ after(grammarAccess.getMapGetReferenceAccess().getOperationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapGetReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapGetReference__Group__1__Impl
	rule__MapGetReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapGetReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapGetReferenceAccess().getElementsAssignment_1()); }
(rule__MapGetReference__ElementsAssignment_1)
{ after(grammarAccess.getMapGetReferenceAccess().getElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapGetReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapGetReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapGetReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapGetReferenceAccess().getGroup_2()); }
(rule__MapGetReference__Group_2__0)*
{ after(grammarAccess.getMapGetReferenceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MapGetReference__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapGetReference__Group_2__0__Impl
	rule__MapGetReference__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapGetReference__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapGetReferenceAccess().getSolidusKeyword_2_0()); }

	'/' 

{ after(grammarAccess.getMapGetReferenceAccess().getSolidusKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapGetReference__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapGetReference__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapGetReference__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapGetReferenceAccess().getElementsAssignment_2_1()); }
(rule__MapGetReference__ElementsAssignment_2_1)
{ after(grammarAccess.getMapGetReferenceAccess().getElementsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getParametersAssignment_0()); }
(rule__OrExpression__ParametersAssignment_0)
{ after(grammarAccess.getOrExpressionAccess().getParametersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
(rule__OrExpression__Group_1__0)*
{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOperationsAssignment_1_0()); }
(rule__OrExpression__OperationsAssignment_1_0)
{ after(grammarAccess.getOrExpressionAccess().getOperationsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getParametersAssignment_1_1()); }
(rule__OrExpression__ParametersAssignment_1_1)
{ after(grammarAccess.getOrExpressionAccess().getParametersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getParametersAssignment_0()); }
(rule__AndExpression__ParametersAssignment_0)
{ after(grammarAccess.getAndExpressionAccess().getParametersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
(rule__AndExpression__Group_1__0)*
{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperationsAssignment_1_0()); }
(rule__AndExpression__OperationsAssignment_1_0)
{ after(grammarAccess.getAndExpressionAccess().getOperationsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getParametersAssignment_1_1()); }
(rule__AndExpression__ParametersAssignment_1_1)
{ after(grammarAccess.getAndExpressionAccess().getParametersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getParametersAssignment_0()); }
(rule__EqualityExpression__ParametersAssignment_0)
{ after(grammarAccess.getEqualityExpressionAccess().getParametersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getAlternatives_1()); }
(rule__EqualityExpression__Alternatives_1)?
{ after(grammarAccess.getEqualityExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1_0__0__Impl
	rule__EqualityExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOperationsAssignment_1_0_0()); }
(rule__EqualityExpression__OperationsAssignment_1_0_0)
{ after(grammarAccess.getEqualityExpressionAccess().getOperationsAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getParametersAssignment_1_0_1()); }
(rule__EqualityExpression__ParametersAssignment_1_0_1)
{ after(grammarAccess.getEqualityExpressionAccess().getParametersAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1_1__0__Impl
	rule__EqualityExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOperationsAssignment_1_1_0()); }
(rule__EqualityExpression__OperationsAssignment_1_1_0)
{ after(grammarAccess.getEqualityExpressionAccess().getOperationsAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getParametersAssignment_1_1_1()); }
(rule__EqualityExpression__ParametersAssignment_1_1_1)
{ after(grammarAccess.getEqualityExpressionAccess().getParametersAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getParametersAssignment_0()); }
(rule__AdditiveExpression__ParametersAssignment_0)
{ after(grammarAccess.getAdditiveExpressionAccess().getParametersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getAlternatives_1()); }
(rule__AdditiveExpression__Alternatives_1)*
{ after(grammarAccess.getAdditiveExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1_0__0__Impl
	rule__AdditiveExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getPlusSignKeyword_1_0_0()); }

	'+' 

{ after(grammarAccess.getAdditiveExpressionAccess().getPlusSignKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getParametersAssignment_1_0_1()); }
(rule__AdditiveExpression__ParametersAssignment_1_0_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getParametersAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1_1__0__Impl
	rule__AdditiveExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getHyphenMinusKeyword_1_1_0()); }

	'-' 

{ after(grammarAccess.getAdditiveExpressionAccess().getHyphenMinusKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getParametersAssignment_1_1_1()); }
(rule__AdditiveExpression__ParametersAssignment_1_1_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getParametersAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getParametersAssignment_0()); }
(rule__MultiplicativeExpression__ParametersAssignment_0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getParametersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getAlternatives_1()); }
(rule__MultiplicativeExpression__Alternatives_1)*
{ after(grammarAccess.getMultiplicativeExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1_0__0__Impl
	rule__MultiplicativeExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperationsAssignment_1_0_0()); }
(rule__MultiplicativeExpression__OperationsAssignment_1_0_0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperationsAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getParametersAssignment_1_0_1()); }
(rule__MultiplicativeExpression__ParametersAssignment_1_0_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getParametersAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1_1__0__Impl
	rule__MultiplicativeExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperationsAssignment_1_1_0()); }
(rule__MultiplicativeExpression__OperationsAssignment_1_1_0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperationsAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getParametersAssignment_1_1_1()); }
(rule__MultiplicativeExpression__ParametersAssignment_1_1_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getParametersAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_0__0__Impl
	rule__UnaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOperationsAssignment_0_0()); }
(rule__UnaryExpression__OperationsAssignment_0_0)
{ after(grammarAccess.getUnaryExpressionAccess().getOperationsAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getParametersAssignment_0_1()); }
(rule__UnaryExpression__ParametersAssignment_0_1)
{ after(grammarAccess.getUnaryExpressionAccess().getParametersAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__1__Impl
	rule__PrimaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getParametersAssignment_1_1()); }
(rule__PrimaryExpression__ParametersAssignment_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getParametersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getNameAssignment_0()); }
(rule__FunctionCall__NameAssignment_0)
{ after(grammarAccess.getFunctionCallAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersAssignment_2()); }
(rule__FunctionCall__ParametersAssignment_2)?
{ after(grammarAccess.getFunctionCallAccess().getParametersAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__3__Impl
	rule__FunctionCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_3()); }
(rule__FunctionCall__Group_3__0)*
{ after(grammarAccess.getFunctionCallAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionCall__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_3__0__Impl
	rule__FunctionCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getFunctionCallAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersAssignment_3_1()); }
(rule__FunctionCall__ParametersAssignment_3_1)
{ after(grammarAccess.getFunctionCallAccess().getParametersAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_0__0__Impl
	rule__Literal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getINTTerminalRuleCall_0_1()); }
	RULE_INT
{ after(grammarAccess.getLiteralAccess().getINTTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_2__0__Impl
	rule__Literal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getOperationsAssignment_2_0()); }
(rule__Literal__OperationsAssignment_2_0)
{ after(grammarAccess.getLiteralAccess().getOperationsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_2__1__Impl
	rule__Literal__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getLeftParenthesisKeyword_2_1()); }

	'(' 

{ after(grammarAccess.getLiteralAccess().getLeftParenthesisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_2__2__Impl
	rule__Literal__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueStringAssignment_2_2()); }
(rule__Literal__ValueStringAssignment_2_2)
{ after(grammarAccess.getLiteralAccess().getValueStringAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_2__3__Impl
	rule__Literal__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getCommaKeyword_2_3()); }

	',' 

{ after(grammarAccess.getLiteralAccess().getCommaKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_2__4__Impl
	rule__Literal__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getParametersAssignment_2_4()); }
(rule__Literal__ParametersAssignment_2_4)
{ after(grammarAccess.getLiteralAccess().getParametersAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getRightParenthesisKeyword_2_5()); }

	')' 

{ after(grammarAccess.getLiteralAccess().getRightParenthesisKeyword_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Literal__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_4__0__Impl
	rule__Literal__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getExpressionTypeAssignment_4_0()); }
(rule__Literal__ExpressionTypeAssignment_4_0)
{ after(grammarAccess.getLiteralAccess().getExpressionTypeAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_4__1__Impl
	rule__Literal__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getParametersAssignment_4_1()); }
(rule__Literal__ParametersAssignment_4_1)?
{ after(grammarAccess.getLiteralAccess().getParametersAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_4__2__Impl
	rule__Literal__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getGroup_4_2()); }
(rule__Literal__Group_4_2__0)*
{ after(grammarAccess.getLiteralAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getRightCurlyBracketKeyword_4_3()); }

	'}' 

{ after(grammarAccess.getLiteralAccess().getRightCurlyBracketKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Literal__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_4_2__0__Impl
	rule__Literal__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getLiteralAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getParametersAssignment_4_2_1()); }
(rule__Literal__ParametersAssignment_4_2_1)
{ after(grammarAccess.getLiteralAccess().getParametersAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Tml__AttributesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); }
	rulePossibleExpression{ after(grammarAccess.getTmlAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__ChildrenAssignment_3_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getChildrenMessageParserRuleCall_3_0_1_0_0()); }
	ruleMessage{ after(grammarAccess.getTmlAccess().getChildrenMessageParserRuleCall_3_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__ChildrenAssignment_3_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getChildrenMapParserRuleCall_3_0_1_1_0()); }
	ruleMap{ after(grammarAccess.getTmlAccess().getChildrenMapParserRuleCall_3_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getKeyIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getPossibleExpressionAccess().getKeyIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__ExpressionValueAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getExpressionValueTopLevelParserRuleCall_2_0_1_0()); }
	ruleTopLevel{ after(grammarAccess.getPossibleExpressionAccess().getExpressionValueTopLevelParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getValueATTRIBUTESTRINGTerminalRuleCall_2_1_0()); }
	RULE_ATTRIBUTESTRING{ after(grammarAccess.getPossibleExpressionAccess().getValueATTRIBUTESTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__AttributesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); }
	rulePossibleExpression{ after(grammarAccess.getMessageAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__ChildrenAssignment_3_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getChildrenMessageParserRuleCall_3_0_1_0_0()); }
	ruleMessage{ after(grammarAccess.getMessageAccess().getChildrenMessageParserRuleCall_3_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__ChildrenAssignment_3_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getChildrenPropertyParserRuleCall_3_0_1_1_0()); }
	ruleProperty{ after(grammarAccess.getMessageAccess().getChildrenPropertyParserRuleCall_3_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__ChildrenAssignment_3_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getChildrenMapParserRuleCall_3_0_1_2_0()); }
	ruleMap{ after(grammarAccess.getMessageAccess().getChildrenMapParserRuleCall_3_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__ChildrenAssignment_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getChildrenMessageParserRuleCall_1_1_1_0_0()); }
	ruleMessage{ after(grammarAccess.getMapAccess().getChildrenMessageParserRuleCall_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__ChildrenAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getChildrenPropertyParserRuleCall_1_1_1_1_0()); }
	ruleProperty{ after(grammarAccess.getMapAccess().getChildrenPropertyParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__ChildrenAssignment_1_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getChildrenMapParserRuleCall_1_1_1_2_0()); }
	ruleMap{ after(grammarAccess.getMapAccess().getChildrenMapParserRuleCall_1_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__MapClosingNameAssignment_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getMapClosingNameIDTerminalRuleCall_1_1_3_0()); }
	RULE_ID{ after(grammarAccess.getMapAccess().getMapClosingNameIDTerminalRuleCall_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapStart__MapNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapStartAccess().getMapNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getMapStartAccess().getMapNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapStart__AttributesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapStartAccess().getAttributesPossibleExpressionParserRuleCall_3_0()); }
	rulePossibleExpression{ after(grammarAccess.getMapStartAccess().getAttributesPossibleExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__AttributesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); }
	rulePossibleExpression{ after(grammarAccess.getPropertyAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ExpressionValueAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getExpressionValueExpressionTagParserRuleCall_3_1_1_0()); }
	ruleExpressionTag{ after(grammarAccess.getPropertyAccess().getExpressionValueExpressionTagParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTag__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionTagAccess().getExpressionTopLevelParserRuleCall_1_0()); }
	ruleTopLevel{ after(grammarAccess.getExpressionTagAccess().getExpressionTopLevelParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevel__ToplevelExpressionAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelAccess().getToplevelExpressionOrExpressionParserRuleCall_0()); }
	ruleOrExpression{ after(grammarAccess.getTopLevelAccess().getToplevelExpressionOrExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TmlExpression__AbsoluteAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlExpressionAccess().getAbsoluteSolidusKeyword_1_0()); }
(
{ before(grammarAccess.getTmlExpressionAccess().getAbsoluteSolidusKeyword_1_0()); }

	'/' 

{ after(grammarAccess.getTmlExpressionAccess().getAbsoluteSolidusKeyword_1_0()); }
)

{ after(grammarAccess.getTmlExpressionAccess().getAbsoluteSolidusKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TmlExpression__ElementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlExpressionAccess().getElementsPathElementParserRuleCall_2_0()); }
	rulePathElement{ after(grammarAccess.getTmlExpressionAccess().getElementsPathElementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TmlExpression__ElementsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlExpressionAccess().getElementsPathElementParserRuleCall_3_1_0()); }
	rulePathElement{ after(grammarAccess.getTmlExpressionAccess().getElementsPathElementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTmlExpression__AbsoluteAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsTmlExpressionAccess().getAbsoluteSolidusKeyword_2_0()); }
(
{ before(grammarAccess.getExistsTmlExpressionAccess().getAbsoluteSolidusKeyword_2_0()); }

	'/' 

{ after(grammarAccess.getExistsTmlExpressionAccess().getAbsoluteSolidusKeyword_2_0()); }
)

{ after(grammarAccess.getExistsTmlExpressionAccess().getAbsoluteSolidusKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTmlExpression__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsTmlExpressionAccess().getElementsPathElementParserRuleCall_3_0()); }
	rulePathElement{ after(grammarAccess.getExistsTmlExpressionAccess().getElementsPathElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTmlExpression__ElementsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsTmlExpressionAccess().getElementsPathElementParserRuleCall_4_1_0()); }
	rulePathElement{ after(grammarAccess.getExistsTmlExpressionAccess().getElementsPathElementParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapGetReference__OperationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapGetReferenceAccess().getOperationsDollarSignKeyword_0_0()); }
(
{ before(grammarAccess.getMapGetReferenceAccess().getOperationsDollarSignKeyword_0_0()); }

	'$' 

{ after(grammarAccess.getMapGetReferenceAccess().getOperationsDollarSignKeyword_0_0()); }
)

{ after(grammarAccess.getMapGetReferenceAccess().getOperationsDollarSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapGetReference__ElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapGetReferenceAccess().getElementsPathElementParserRuleCall_1_0()); }
	rulePathElement{ after(grammarAccess.getMapGetReferenceAccess().getElementsPathElementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapGetReference__ElementsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapGetReferenceAccess().getElementsPathElementParserRuleCall_2_1_0()); }
	rulePathElement{ after(grammarAccess.getMapGetReferenceAccess().getElementsPathElementParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__ParametersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getParametersAndExpressionParserRuleCall_0_0()); }
	ruleAndExpression{ after(grammarAccess.getOrExpressionAccess().getParametersAndExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OperationsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOperationsORKeyword_1_0_0()); }
(
{ before(grammarAccess.getOrExpressionAccess().getOperationsORKeyword_1_0_0()); }

	'OR' 

{ after(grammarAccess.getOrExpressionAccess().getOperationsORKeyword_1_0_0()); }
)

{ after(grammarAccess.getOrExpressionAccess().getOperationsORKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__ParametersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getParametersAndExpressionParserRuleCall_1_1_0()); }
	ruleAndExpression{ after(grammarAccess.getOrExpressionAccess().getParametersAndExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__ParametersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getParametersEqualityExpressionParserRuleCall_0_0()); }
	ruleEqualityExpression{ after(grammarAccess.getAndExpressionAccess().getParametersEqualityExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OperationsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperationsANDKeyword_1_0_0()); }
(
{ before(grammarAccess.getAndExpressionAccess().getOperationsANDKeyword_1_0_0()); }

	'AND' 

{ after(grammarAccess.getAndExpressionAccess().getOperationsANDKeyword_1_0_0()); }
)

{ after(grammarAccess.getAndExpressionAccess().getOperationsANDKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__ParametersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getParametersEqualityExpressionParserRuleCall_1_1_0()); }
	ruleEqualityExpression{ after(grammarAccess.getAndExpressionAccess().getParametersEqualityExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__ParametersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getParametersAdditiveExpressionParserRuleCall_0_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getEqualityExpressionAccess().getParametersAdditiveExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OperationsAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOperationsEqualsSignEqualsSignKeyword_1_0_0_0()); }
(
{ before(grammarAccess.getEqualityExpressionAccess().getOperationsEqualsSignEqualsSignKeyword_1_0_0_0()); }

	'==' 

{ after(grammarAccess.getEqualityExpressionAccess().getOperationsEqualsSignEqualsSignKeyword_1_0_0_0()); }
)

{ after(grammarAccess.getEqualityExpressionAccess().getOperationsEqualsSignEqualsSignKeyword_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__ParametersAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getParametersAdditiveExpressionParserRuleCall_1_0_1_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getEqualityExpressionAccess().getParametersAdditiveExpressionParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OperationsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOperationsExclamationMarkEqualsSignKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getEqualityExpressionAccess().getOperationsExclamationMarkEqualsSignKeyword_1_1_0_0()); }

	'!=' 

{ after(grammarAccess.getEqualityExpressionAccess().getOperationsExclamationMarkEqualsSignKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getEqualityExpressionAccess().getOperationsExclamationMarkEqualsSignKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__ParametersAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getParametersAdditiveExpressionParserRuleCall_1_1_1_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getEqualityExpressionAccess().getParametersAdditiveExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__ParametersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getParametersMultiplicativeExpressionParserRuleCall_0_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getParametersMultiplicativeExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__ParametersAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getParametersMultiplicativeExpressionParserRuleCall_1_0_1_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getParametersMultiplicativeExpressionParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__ParametersAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getParametersMultiplicativeExpressionParserRuleCall_1_1_1_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getParametersMultiplicativeExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__ParametersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getParametersUnaryExpressionParserRuleCall_0_0()); }
	ruleUnaryExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getParametersUnaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OperationsAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperationsAsteriskKeyword_1_0_0_0()); }
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperationsAsteriskKeyword_1_0_0_0()); }

	'*' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperationsAsteriskKeyword_1_0_0_0()); }
)

{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperationsAsteriskKeyword_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__ParametersAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getParametersUnaryExpressionParserRuleCall_1_0_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getParametersUnaryExpressionParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OperationsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperationsSolidusKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperationsSolidusKeyword_1_1_0_0()); }

	'/' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperationsSolidusKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperationsSolidusKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__ParametersAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getParametersUnaryExpressionParserRuleCall_1_1_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getParametersUnaryExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OperationsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOperationsExclamationMarkKeyword_0_0_0()); }
(
{ before(grammarAccess.getUnaryExpressionAccess().getOperationsExclamationMarkKeyword_0_0_0()); }

	'!' 

{ after(grammarAccess.getUnaryExpressionAccess().getOperationsExclamationMarkKeyword_0_0_0()); }
)

{ after(grammarAccess.getUnaryExpressionAccess().getOperationsExclamationMarkKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ParametersAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getParametersPrimaryExpressionParserRuleCall_0_1_0()); }
	rulePrimaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getParametersPrimaryExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ParametersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getParametersLiteralParserRuleCall_0_0()); }
	ruleLiteral{ after(grammarAccess.getPrimaryExpressionAccess().getParametersLiteralParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ParametersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getParametersOrExpressionParserRuleCall_1_1_0()); }
	ruleOrExpression{ after(grammarAccess.getPrimaryExpressionAccess().getParametersOrExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getNameFunctionNameParserRuleCall_0_0()); }
	ruleFunctionName{ after(grammarAccess.getFunctionCallAccess().getNameFunctionNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParametersAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersOrExpressionParserRuleCall_2_0()); }
	ruleOrExpression{ after(grammarAccess.getFunctionCallAccess().getParametersOrExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParametersAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersOrExpressionParserRuleCall_3_1_0()); }
	ruleOrExpression{ after(grammarAccess.getFunctionCallAccess().getParametersOrExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValueStringAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueStringLITERALSTRINGTerminalRuleCall_1_0()); }
	RULE_LITERALSTRING{ after(grammarAccess.getLiteralAccess().getValueStringLITERALSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__OperationsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getOperationsFORALLKeyword_2_0_0()); }
(
{ before(grammarAccess.getLiteralAccess().getOperationsFORALLKeyword_2_0_0()); }

	'FORALL' 

{ after(grammarAccess.getLiteralAccess().getOperationsFORALLKeyword_2_0_0()); }
)

{ after(grammarAccess.getLiteralAccess().getOperationsFORALLKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValueStringAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueStringLITERALSTRINGTerminalRuleCall_2_2_0()); }
	RULE_LITERALSTRING{ after(grammarAccess.getLiteralAccess().getValueStringLITERALSTRINGTerminalRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ParametersAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getParametersOrExpressionParserRuleCall_2_4_0()); }
	ruleOrExpression{ after(grammarAccess.getLiteralAccess().getParametersOrExpressionParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ExpressionTypeAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getExpressionTypeLeftCurlyBracketKeyword_4_0_0()); }
(
{ before(grammarAccess.getLiteralAccess().getExpressionTypeLeftCurlyBracketKeyword_4_0_0()); }

	'{' 

{ after(grammarAccess.getLiteralAccess().getExpressionTypeLeftCurlyBracketKeyword_4_0_0()); }
)

{ after(grammarAccess.getLiteralAccess().getExpressionTypeLeftCurlyBracketKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ParametersAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getParametersOrExpressionParserRuleCall_4_1_0()); }
	ruleOrExpression{ after(grammarAccess.getLiteralAccess().getParametersOrExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ParametersAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getParametersOrExpressionParserRuleCall_4_2_1_0()); }
	ruleOrExpression{ after(grammarAccess.getLiteralAccess().getParametersOrExpressionParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ElementsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getElementsNULLKeyword_5_0()); }
(
{ before(grammarAccess.getLiteralAccess().getElementsNULLKeyword_5_0()); }

	'NULL' 

{ after(grammarAccess.getLiteralAccess().getElementsNULLKeyword_5_0()); }
)

{ after(grammarAccess.getLiteralAccess().getElementsNULLKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ElementsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getElementsTODAYKeyword_6_0()); }
(
{ before(grammarAccess.getLiteralAccess().getElementsTODAYKeyword_6_0()); }

	'TODAY' 

{ after(grammarAccess.getLiteralAccess().getElementsTODAYKeyword_6_0()); }
)

{ after(grammarAccess.getLiteralAccess().getElementsTODAYKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ElementsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getElementsTRUEKeyword_7_0()); }
(
{ before(grammarAccess.getLiteralAccess().getElementsTRUEKeyword_7_0()); }

	'TRUE' 

{ after(grammarAccess.getLiteralAccess().getElementsTRUEKeyword_7_0()); }
)

{ after(grammarAccess.getLiteralAccess().getElementsTRUEKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ElementsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getElementsFALSEKeyword_8_0()); }
(
{ before(grammarAccess.getLiteralAccess().getElementsFALSEKeyword_8_0()); }

	'FALSE' 

{ after(grammarAccess.getLiteralAccess().getElementsFALSEKeyword_8_0()); }
)

{ after(grammarAccess.getLiteralAccess().getElementsFALSEKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ParametersAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getParametersTmlExpressionParserRuleCall_9_0()); }
	ruleTmlExpression{ after(grammarAccess.getLiteralAccess().getParametersTmlExpressionParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ParametersAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getParametersExistsTmlExpressionParserRuleCall_10_0()); }
	ruleExistsTmlExpression{ after(grammarAccess.getLiteralAccess().getParametersExistsTmlExpressionParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ParametersAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getParametersMapGetReferenceParserRuleCall_11_0()); }
	ruleMapGetReference{ after(grammarAccess.getLiteralAccess().getParametersMapGetReferenceParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_QUOTEQ : '"=';

RULE_EMPTYSTRING : '""';

RULE_ATTRIBUTESTRING : '"' ~(('='|'"'))* '"';

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_LITERALSTRING : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'';


