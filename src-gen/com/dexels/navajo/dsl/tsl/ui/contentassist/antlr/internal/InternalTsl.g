/*
* generated by Xtext
*/
grammar InternalTsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package com.dexels.navajo.dsl.tsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.dexels.navajo.dsl.tsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.dexels.navajo.dsl.tsl.services.TslGrammarAccess;

}

@parser::members {
 
 	private TslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleTml
entryRuleTml 
:
{ before(grammarAccess.getTmlRule()); }
	 ruleTml
{ after(grammarAccess.getTmlRule()); } 
	 EOF 
;

// Rule Tml
ruleTml
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTmlAccess().getGroup()); }
(rule__Tml__Group__0)
{ after(grammarAccess.getTmlAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePossibleExpression
entryRulePossibleExpression 
:
{ before(grammarAccess.getPossibleExpressionRule()); }
	 rulePossibleExpression
{ after(grammarAccess.getPossibleExpressionRule()); } 
	 EOF 
;

// Rule PossibleExpression
rulePossibleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPossibleExpressionAccess().getGroup()); }
(rule__PossibleExpression__Group__0)
{ after(grammarAccess.getPossibleExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessage
entryRuleMessage 
:
{ before(grammarAccess.getMessageRule()); }
	 ruleMessage
{ after(grammarAccess.getMessageRule()); } 
	 EOF 
;

// Rule Message
ruleMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageAccess().getGroup()); }
(rule__Message__Group__0)
{ after(grammarAccess.getMessageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMap
entryRuleMap 
:
{ before(grammarAccess.getMapRule()); }
	 ruleMap
{ after(grammarAccess.getMapRule()); } 
	 EOF 
;

// Rule Map
ruleMap
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMapAccess().getGroup()); }
(rule__Map__Group__0)
{ after(grammarAccess.getMapAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getGroup()); }
(rule__Property__Group__0)
{ after(grammarAccess.getPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionTag
entryRuleExpressionTag 
:
{ before(grammarAccess.getExpressionTagRule()); }
	 ruleExpressionTag
{ after(grammarAccess.getExpressionTagRule()); } 
	 EOF 
;

// Rule ExpressionTag
ruleExpressionTag
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionTagAccess().getGroup()); }
(rule__ExpressionTag__Group__0)
{ after(grammarAccess.getExpressionTagAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTopLevel
entryRuleTopLevel 
:
{ before(grammarAccess.getTopLevelRule()); }
	 ruleTopLevel
{ after(grammarAccess.getTopLevelRule()); } 
	 EOF 
;

// Rule TopLevel
ruleTopLevel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTopLevelAccess().getGroup()); }
(rule__TopLevel__Group__0)
{ after(grammarAccess.getTopLevelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathElement
entryRulePathElement 
:
{ before(grammarAccess.getPathElementRule()); }
	 rulePathElement
{ after(grammarAccess.getPathElementRule()); } 
	 EOF 
;

// Rule PathElement
rulePathElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathElementAccess().getAlternatives()); }
(rule__PathElement__Alternatives)
{ after(grammarAccess.getPathElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathSequence
entryRulePathSequence 
:
{ before(grammarAccess.getPathSequenceRule()); }
	 rulePathSequence
{ after(grammarAccess.getPathSequenceRule()); } 
	 EOF 
;

// Rule PathSequence
rulePathSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathSequenceAccess().getGroup()); }
(rule__PathSequence__Group__0)
{ after(grammarAccess.getPathSequenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTmlExpression
entryRuleTmlExpression 
:
{ before(grammarAccess.getTmlExpressionRule()); }
	 ruleTmlExpression
{ after(grammarAccess.getTmlExpressionRule()); } 
	 EOF 
;

// Rule TmlExpression
ruleTmlExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTmlExpressionAccess().getPathSequenceParserRuleCall()); }
	rulePathSequence
{ after(grammarAccess.getTmlExpressionAccess().getPathSequenceParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExistsTmlExpression
entryRuleExistsTmlExpression 
:
{ before(grammarAccess.getExistsTmlExpressionRule()); }
	 ruleExistsTmlExpression
{ after(grammarAccess.getExistsTmlExpressionRule()); } 
	 EOF 
;

// Rule ExistsTmlExpression
ruleExistsTmlExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExistsTmlExpressionAccess().getGroup()); }
(rule__ExistsTmlExpression__Group__0)
{ after(grammarAccess.getExistsTmlExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpression
entryRuleOrExpression 
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
(rule__OrExpression__Group__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpression
entryRuleAndExpression 
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression 
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
(rule__EqualityExpression__Group__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression 
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
(rule__AdditiveExpression__Group__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression 
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
(rule__MultiplicativeExpression__Group__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression 
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
(rule__UnaryExpression__Alternatives)
{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionCall
entryRuleFunctionCall 
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
(rule__FunctionCall__Group__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Tml__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getGroup_3_0()); }
(rule__Tml__Group_3_0__0)
{ after(grammarAccess.getTmlAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getTmlAccess().getSolidusGreaterThanSignKeyword_3_1()); }

	'/>' 

{ after(grammarAccess.getTmlAccess().getSolidusGreaterThanSignKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__Alternatives_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getChildrenAssignment_3_0_1_0()); }
(rule__Tml__ChildrenAssignment_3_0_1_0)
{ after(grammarAccess.getTmlAccess().getChildrenAssignment_3_0_1_0()); }
)

    |(
{ before(grammarAccess.getTmlAccess().getChildrenAssignment_3_0_1_1()); }
(rule__Tml__ChildrenAssignment_3_0_1_1)
{ after(grammarAccess.getTmlAccess().getChildrenAssignment_3_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getGroup_2_0()); }
(rule__PossibleExpression__Group_2_0__0)
{ after(grammarAccess.getPossibleExpressionAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getPossibleExpressionAccess().getValueAssignment_2_1()); }
(rule__PossibleExpression__ValueAssignment_2_1)
{ after(grammarAccess.getPossibleExpressionAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getGroup_3_0()); }
(rule__Message__Group_3_0__0)
{ after(grammarAccess.getMessageAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getMessageAccess().getSolidusGreaterThanSignKeyword_3_1()); }

	'/>' 

{ after(grammarAccess.getMessageAccess().getSolidusGreaterThanSignKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Alternatives_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getChildrenAssignment_3_0_1_0()); }
(rule__Message__ChildrenAssignment_3_0_1_0)
{ after(grammarAccess.getMessageAccess().getChildrenAssignment_3_0_1_0()); }
)

    |(
{ before(grammarAccess.getMessageAccess().getChildrenAssignment_3_0_1_1()); }
(rule__Message__ChildrenAssignment_3_0_1_1)
{ after(grammarAccess.getMessageAccess().getChildrenAssignment_3_0_1_1()); }
)

    |(
{ before(grammarAccess.getMessageAccess().getChildrenAssignment_3_0_1_2()); }
(rule__Message__ChildrenAssignment_3_0_1_2)
{ after(grammarAccess.getMessageAccess().getChildrenAssignment_3_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getSolidusGreaterThanSignKeyword_4_0()); }

	'/>' 

{ after(grammarAccess.getMapAccess().getSolidusGreaterThanSignKeyword_4_0()); }
)

    |(
{ before(grammarAccess.getMapAccess().getGroup_4_1()); }
(rule__Map__Group_4_1__0)
{ after(grammarAccess.getMapAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Alternatives_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getChildrenAssignment_4_1_1_0()); }
(rule__Map__ChildrenAssignment_4_1_1_0)
{ after(grammarAccess.getMapAccess().getChildrenAssignment_4_1_1_0()); }
)

    |(
{ before(grammarAccess.getMapAccess().getChildrenAssignment_4_1_1_1()); }
(rule__Map__ChildrenAssignment_4_1_1_1)
{ after(grammarAccess.getMapAccess().getChildrenAssignment_4_1_1_1()); }
)

    |(
{ before(grammarAccess.getMapAccess().getChildrenAssignment_4_1_1_2()); }
(rule__Map__ChildrenAssignment_4_1_1_2)
{ after(grammarAccess.getMapAccess().getChildrenAssignment_4_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getSolidusGreaterThanSignKeyword_3_0()); }

	'/>' 

{ after(grammarAccess.getPropertyAccess().getSolidusGreaterThanSignKeyword_3_0()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getGroup_3_1()); }
(rule__Property__Group_3_1__0)
{ after(grammarAccess.getPropertyAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathElementAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getPathElementAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPathElementAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getPathElementAccess().getFullStopKeyword_1()); }
)

    |(
{ before(grammarAccess.getPathElementAccess().getFullStopFullStopKeyword_2()); }

	'..' 

{ after(grammarAccess.getPathElementAccess().getFullStopFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup_2_0()); }
(rule__EqualityExpression__Group_2_0__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup_2_1()); }
(rule__EqualityExpression__Group_2_1__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_2_0()); }
(rule__AdditiveExpression__Group_2_0__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_2_1()); }
(rule__AdditiveExpression__Group_2_1__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_2_0()); }
(rule__MultiplicativeExpression__Group_2_0__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_2_1()); }
(rule__MultiplicativeExpression__Group_2_1__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
(rule__UnaryExpression__Group_0__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_1()); }
	rulePrimaryExpression
{ after(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
(rule__PrimaryExpression__Group_0__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
(rule__PrimaryExpression__Group_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getGroup_0()); }
(rule__Literal__Group_0__0)
{ after(grammarAccess.getLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_1()); }
(rule__Literal__Group_1__0)
{ after(grammarAccess.getLiteralAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_2()); }
(rule__Literal__Group_2__0)
{ after(grammarAccess.getLiteralAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getFunctionCallParserRuleCall_3()); }
	ruleFunctionCall
{ after(grammarAccess.getLiteralAccess().getFunctionCallParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_4()); }
(rule__Literal__Group_4__0)
{ after(grammarAccess.getLiteralAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_5()); }
(rule__Literal__Group_5__0)
{ after(grammarAccess.getLiteralAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_6()); }
(rule__Literal__Group_6__0)
{ after(grammarAccess.getLiteralAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_7()); }
(rule__Literal__Group_7__0)
{ after(grammarAccess.getLiteralAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_8()); }
(rule__Literal__Group_8__0)
{ after(grammarAccess.getLiteralAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_9()); }
(rule__Literal__Group_9__0)
{ after(grammarAccess.getLiteralAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_10()); }
(rule__Literal__Group_10__0)
{ after(grammarAccess.getLiteralAccess().getGroup_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Tml__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tml__Group__0__Impl
	rule__Tml__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getNavascriptKeyword_0()); }

	'<navascript' 

{ after(grammarAccess.getTmlAccess().getNavascriptKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tml__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tml__Group__1__Impl
	rule__Tml__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getTmlAction_1()); }
(

)
{ after(grammarAccess.getTmlAccess().getTmlAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tml__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tml__Group__2__Impl
	rule__Tml__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getAttributesAssignment_2()); }
(rule__Tml__AttributesAssignment_2)*
{ after(grammarAccess.getTmlAccess().getAttributesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tml__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tml__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getAlternatives_3()); }
(rule__Tml__Alternatives_3)
{ after(grammarAccess.getTmlAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Tml__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tml__Group_3_0__0__Impl
	rule__Tml__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getGreaterThanSignKeyword_3_0_0()); }

	'>' 

{ after(grammarAccess.getTmlAccess().getGreaterThanSignKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tml__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tml__Group_3_0__1__Impl
	rule__Tml__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getAlternatives_3_0_1()); }
(rule__Tml__Alternatives_3_0_1)*
{ after(grammarAccess.getTmlAccess().getAlternatives_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tml__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tml__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getNavascriptKeyword_3_0_2()); }

	'</navascript>' 

{ after(grammarAccess.getTmlAccess().getNavascriptKeyword_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PossibleExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PossibleExpression__Group__0__Impl
	rule__PossibleExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getKeyAssignment_0()); }
(rule__PossibleExpression__KeyAssignment_0)
{ after(grammarAccess.getPossibleExpressionAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PossibleExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PossibleExpression__Group__1__Impl
	rule__PossibleExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getPossibleExpressionAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PossibleExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PossibleExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getAlternatives_2()); }
(rule__PossibleExpression__Alternatives_2)
{ after(grammarAccess.getPossibleExpressionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PossibleExpression__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PossibleExpression__Group_2_0__0__Impl
	rule__PossibleExpression__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getQuotationMarkEqualsSignKeyword_2_0_0()); }

	'"=' 

{ after(grammarAccess.getPossibleExpressionAccess().getQuotationMarkEqualsSignKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PossibleExpression__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PossibleExpression__Group_2_0__1__Impl
	rule__PossibleExpression__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getExpressionValueAssignment_2_0_1()); }
(rule__PossibleExpression__ExpressionValueAssignment_2_0_1)
{ after(grammarAccess.getPossibleExpressionAccess().getExpressionValueAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PossibleExpression__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PossibleExpression__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getSemicolonQuotationMarkKeyword_2_0_2()); }

	';"' 

{ after(grammarAccess.getPossibleExpressionAccess().getSemicolonQuotationMarkKeyword_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Message__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__0__Impl
	rule__Message__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getMessageKeyword_0()); }

	'<message' 

{ after(grammarAccess.getMessageAccess().getMessageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__1__Impl
	rule__Message__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getMessageAction_1()); }
(

)
{ after(grammarAccess.getMessageAccess().getMessageAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__2__Impl
	rule__Message__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getAttributesAssignment_2()); }
(rule__Message__AttributesAssignment_2)*
{ after(grammarAccess.getMessageAccess().getAttributesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getAlternatives_3()); }
(rule__Message__Alternatives_3)
{ after(grammarAccess.getMessageAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Message__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group_3_0__0__Impl
	rule__Message__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getGreaterThanSignKeyword_3_0_0()); }

	'>' 

{ after(grammarAccess.getMessageAccess().getGreaterThanSignKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group_3_0__1__Impl
	rule__Message__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getAlternatives_3_0_1()); }
(rule__Message__Alternatives_3_0_1)*
{ after(grammarAccess.getMessageAccess().getAlternatives_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getMessageKeyword_3_0_2()); }

	'</message>' 

{ after(grammarAccess.getMessageAccess().getMessageKeyword_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Map__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group__0__Impl
	rule__Map__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getMapAction_0()); }
(

)
{ after(grammarAccess.getMapAccess().getMapAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group__1__Impl
	rule__Map__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getMapKeyword_1()); }

	'<map.' 

{ after(grammarAccess.getMapAccess().getMapKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group__2__Impl
	rule__Map__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getMapNameAssignment_2()); }
(rule__Map__MapNameAssignment_2)
{ after(grammarAccess.getMapAccess().getMapNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group__3__Impl
	rule__Map__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getAttributesAssignment_3()); }
(rule__Map__AttributesAssignment_3)
{ after(grammarAccess.getMapAccess().getAttributesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getAlternatives_4()); }
(rule__Map__Alternatives_4)
{ after(grammarAccess.getMapAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Map__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group_4_1__0__Impl
	rule__Map__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getGreaterThanSignKeyword_4_1_0()); }

	'>' 

{ after(grammarAccess.getMapAccess().getGreaterThanSignKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group_4_1__1__Impl
	rule__Map__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getAlternatives_4_1_1()); }
(rule__Map__Alternatives_4_1_1)*
{ after(grammarAccess.getMapAccess().getAlternatives_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group_4_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group_4_1__2__Impl
	rule__Map__Group_4_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group_4_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getMapKeyword_4_1_2()); }

	'</map.' 

{ after(grammarAccess.getMapAccess().getMapKeyword_4_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group_4_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group_4_1__3__Impl
	rule__Map__Group_4_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group_4_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getMapClosingNameAssignment_4_1_3()); }
(rule__Map__MapClosingNameAssignment_4_1_3)
{ after(grammarAccess.getMapAccess().getMapClosingNameAssignment_4_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group_4_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map__Group_4_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group_4_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getGreaterThanSignKeyword_4_1_4()); }

	'>' 

{ after(grammarAccess.getMapAccess().getGreaterThanSignKeyword_4_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Property__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getPropertyKeyword_0()); }

	'<property' 

{ after(grammarAccess.getPropertyAccess().getPropertyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getPropertyAction_1()); }
(

)
{ after(grammarAccess.getPropertyAccess().getPropertyAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__2__Impl
	rule__Property__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getAttributesAssignment_2()); }
(rule__Property__AttributesAssignment_2)*
{ after(grammarAccess.getPropertyAccess().getAttributesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getAlternatives_3()); }
(rule__Property__Alternatives_3)
{ after(grammarAccess.getPropertyAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Property__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_3_1__0__Impl
	rule__Property__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getGreaterThanSignKeyword_3_1_0()); }

	'>' 

{ after(grammarAccess.getPropertyAccess().getGreaterThanSignKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_3_1__1__Impl
	rule__Property__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getExpressionValueAssignment_3_1_1()); }
(rule__Property__ExpressionValueAssignment_3_1_1)?
{ after(grammarAccess.getPropertyAccess().getExpressionValueAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getPropertyKeyword_3_1_2()); }

	'</property>' 

{ after(grammarAccess.getPropertyAccess().getPropertyKeyword_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExpressionTag__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionTag__Group__0__Impl
	rule__ExpressionTag__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTag__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionTagAccess().getExpressionKeyword_0()); }

	'<expression>' 

{ after(grammarAccess.getExpressionTagAccess().getExpressionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionTag__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionTag__Group__1__Impl
	rule__ExpressionTag__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTag__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionTagAccess().getValueAssignment_1()); }
(rule__ExpressionTag__ValueAssignment_1)
{ after(grammarAccess.getExpressionTagAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionTag__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionTag__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTag__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionTagAccess().getExpressionKeyword_2()); }

	'</expression>' 

{ after(grammarAccess.getExpressionTagAccess().getExpressionKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TopLevel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevel__Group__0__Impl
	rule__TopLevel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelAccess().getTopLevelAction_0()); }
(

)
{ after(grammarAccess.getTopLevelAccess().getTopLevelAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelAccess().getToplevelExpressionAssignment_1()); }
(rule__TopLevel__ToplevelExpressionAssignment_1)
{ after(grammarAccess.getTopLevelAccess().getToplevelExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PathSequence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathSequence__Group__0__Impl
	rule__PathSequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathSequence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathSequenceAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getPathSequenceAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathSequence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathSequence__Group__1__Impl
	rule__PathSequence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PathSequence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathSequenceAccess().getSolidusKeyword_1()); }
(
	'/' 
)?
{ after(grammarAccess.getPathSequenceAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathSequence__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathSequence__Group__2__Impl
	rule__PathSequence__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PathSequence__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathSequenceAccess().getPathElementParserRuleCall_2()); }
	rulePathElement
{ after(grammarAccess.getPathSequenceAccess().getPathElementParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathSequence__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathSequence__Group__3__Impl
	rule__PathSequence__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PathSequence__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathSequenceAccess().getGroup_3()); }
(rule__PathSequence__Group_3__0)*
{ after(grammarAccess.getPathSequenceAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathSequence__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathSequence__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathSequence__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathSequenceAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getPathSequenceAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PathSequence__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathSequence__Group_3__0__Impl
	rule__PathSequence__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathSequence__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathSequenceAccess().getSolidusKeyword_3_0()); }

	'/' 

{ after(grammarAccess.getPathSequenceAccess().getSolidusKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathSequence__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathSequence__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathSequence__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathSequenceAccess().getPathElementParserRuleCall_3_1()); }
	rulePathElement
{ after(grammarAccess.getPathSequenceAccess().getPathElementParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExistsTmlExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsTmlExpression__Group__0__Impl
	rule__ExistsTmlExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTmlExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsTmlExpressionAccess().getQuestionMarkKeyword_0()); }

	'?' 

{ after(grammarAccess.getExistsTmlExpressionAccess().getQuestionMarkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsTmlExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsTmlExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsTmlExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsTmlExpressionAccess().getTmlExpressionParserRuleCall_1()); }
	ruleTmlExpression
{ after(grammarAccess.getExistsTmlExpressionAccess().getTmlExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getExpressionAction_0()); }
(

)
{ after(grammarAccess.getOrExpressionAccess().getExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__1__Impl
	rule__OrExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getParametersAssignment_1()); }
(rule__OrExpression__ParametersAssignment_1)
{ after(grammarAccess.getOrExpressionAccess().getParametersAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_2()); }
(rule__OrExpression__Group_2__0)*
{ after(grammarAccess.getOrExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_2__0__Impl
	rule__OrExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOperationsAssignment_2_0()); }
(rule__OrExpression__OperationsAssignment_2_0)
{ after(grammarAccess.getOrExpressionAccess().getOperationsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getParametersAssignment_2_1()); }
(rule__OrExpression__ParametersAssignment_2_1)
{ after(grammarAccess.getOrExpressionAccess().getParametersAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getExpressionAction_0()); }
(

)
{ after(grammarAccess.getAndExpressionAccess().getExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__1__Impl
	rule__AndExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getParametersAssignment_1()); }
(rule__AndExpression__ParametersAssignment_1)
{ after(grammarAccess.getAndExpressionAccess().getParametersAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_2()); }
(rule__AndExpression__Group_2__0)*
{ after(grammarAccess.getAndExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_2__0__Impl
	rule__AndExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperationsAssignment_2_0()); }
(rule__AndExpression__OperationsAssignment_2_0)
{ after(grammarAccess.getAndExpressionAccess().getOperationsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getParametersAssignment_2_1()); }
(rule__AndExpression__ParametersAssignment_2_1)
{ after(grammarAccess.getAndExpressionAccess().getParametersAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getExpressionAction_0()); }
(

)
{ after(grammarAccess.getEqualityExpressionAccess().getExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__1__Impl
	rule__EqualityExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getParametersAssignment_1()); }
(rule__EqualityExpression__ParametersAssignment_1)
{ after(grammarAccess.getEqualityExpressionAccess().getParametersAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getAlternatives_2()); }
(rule__EqualityExpression__Alternatives_2)?
{ after(grammarAccess.getEqualityExpressionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EqualityExpression__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_2_0__0__Impl
	rule__EqualityExpression__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOperationsAssignment_2_0_0()); }
(rule__EqualityExpression__OperationsAssignment_2_0_0)
{ after(grammarAccess.getEqualityExpressionAccess().getOperationsAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getParametersAssignment_2_0_1()); }
(rule__EqualityExpression__ParametersAssignment_2_0_1)
{ after(grammarAccess.getEqualityExpressionAccess().getParametersAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_2_1__0__Impl
	rule__EqualityExpression__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOperationsAssignment_2_1_0()); }
(rule__EqualityExpression__OperationsAssignment_2_1_0)
{ after(grammarAccess.getEqualityExpressionAccess().getOperationsAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getParametersAssignment_2_1_1()); }
(rule__EqualityExpression__ParametersAssignment_2_1_1)
{ after(grammarAccess.getEqualityExpressionAccess().getParametersAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getExpressionAction_0()); }
(

)
{ after(grammarAccess.getAdditiveExpressionAccess().getExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__1__Impl
	rule__AdditiveExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getParametersAssignment_1()); }
(rule__AdditiveExpression__ParametersAssignment_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getParametersAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getAlternatives_2()); }
(rule__AdditiveExpression__Alternatives_2)*
{ after(grammarAccess.getAdditiveExpressionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AdditiveExpression__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_2_0__0__Impl
	rule__AdditiveExpression__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getPlusSignKeyword_2_0_0()); }

	'+' 

{ after(grammarAccess.getAdditiveExpressionAccess().getPlusSignKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getParametersAssignment_2_0_1()); }
(rule__AdditiveExpression__ParametersAssignment_2_0_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getParametersAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_2_1__0__Impl
	rule__AdditiveExpression__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getHyphenMinusKeyword_2_1_0()); }

	'-' 

{ after(grammarAccess.getAdditiveExpressionAccess().getHyphenMinusKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getParametersAssignment_2_1_1()); }
(rule__AdditiveExpression__ParametersAssignment_2_1_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getParametersAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getExpressionAction_0()); }
(

)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__1__Impl
	rule__MultiplicativeExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getParametersAssignment_1()); }
(rule__MultiplicativeExpression__ParametersAssignment_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getParametersAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getAlternatives_2()); }
(rule__MultiplicativeExpression__Alternatives_2)*
{ after(grammarAccess.getMultiplicativeExpressionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MultiplicativeExpression__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_2_0__0__Impl
	rule__MultiplicativeExpression__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperationsAssignment_2_0_0()); }
(rule__MultiplicativeExpression__OperationsAssignment_2_0_0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperationsAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getParametersAssignment_2_0_1()); }
(rule__MultiplicativeExpression__ParametersAssignment_2_0_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getParametersAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_2_1__0__Impl
	rule__MultiplicativeExpression__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperationsAssignment_2_1_0()); }
(rule__MultiplicativeExpression__OperationsAssignment_2_1_0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperationsAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getParametersAssignment_2_1_1()); }
(rule__MultiplicativeExpression__ParametersAssignment_2_1_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getParametersAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_0__0__Impl
	rule__UnaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getUnaryExpressionAccess().getExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_0__1__Impl
	rule__UnaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOperationsAssignment_0_1()); }
(rule__UnaryExpression__OperationsAssignment_0_1)
{ after(grammarAccess.getUnaryExpressionAccess().getOperationsAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getParametersAssignment_0_2()); }
(rule__UnaryExpression__ParametersAssignment_0_2)
{ after(grammarAccess.getUnaryExpressionAccess().getParametersAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__0__Impl
	rule__PrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getParametersAssignment_0_1()); }
(rule__PrimaryExpression__ParametersAssignment_0_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getParametersAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__1__Impl
	rule__PrimaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getParametersAssignment_1_1()); }
(rule__PrimaryExpression__ParametersAssignment_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getParametersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getNameAssignment_0()); }
(rule__FunctionCall__NameAssignment_0)
{ after(grammarAccess.getFunctionCallAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getOperandsAssignment_2()); }
(rule__FunctionCall__OperandsAssignment_2)
{ after(grammarAccess.getFunctionCallAccess().getOperandsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Literal__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_0__0__Impl
	rule__Literal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueStringAssignment_0_1()); }
(rule__Literal__ValueStringAssignment_0_1)
{ after(grammarAccess.getLiteralAccess().getValueStringAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_1__0__Impl
	rule__Literal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueStringAssignment_1_1()); }
(rule__Literal__ValueStringAssignment_1_1)
{ after(grammarAccess.getLiteralAccess().getValueStringAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_2__0__Impl
	rule__Literal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getExpressionAction_2_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getExpressionAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_2__1__Impl
	rule__Literal__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getOperationsAssignment_2_1()); }
(rule__Literal__OperationsAssignment_2_1)
{ after(grammarAccess.getLiteralAccess().getOperationsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_2__2__Impl
	rule__Literal__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getLeftParenthesisKeyword_2_2()); }

	'(' 

{ after(grammarAccess.getLiteralAccess().getLeftParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_2__3__Impl
	rule__Literal__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueStringAssignment_2_3()); }
(rule__Literal__ValueStringAssignment_2_3)
{ after(grammarAccess.getLiteralAccess().getValueStringAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_2__4__Impl
	rule__Literal__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getCommaKeyword_2_4()); }

	',' 

{ after(grammarAccess.getLiteralAccess().getCommaKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_2__5__Impl
	rule__Literal__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getParametersAssignment_2_5()); }
(rule__Literal__ParametersAssignment_2_5)
{ after(grammarAccess.getLiteralAccess().getParametersAssignment_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_2__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_2__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getRightParenthesisKeyword_2_6()); }

	')' 

{ after(grammarAccess.getLiteralAccess().getRightParenthesisKeyword_2_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Literal__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_4__0__Impl
	rule__Literal__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getExpressionAction_4_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getExpressionAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getElementsAssignment_4_1()); }
(rule__Literal__ElementsAssignment_4_1)
{ after(grammarAccess.getLiteralAccess().getElementsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_5__0__Impl
	rule__Literal__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getExpressionAction_5_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getExpressionAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getElementsAssignment_5_1()); }
(rule__Literal__ElementsAssignment_5_1)
{ after(grammarAccess.getLiteralAccess().getElementsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_6__0__Impl
	rule__Literal__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getExpressionAction_6_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getExpressionAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_6__1__Impl
	rule__Literal__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getExpressionTypeAssignment_6_1()); }
(rule__Literal__ExpressionTypeAssignment_6_1)
{ after(grammarAccess.getLiteralAccess().getExpressionTypeAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_6__2__Impl
	rule__Literal__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getParametersAssignment_6_2()); }
(rule__Literal__ParametersAssignment_6_2)?
{ after(grammarAccess.getLiteralAccess().getParametersAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_6__3__Impl
	rule__Literal__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getGroup_6_3()); }
(rule__Literal__Group_6_3__0)*
{ after(grammarAccess.getLiteralAccess().getGroup_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getRightCurlyBracketKeyword_6_4()); }

	'}' 

{ after(grammarAccess.getLiteralAccess().getRightCurlyBracketKeyword_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Literal__Group_6_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_6_3__0__Impl
	rule__Literal__Group_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getCommaKeyword_6_3_0()); }

	',' 

{ after(grammarAccess.getLiteralAccess().getCommaKeyword_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_6_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_6_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getParametersAssignment_6_3_1()); }
(rule__Literal__ParametersAssignment_6_3_1)
{ after(grammarAccess.getLiteralAccess().getParametersAssignment_6_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_7__0__Impl
	rule__Literal__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getExpressionAction_7_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getExpressionAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getElementsAssignment_7_1()); }
(rule__Literal__ElementsAssignment_7_1)
{ after(grammarAccess.getLiteralAccess().getElementsAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_8__0__Impl
	rule__Literal__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getExpressionAction_8_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getExpressionAction_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getElementsAssignment_8_1()); }
(rule__Literal__ElementsAssignment_8_1)
{ after(grammarAccess.getLiteralAccess().getElementsAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_9__0__Impl
	rule__Literal__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getExpressionAction_9_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getExpressionAction_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getElementsAssignment_9_1()); }
(rule__Literal__ElementsAssignment_9_1)
{ after(grammarAccess.getLiteralAccess().getElementsAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_10__0__Impl
	rule__Literal__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getExpressionAction_10_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getExpressionAction_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getElementsAssignment_10_1()); }
(rule__Literal__ElementsAssignment_10_1)
{ after(grammarAccess.getLiteralAccess().getElementsAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Tml__AttributesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); }
	rulePossibleExpression{ after(grammarAccess.getTmlAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__ChildrenAssignment_3_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getChildrenMessageParserRuleCall_3_0_1_0_0()); }
	ruleMessage{ after(grammarAccess.getTmlAccess().getChildrenMessageParserRuleCall_3_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Tml__ChildrenAssignment_3_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmlAccess().getChildrenMapParserRuleCall_3_0_1_1_0()); }
	ruleMap{ after(grammarAccess.getTmlAccess().getChildrenMapParserRuleCall_3_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getKeyIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getPossibleExpressionAccess().getKeyIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__ExpressionValueAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getExpressionValueTopLevelParserRuleCall_2_0_1_0()); }
	ruleTopLevel{ after(grammarAccess.getPossibleExpressionAccess().getExpressionValueTopLevelParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PossibleExpression__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPossibleExpressionAccess().getValueATTRIBUTESTRINGTerminalRuleCall_2_1_0()); }
	RULE_ATTRIBUTESTRING{ after(grammarAccess.getPossibleExpressionAccess().getValueATTRIBUTESTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__AttributesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); }
	rulePossibleExpression{ after(grammarAccess.getMessageAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__ChildrenAssignment_3_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getChildrenMessageParserRuleCall_3_0_1_0_0()); }
	ruleMessage{ after(grammarAccess.getMessageAccess().getChildrenMessageParserRuleCall_3_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__ChildrenAssignment_3_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getChildrenPropertyParserRuleCall_3_0_1_1_0()); }
	ruleProperty{ after(grammarAccess.getMessageAccess().getChildrenPropertyParserRuleCall_3_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__ChildrenAssignment_3_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getChildrenMapParserRuleCall_3_0_1_2_0()); }
	ruleMap{ after(grammarAccess.getMessageAccess().getChildrenMapParserRuleCall_3_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__MapNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getMapNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getMapAccess().getMapNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__AttributesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getAttributesPossibleExpressionParserRuleCall_3_0()); }
	rulePossibleExpression{ after(grammarAccess.getMapAccess().getAttributesPossibleExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__ChildrenAssignment_4_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getChildrenMessageParserRuleCall_4_1_1_0_0()); }
	ruleMessage{ after(grammarAccess.getMapAccess().getChildrenMessageParserRuleCall_4_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__ChildrenAssignment_4_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getChildrenPropertyParserRuleCall_4_1_1_1_0()); }
	ruleProperty{ after(grammarAccess.getMapAccess().getChildrenPropertyParserRuleCall_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__ChildrenAssignment_4_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getChildrenMapParserRuleCall_4_1_1_2_0()); }
	ruleMap{ after(grammarAccess.getMapAccess().getChildrenMapParserRuleCall_4_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map__MapClosingNameAssignment_4_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapAccess().getMapClosingNameIDTerminalRuleCall_4_1_3_0()); }
	RULE_ID{ after(grammarAccess.getMapAccess().getMapClosingNameIDTerminalRuleCall_4_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__AttributesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); }
	rulePossibleExpression{ after(grammarAccess.getPropertyAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ExpressionValueAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getExpressionValueExpressionTagParserRuleCall_3_1_1_0()); }
	ruleExpressionTag{ after(grammarAccess.getPropertyAccess().getExpressionValueExpressionTagParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTag__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionTagAccess().getValueTopLevelParserRuleCall_1_0()); }
	ruleTopLevel{ after(grammarAccess.getExpressionTagAccess().getValueTopLevelParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevel__ToplevelExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelAccess().getToplevelExpressionOrExpressionParserRuleCall_1_0()); }
	ruleOrExpression{ after(grammarAccess.getTopLevelAccess().getToplevelExpressionOrExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__ParametersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getParametersAndExpressionParserRuleCall_1_0()); }
	ruleAndExpression{ after(grammarAccess.getOrExpressionAccess().getParametersAndExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OperationsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOperationsORKeyword_2_0_0()); }
(
{ before(grammarAccess.getOrExpressionAccess().getOperationsORKeyword_2_0_0()); }

	'OR' 

{ after(grammarAccess.getOrExpressionAccess().getOperationsORKeyword_2_0_0()); }
)

{ after(grammarAccess.getOrExpressionAccess().getOperationsORKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__ParametersAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getParametersAndExpressionParserRuleCall_2_1_0()); }
	ruleAndExpression{ after(grammarAccess.getOrExpressionAccess().getParametersAndExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__ParametersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getParametersEqualityExpressionParserRuleCall_1_0()); }
	ruleEqualityExpression{ after(grammarAccess.getAndExpressionAccess().getParametersEqualityExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OperationsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperationsANDKeyword_2_0_0()); }
(
{ before(grammarAccess.getAndExpressionAccess().getOperationsANDKeyword_2_0_0()); }

	'AND' 

{ after(grammarAccess.getAndExpressionAccess().getOperationsANDKeyword_2_0_0()); }
)

{ after(grammarAccess.getAndExpressionAccess().getOperationsANDKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__ParametersAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getParametersEqualityExpressionParserRuleCall_2_1_0()); }
	ruleEqualityExpression{ after(grammarAccess.getAndExpressionAccess().getParametersEqualityExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__ParametersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getParametersAdditiveExpressionParserRuleCall_1_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getEqualityExpressionAccess().getParametersAdditiveExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OperationsAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOperationsEqualsSignEqualsSignKeyword_2_0_0_0()); }
(
{ before(grammarAccess.getEqualityExpressionAccess().getOperationsEqualsSignEqualsSignKeyword_2_0_0_0()); }

	'==' 

{ after(grammarAccess.getEqualityExpressionAccess().getOperationsEqualsSignEqualsSignKeyword_2_0_0_0()); }
)

{ after(grammarAccess.getEqualityExpressionAccess().getOperationsEqualsSignEqualsSignKeyword_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__ParametersAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getParametersAdditiveExpressionParserRuleCall_2_0_1_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getEqualityExpressionAccess().getParametersAdditiveExpressionParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OperationsAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOperationsExclamationMarkEqualsSignKeyword_2_1_0_0()); }
(
{ before(grammarAccess.getEqualityExpressionAccess().getOperationsExclamationMarkEqualsSignKeyword_2_1_0_0()); }

	'!=' 

{ after(grammarAccess.getEqualityExpressionAccess().getOperationsExclamationMarkEqualsSignKeyword_2_1_0_0()); }
)

{ after(grammarAccess.getEqualityExpressionAccess().getOperationsExclamationMarkEqualsSignKeyword_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__ParametersAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getParametersAdditiveExpressionParserRuleCall_2_1_1_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getEqualityExpressionAccess().getParametersAdditiveExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__ParametersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getParametersMultiplicativeExpressionParserRuleCall_1_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getParametersMultiplicativeExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__ParametersAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getParametersMultiplicativeExpressionParserRuleCall_2_0_1_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getParametersMultiplicativeExpressionParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__ParametersAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getParametersMultiplicativeExpressionParserRuleCall_2_1_1_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getParametersMultiplicativeExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__ParametersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getParametersUnaryExpressionParserRuleCall_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getParametersUnaryExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OperationsAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperationsAsteriskKeyword_2_0_0_0()); }
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperationsAsteriskKeyword_2_0_0_0()); }

	'*' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperationsAsteriskKeyword_2_0_0_0()); }
)

{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperationsAsteriskKeyword_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__ParametersAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getParametersUnaryExpressionParserRuleCall_2_0_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getParametersUnaryExpressionParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OperationsAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperationsSolidusKeyword_2_1_0_0()); }
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperationsSolidusKeyword_2_1_0_0()); }

	'/' 

{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperationsSolidusKeyword_2_1_0_0()); }
)

{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperationsSolidusKeyword_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__ParametersAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getParametersUnaryExpressionParserRuleCall_2_1_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getParametersUnaryExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OperationsAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOperationsExclamationMarkKeyword_0_1_0()); }
(
{ before(grammarAccess.getUnaryExpressionAccess().getOperationsExclamationMarkKeyword_0_1_0()); }

	'!' 

{ after(grammarAccess.getUnaryExpressionAccess().getOperationsExclamationMarkKeyword_0_1_0()); }
)

{ after(grammarAccess.getUnaryExpressionAccess().getOperationsExclamationMarkKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ParametersAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getParametersPrimaryExpressionParserRuleCall_0_2_0()); }
	rulePrimaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getParametersPrimaryExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ParametersAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getParametersLiteralParserRuleCall_0_1_0()); }
	ruleLiteral{ after(grammarAccess.getPrimaryExpressionAccess().getParametersLiteralParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ParametersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getParametersOrExpressionParserRuleCall_1_1_0()); }
	ruleOrExpression{ after(grammarAccess.getPrimaryExpressionAccess().getParametersOrExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getFunctionCallAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__OperandsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getOperandsFunctionOperandsCrossReference_2_0()); }
(
{ before(grammarAccess.getFunctionCallAccess().getOperandsFunctionOperandsIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getFunctionCallAccess().getOperandsFunctionOperandsIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getFunctionCallAccess().getOperandsFunctionOperandsCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Literal__ValueStringAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueStringINTTerminalRuleCall_0_1_0()); }
	RULE_INT{ after(grammarAccess.getLiteralAccess().getValueStringINTTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValueStringAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueStringLITERALSTRINGTerminalRuleCall_1_1_0()); }
	RULE_LITERALSTRING{ after(grammarAccess.getLiteralAccess().getValueStringLITERALSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__OperationsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getOperationsFORALLKeyword_2_1_0()); }
(
{ before(grammarAccess.getLiteralAccess().getOperationsFORALLKeyword_2_1_0()); }

	'FORALL' 

{ after(grammarAccess.getLiteralAccess().getOperationsFORALLKeyword_2_1_0()); }
)

{ after(grammarAccess.getLiteralAccess().getOperationsFORALLKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValueStringAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueStringLITERALSTRINGTerminalRuleCall_2_3_0()); }
	RULE_LITERALSTRING{ after(grammarAccess.getLiteralAccess().getValueStringLITERALSTRINGTerminalRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ParametersAssignment_2_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getParametersOrExpressionParserRuleCall_2_5_0()); }
	ruleOrExpression{ after(grammarAccess.getLiteralAccess().getParametersOrExpressionParserRuleCall_2_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ElementsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getElementsExistsTmlExpressionParserRuleCall_4_1_0()); }
	ruleExistsTmlExpression{ after(grammarAccess.getLiteralAccess().getElementsExistsTmlExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ElementsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getElementsTmlExpressionParserRuleCall_5_1_0()); }
	ruleTmlExpression{ after(grammarAccess.getLiteralAccess().getElementsTmlExpressionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ExpressionTypeAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getExpressionTypeLeftCurlyBracketKeyword_6_1_0()); }
(
{ before(grammarAccess.getLiteralAccess().getExpressionTypeLeftCurlyBracketKeyword_6_1_0()); }

	'{' 

{ after(grammarAccess.getLiteralAccess().getExpressionTypeLeftCurlyBracketKeyword_6_1_0()); }
)

{ after(grammarAccess.getLiteralAccess().getExpressionTypeLeftCurlyBracketKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ParametersAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getParametersOrExpressionParserRuleCall_6_2_0()); }
	ruleOrExpression{ after(grammarAccess.getLiteralAccess().getParametersOrExpressionParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ParametersAssignment_6_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getParametersOrExpressionParserRuleCall_6_3_1_0()); }
	ruleOrExpression{ after(grammarAccess.getLiteralAccess().getParametersOrExpressionParserRuleCall_6_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ElementsAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getElementsNULLKeyword_7_1_0()); }
(
{ before(grammarAccess.getLiteralAccess().getElementsNULLKeyword_7_1_0()); }

	'NULL' 

{ after(grammarAccess.getLiteralAccess().getElementsNULLKeyword_7_1_0()); }
)

{ after(grammarAccess.getLiteralAccess().getElementsNULLKeyword_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ElementsAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getElementsTODAYKeyword_8_1_0()); }
(
{ before(grammarAccess.getLiteralAccess().getElementsTODAYKeyword_8_1_0()); }

	'TODAY' 

{ after(grammarAccess.getLiteralAccess().getElementsTODAYKeyword_8_1_0()); }
)

{ after(grammarAccess.getLiteralAccess().getElementsTODAYKeyword_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ElementsAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getElementsTRUEKeyword_9_1_0()); }
(
{ before(grammarAccess.getLiteralAccess().getElementsTRUEKeyword_9_1_0()); }

	'TRUE' 

{ after(grammarAccess.getLiteralAccess().getElementsTRUEKeyword_9_1_0()); }
)

{ after(grammarAccess.getLiteralAccess().getElementsTRUEKeyword_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ElementsAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getElementsFALSEKeyword_10_1_0()); }
(
{ before(grammarAccess.getLiteralAccess().getElementsFALSEKeyword_10_1_0()); }

	'FALSE' 

{ after(grammarAccess.getLiteralAccess().getElementsFALSEKeyword_10_1_0()); }
)

{ after(grammarAccess.getLiteralAccess().getElementsFALSEKeyword_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ATTRIBUTESTRING : ('"' ~('=') ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* ~(';') '"'|'""'|'"' ~('"') '"');

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_LITERALSTRING : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'';


