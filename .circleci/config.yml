version: 2.1
jobs:
  build_test_n_deploy:
    docker:
      - image: circleci/openjdk:11-jdk
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx1000m
      TERM: dumb
    steps:
      # Setup
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "setup/com.dexels.navajo.target/maven.target" }}
      - run:
          name: Run maven install in setup/com.dexels.navajo.target
          command: |
            cd setup/com.dexels.navajo.target
            mvn -s ../../.circleci/conf/settings.xml -B install
            cd ../..
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "setup/com.dexels.navajo.target/maven.target" }}

      # Build; tests are skipped for now
      - run:
          name: Run maven install
          command: mvn -B -s .circleci/conf/settings.xml install -DskipTests=true -Denvironment=release

      # Just for debug inspection purposes
      - run:
          name: zip .m2 environment in navajo_maven.zip
          command: |
            cd ~
            du -hs .m2
            zip -r navajo_maven.zip .m2

      - store_artifacts:
          path: ~/navajo_maven.zip
          destination: navajo_maven.zip

      # p2 zipfiles generated by Tycho plugin
      - store_artifacts:
          path: ~/repo/setup/com.dexels.navajo.p2/target/com.dexels.navajo.p2-1.0.0-SNAPSHOT.zip
          destination: navajo_p2.zip

      - store_artifacts:
          path: ~/repo/setup/com.dexels.streams.p2/target/com.dexels.streams.p2-1.0.0-SNAPSHOT.zip
          destination: streams_p2.zip

      # Store test result and platform artifacts
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - run:
          name: Push (scp) com.dexels P2 environment to p2.dexels.com
          command: |
            echo 'p2.dexels.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrZzVVA2wObMu7J+IQ8NPMfRMVf+VaJgOrutfISWTqm9NCErJjze5ESgP6MGrzNcC8zNBSyN67nFV5HnDtfOmelAmQeJWHj6MT2kFRhIzxS9WX1G2pOnO8uXj/D/hJalbF2RhF29VhICZ1K9dKRu/SukNjyaZZ1UhHZGKhDgNuK9JfJsZVolVV1+rNr+AzKEKylQ/B6u+dltgLt1Zhdyk7aaPTWFPXICKFcCvR2z2As1fKWok5otixDmhq8dZbq9uzsUUyjFMuOBbijOX0GBRgqMF+v/Opgmz+Ad/yOhyZXhqMr63yVQxNPrZRXFbQWrvxnQSQA88zax49XuBDK71t' >> ~/.ssh/known_hosts
            ssh navajo@p2.dexels.com "mkdir -p /var/www/html/repo/eclipse/navajo_${MINORTAG}.${CIRCLE_BUILD_NUM}/"
            scp -r ~/repo/setup/com.dexels.navajo.p2/target/repository/* navajo@p2.dexels.com:/var/www/html/repo/eclipse/navajo_${MINORTAG}.${CIRCLE_BUILD_NUM}

      # Update enterprise
      - run:
          name: Update enterprise dependency on navajo to latest navajo build version (Triggers CI build on enterprise)
          command: |
            mkdir ~/enterprisecheckout
            cd  ~/enterprisecheckout
            git clone https://${GITHUB_PERSONAL_TOKEN}@github.com/Dexels/enterprise.git
            ls -l
            cd enterprise/enterprise/com.dexels.enterprise.target
            ./updateversion.sh
            # Push changes
            git config credential.helper 'cache --timeout=120'
            git config user.email "Dexels Butler"
            git config user.name "butler@dexels.com"
            git add .
            echo "commiting changes"
            git commit --allow-empty -m "Update via CircleCI"
            git push -q https://${GITHUB_PERSONAL_TOKEN}@github.com/Dexels/enterprise.git master
            echo "push complete"

      - run:
          name: Trigger navajo-vaadin build
          command: |
            echo "skipping downstream"
            #curl -X POST --header "Content-Type: application/json" -d '{"branch":"master"}' "https://circleci.com/api/v1.1/project/github/dexels/enterprise/build?circle-token=${CIRCLE_TOKEN}"
            curl -X POST --header "Content-Type: application/json" -d '{"branch":"master"}' "https://circleci.com/api/v1.1/project/github/dexels/navajo-vaadin/build?circle-token=${CIRCLE_TOKEN}"

  build_n_test:
    docker:
      - image: circleci/openjdk:11-jdk
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx1000m
      TERM: dumb
    steps:
      # Setup
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "setup/com.dexels.navajo.target/maven.target" }}
      - run:
          name: Run maven install in setup/com.dexels.navajo.target
          command: |
            cd setup/com.dexels.navajo.target
            mvn -s ../../.circleci/conf/settings.xml -B install
            cd ../..
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "setup/com.dexels.navajo.target/maven.target" }}

      # Build; tests are skipped for now
      - run:
          name: Run maven package
          command: mvn  -B  package  -Denvironment=release

workflows:
  version: 2
  workflow:
    jobs:
      - build_test_n_deploy:
          context:
          - dexels_docker_hub
          filters:
            branches:
              only:
                - master

      - build_n_test:
          context:
          - dexels_docker_hub
          filters:
            branches:
              ignore:
                - master

