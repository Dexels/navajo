/* Generated By:JJTree: Do not edit this line. ASTForAllNode.java */

package com.dexels.navajo.parser;


import java.util.*;
import com.dexels.navajo.document.*;
import com.dexels.navajo.parser.*;
import com.dexels.navajo.util.*;


public class ASTForAllNode extends SimpleNode {

    String functionName;
    Navajo doc;
    Message parentMsg;
    Object mapObject;

    public ASTForAllNode(int id) {
        super(id);
    }

    private String searchAndReplace(String text, String tag, String replace) {

        StringBuffer result;
        String before = "", last = "";
        int start, end;

        result = new StringBuffer();

        start = 0;
        end = -1;

        start = text.indexOf(tag, end);

        if (start == -1)
            return text;

        while (start != -1) {

            before = text.substring(end + 1, start);
            end = text.indexOf("]", start);

            result.append(before);
            result.append(replace);

            start = text.indexOf(tag, end);
            if (start == -1)
                last = text.substring(end + 1, text.length());
            result.append(last);
        }

        return result.toString();

    }

    public Object interpret() throws TMLExpressionException {

        boolean matchAll = true;

        if (functionName.equals("FORALL"))
            matchAll = true;
        else
            matchAll = false;

        Util.debugLog("in ASTForAllNode()");
        // Util.debugLog("Navajo doc = " + doc);
        Util.debugLog("Parent msg = " + parentMsg);
        Util.debugLog("Mappable object = " + mapObject);
        Util.debugLog("functionname = " + functionName);
        Object a = (Object) jjtGetChild(0).interpret();

        Util.debugLog("a = " + a);
        Object b = (Object) jjtGetChild(1).interpret();

        Util.debugLog(" b= " + b);

        try {
            if (a instanceof ArrayList) {
                ArrayList list = (ArrayList) a;

                for (int i = 0; i < list.size(); i++) {
                    Object o = list.get(i);
                    String value = "";

                    if (o instanceof String)
                        value = "'" + o.toString() + "'";
                    else
                        value = o.toString();
                    String expr = searchAndReplace((String) b, "[$x]", value);

                    Util.debugLog("evaluating expression: " + expr);
                    boolean result = Condition.evaluate(expr, doc, mapObject, parentMsg);

                    if ((result == false) && matchAll)
                        return new Boolean(false);
                    if ((result == true) && !matchAll)
                        return new Boolean(true);
                }
            } else
                throw new TMLExpressionException("Expected list operand in FORALL construct.");
        } catch (com.dexels.navajo.server.SystemException se) {
            throw new TMLExpressionException("Invalid expression in FORALL construct: \n" + se.getMessage());
        }

        if (matchAll)
            return new Boolean(true);
        else
            return new Boolean(false);
    }
}
