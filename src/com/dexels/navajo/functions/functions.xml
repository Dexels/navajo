<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<functiondef>
    <function name="ToBold" class="com.dexels.navajo.functions.ToBold">
        <description>Make text bold. Html-style</description>
        <input>string</input>
        <result>string</result>
    </function>
    <function name="GetComponent" class="com.dexels.navajo.functions.GetComponent">
        <description>Looks for a component with the given ID, will look downwards from the current component. It will do a PRE order tree search.</description>
        <input>tipi,string</input>
        <result>tipi</result>
    </function>
        <function name="GetComponentId" class="com.dexels.navajo.functions.GetComponentId">
        <description>Returns the id of a TipiComponent</description>
        <input>tipi</input>
        <result>string</result>
    </function>
    <function name="GetAttribute" class="com.dexels.navajo.functions.GetAttribute">
        <description>Gets the attribute ref of a component</description>
        <input>tipi,string</input>
        <result>object</result>
    </function>
    <function name="GetConnectorInit" class="com.dexels.navajo.functions.GetConnectorInit">
        <description>Retrieves the init function of a connector.</description>
        <input>tipi,string</input>
        <result>string</result>
    </function>
    <function name="GetGlobal" class="com.dexels.navajo.functions.GetGlobal">
        <description>Gets a certain global value (TipiContext, key)</description>
        <input>tipi,string</input>
        <result>object</result>
    </function>
    <function name="GlobalReference" class="com.dexels.navajo.functions.GlobalReference">
        <description>Gets a certain global value (TipiContext, key)</description>
        <input>tipi,string</input>
        <result>object</result>
    </function>
    <function name="ToValue" class="com.dexels.navajo.functions.ToValue">
        <description>Dereferences a TipiReference, which is basically a pointer. cool.</description>
        <input>reference</input>
        <result>object</result>
    </function>
 
    
</functiondef>
