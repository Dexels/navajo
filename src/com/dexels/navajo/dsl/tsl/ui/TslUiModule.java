/*
 * generated by Xtext
 */
package com.dexels.navajo.dsl.tsl.ui;

import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.ui.editor.outline.transformer.ISemanticModelTransformer;
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration;
import org.eclipse.xtext.ui.editor.syntaxcoloring.ISemanticHighlightingCalculator;
import org.eclipse.xtext.ui.editor.syntaxcoloring.antlr.AbstractAntlrTokenToAttributeIdMapper;

import com.dexels.navajo.document.Navajo;
import com.dexels.navajo.dsl.expression.proposals.INavajoContextProvider;
import com.dexels.navajo.dsl.tsl.ui.highlighting.TslHighlightingConfiguration;
import com.dexels.navajo.dsl.tsl.ui.highlighting.TslLexicalHighlightingMapper;
import com.dexels.navajo.dsl.tsl.ui.highlighting.TslSemanticHighlightingCalculator;
import com.dexels.navajo.dsl.tsl.ui.internal.TslActivator;
import com.dexels.navajo.dsl.tsl.ui.outline.TslTransformer;
import com.dexels.navajo.studio.eclipse.INavajoActivityListener;
import com.dexels.navajo.studio.script.plugin.NavajoScriptPluginPlugin;
import com.google.inject.Injector;

/**
 * Use this class to register components to be used within the IDE.
 */
public class TslUiModule extends
		com.dexels.navajo.dsl.tsl.ui.AbstractTslUiModule {
	public TslUiModule(AbstractUIPlugin plugin) {
		super(plugin);
//		NavajoScriptPluginPlugin.getDefault().addNavajoActivityListener(new INavajoActivityListener(){
//
//			@Override
//			public void navajoResponse(Navajo n, String scriptName) {
//				System.err.println("NAVAJO CALLLLLLLLLED: "+scriptName);
//				Injector ii = TslActivator.getInstance().getInjector("com.dexels.navajo.dsl.tsl.Tsl");
//				INavajoContextProvider icp2 = ii.getInstance(INavajoContextProvider.class);
//				icp2.setInputNavajo(n);
//			}});
	}

	public Class<? extends ISemanticHighlightingCalculator> bindSemanticHighlightingCalculator() {
		return TslSemanticHighlightingCalculator.class;
	}

	public Class<? extends IHighlightingConfiguration> bindSemanticConfig() {
		return TslHighlightingConfiguration.class;
	}
	public Class<? extends AbstractAntlrTokenToAttributeIdMapper> bindAbstractAntlrTokenToAttributeIdMapper() {
		return TslLexicalHighlightingMapper.class ;
	}

	  @Override
	  public Class<? extends ISemanticModelTransformer> 
	  	 bindISemanticModelTransformer() {
	    return TslTransformer.class;
	  }
	
}
