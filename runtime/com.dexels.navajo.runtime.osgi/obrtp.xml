<?xml version='1.0' encoding='utf-8'?>
<?xml-stylesheet type='text/xsl' href='http://www2.osgi.org/www/obr2html.xsl'?>
<repository name='Thirdparty OBR wrapper' lastmodified='1340216308084'>
<resource id='slf4j.api/1.6.4' presentationname='slf4j-api' symbolicname='slf4j.api' uri='../slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar' version='1.6.4'>
  <description>
    The slf4j API
  </description>
  <size>
    25962
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='slf4j-api'/>
    <p n='symbolicname' v='slf4j.api'/>
    <p n='version' t='version' v='1.6.4'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.slf4j'/>
    <p n='version' t='version' v='1.6.4'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.slf4j.spi'/>
    <p n='version' t='version' v='1.6.4'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.slf4j.helpers'/>
    <p n='version' t='version' v='1.6.4'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.slf4j.impl)(version&gt;=1.6.0))' multiple='false' name='package' optional='false'>
    Import package org.slf4j.impl ;version=1.6.0
  </require>
  <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
    Execution Environment (|(ee=J2SE-1.3))
  </require>
</resource>
<resource id='org.junit/3.8.2.v3_8_2_v20100427-1100' presentationname='pluginName' symbolicname='org.junit' uri='../junit/junit-bundle/3.8.2/junit-bundle-3.8.2-v20100427-1100.jar' version='3.8.2.v3_8_2_v20100427-1100'>
  <size>
    119483
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='pluginName'/>
    <p n='symbolicname' v='org.junit'/>
    <p n='version' t='version' v='3.8.2.v3_8_2_v20100427-1100'/>
  </capability>
  <capability name='package'>
    <p n='package' v='junit.awtui'/>
    <p n='version' t='version' v='3.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='junit.extensions'/>
    <p n='version' t='version' v='3.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='junit.framework'/>
    <p n='version' t='version' v='3.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='junit.runner'/>
    <p n='version' t='version' v='3.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='junit.swingui'/>
    <p n='version' t='version' v='3.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='junit.swingui.icons'/>
    <p n='version' t='version' v='3.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='junit.textui'/>
    <p n='version' t='version' v='3.8.2'/>
  </capability>
  <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
    Execution Environment (|(ee=J2SE-1.3))
  </require>
</resource>
<resource id='org.junit/3.8.2.v3_8_2_v20100427-1100' presentationname='pluginName' symbolicname='org.junit' uri='../junit/junit-bundle/3.8.2/junit-bundle-3.8.2-v20100427.jar' version='3.8.2.v3_8_2_v20100427-1100'>
  <size>
    119483
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='pluginName'/>
    <p n='symbolicname' v='org.junit'/>
    <p n='version' t='version' v='3.8.2.v3_8_2_v20100427-1100'/>
  </capability>
  <capability name='package'>
    <p n='package' v='junit.awtui'/>
    <p n='version' t='version' v='3.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='junit.extensions'/>
    <p n='version' t='version' v='3.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='junit.framework'/>
    <p n='version' t='version' v='3.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='junit.runner'/>
    <p n='version' t='version' v='3.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='junit.swingui'/>
    <p n='version' t='version' v='3.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='junit.swingui.icons'/>
    <p n='version' t='version' v='3.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='junit.textui'/>
    <p n='version' t='version' v='3.8.2'/>
  </capability>
  <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
    Execution Environment (|(ee=J2SE-1.3))
  </require>
</resource>
<resource id='com.jcraft.jzlib/1.1.1.v201205102305' presentationname='bundleName' symbolicname='com.jcraft.jzlib' uri='../com/jcraft/jzlib/1.1.1/jzlib-1.1.1.jar' version='1.1.1.v201205102305'>
  <size>
    79678
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='bundleName'/>
    <p n='symbolicname' v='com.jcraft.jzlib'/>
    <p n='version' t='version' v='1.1.1.v201205102305'/>
  </capability>
  <capability name='package'>
    <p n='package' v='com.jcraft.jzlib'/>
    <p n='version' t='version' v='1.1.1'/>
  </capability>
  <require extend='false' filter='(|(ee=J2SE-1.4))' multiple='false' name='ee' optional='false'>
    Execution Environment (|(ee=J2SE-1.4))
  </require>
</resource>
<resource id='com.oracle.jdbc.driver/11.2.33' presentationname='Oracle JDBC Driver' symbolicname='com.oracle.jdbc.driver' uri='../com/dexels/navajo/com.oracle.jdbc.driver/11.2.33/com.oracle.jdbc.driver-11.2.33.jar' version='11.2.33'>
  <size>
    2714334
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Oracle JDBC Driver'/>
    <p n='symbolicname' v='com.oracle.jdbc.driver'/>
    <p n='version' t='version' v='11.2.33'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.core.lmx'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.core.lvf'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc.aq'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc.connector'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc.dcn'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc.diagnostics'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc.driver'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc.internal'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc.oci'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc.oracore'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc.pool'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc.proxy'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc.proxy.annotation'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc.replay'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc.replay.driver'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc.replay.internal'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc.rowset'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc.xa'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jdbc.xa.client'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.jpub.runtime'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.net.ano'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.net.aso'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.net.jdbc.TNSAddress'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.net.jdbc.nl'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.net.jdbc.nl.mesg'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.net.jndi'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.net.ns'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.net.nt'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.net.resolver'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.security.o3logon'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.security.o5logon'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.sql'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='oracle.sql.converter'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.management
  </require>
  <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.naming
  </require>
  <require extend='false' filter='(&amp;(package=javax.naming.directory)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.naming.directory
  </require>
  <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.sql
  </require>
  <require extend='false' filter='(&amp;(package=javax.sql.rowset)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.sql.rowset
  </require>
  <require extend='false' filter='(&amp;(package=javax.sql.rowset.serial)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.sql.rowset.serial
  </require>
  <require extend='false' filter='(&amp;(package=javax.sql.rowset.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.sql.rowset.spi
  </require>
  <require extend='false' filter='(&amp;(package=org.ietf.jgss)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.ietf.jgss
  </require>
  <require extend='false' filter='(|(ee=JavaSE-1.6))' multiple='false' name='ee' optional='false'>
    Execution Environment (|(ee=JavaSE-1.6))
  </require>
</resource>
<resource id='org.mozilla.javascript/1.7.2.v201005080400' presentationname='Mozilla Rhino' symbolicname='org.mozilla.javascript' uri='../org/mozilla/org.mozilla.javascript/1.7.2/org.mozilla.javascript-1.7.2.jar' version='1.7.2.v201005080400'>
  <size>
    899741
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Mozilla Rhino'/>
    <p n='symbolicname' v='org.mozilla.javascript'/>
    <p n='version' t='version' v='1.7.2.v201005080400'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.mozilla.classfile'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.mozilla.javascript'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.mozilla.javascript.debug'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.mozilla.javascript.jdk13'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.mozilla.javascript.jdk15'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.mozilla.javascript.optimizer'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.mozilla.javascript.regexp'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.mozilla.javascript.serialize'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.mozilla.javascript.tools'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.mozilla.javascript.tools.debugger'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.mozilla.javascript.tools.debugger.treetable'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.mozilla.javascript.tools.idswitch'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.mozilla.javascript.tools.jsc'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.mozilla.javascript.tools.shell'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.mozilla.javascript.xml'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.mozilla.javascript.xml.impl.xmlbeans'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.mozilla.javascript.xmlimpl'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.swing
  </require>
  <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.swing.border
  </require>
  <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.swing.event
  </require>
  <require extend='false' filter='(&amp;(package=javax.swing.filechooser)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.swing.filechooser
  </require>
  <require extend='false' filter='(&amp;(package=javax.swing.table)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.swing.table
  </require>
  <require extend='false' filter='(&amp;(package=javax.swing.text)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.swing.text
  </require>
  <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.swing.tree
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.xml.namespace
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.xml.parsers
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.xml.transform
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.xml.transform.dom
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.xml.transform.stream
  </require>
  <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.w3c.dom
  </require>
  <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.xml.sax
  </require>
  <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
    Execution Environment (|(ee=J2SE-1.5))
  </require>
</resource>
<resource id='org.hamcrest.core/1.1.0.v20090501071000' presentationname='pluginName' symbolicname='org.hamcrest.core' uri='../org/slf4j/api/1.6.1/api-1.6.1-20090501071000.jar' version='1.1.0.v20090501071000'>
  <size>
    27827
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='pluginName'/>
    <p n='symbolicname' v='org.hamcrest.core'/>
    <p n='version' t='version' v='1.1.0.v20090501071000'/>
  </capability>
  <capability name='package'>
    <p n='core' v='split'/>
    <p n='mandatory' v='core'/>
    <p n='package' v='org.hamcrest'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.hamcrest.core'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.hamcrest.internal'/>
    <p n='version' t='version' v='1.1.0'/>
    <p n='x-internal' v='true'/>
  </capability>
  <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
    Execution Environment (|(ee=J2SE-1.5))
  </require>
</resource>
<resource id='org.slf4j.api/1.6.1.v20100831-0715' presentationname='Bundle-Name.0' symbolicname='org.slf4j.api' uri='../org/slf4j/api/1.6.1/api-1.6.1-20100831-0715.jar' version='1.6.1.v20100831-0715'>
  <size>
    33737
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Bundle-Name.0'/>
    <p n='symbolicname' v='org.slf4j.api'/>
    <p n='version' t='version' v='1.6.1.v20100831-0715'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.slf4j'/>
    <p n='version' t='version' v='1.6.1'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.slf4j.helpers'/>
    <p n='version' t='version' v='1.6.1'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.slf4j.spi'/>
    <p n='version' t='version' v='1.6.1'/>
  </capability>
  <require extend='false' filter='(|(ee=J2SE-1.3)(ee=CDC-1.1/Foundation-1.1))' multiple='false' name='ee' optional='false'>
    Execution Environment (|(ee=J2SE-1.3)(ee=CDC-1.1/Foundation-1.1))
  </require>
</resource>
<resource id='org.w3c.css.sac/1.3.0.v200805290154' presentationname='pluginName' symbolicname='org.w3c.css.sac' uri='../org/w3c/css/sac/1.3.0/sac-1.3.0.jar' version='1.3.0.v200805290154'>
  <size>
    30792
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='pluginName'/>
    <p n='symbolicname' v='org.w3c.css.sac'/>
    <p n='version' t='version' v='1.3.0.v200805290154'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.w3c.css.sac'/>
    <p n='version' t='version' v='1.3.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.w3c.css.sac.helpers'/>
    <p n='version' t='version' v='1.3.0'/>
  </capability>
  <require extend='false' filter='(|(ee=J2SE-1.3)(ee=CDC-1.0/Foundation-1.0))' multiple='false' name='ee' optional='false'>
    Execution Environment (|(ee=J2SE-1.3)(ee=CDC-1.0/Foundation-1.0))
  </require>
</resource>
<resource id='org.jgroups/2.5.1.201109021502' presentationname='JGroups' symbolicname='org.jgroups' uri='../org/jgroups/org.jgroups/2.5.1/org.jgroups-2.5.1.jar' version='2.5.1.201109021502'>
  <size>
    1992942
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='JGroups'/>
    <p n='symbolicname' v='org.jgroups'/>
    <p n='version' t='version' v='2.5.1.201109021502'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.annotations'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.auth'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.blocks'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.conf'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.debug'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.demos'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.demos.applets'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.demos.wb'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.jmx'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.jmx.protocols'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.jmx.protocols.pbcast'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.mux'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.persistence'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.protocols'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.protocols.pbcast'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.stack'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.tests'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.tests.perf'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.tests.perf.transports'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.tests.stack'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jgroups.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <require extend='false' filter='(|(ee=JavaSE-1.6))' multiple='false' name='ee' optional='false'>
    Execution Environment (|(ee=JavaSE-1.6))
  </require>
</resource>
<resource id='org.apache.commons.logging/1.1.1.v201101211721' presentationname='bundleName' symbolicname='org.apache.commons.logging' uri='../org/apache/commons/logging/1.1.1/logging-1.1.1.jar' version='1.1.1.v201101211721'>
  <size>
    68107
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='bundleName'/>
    <p n='symbolicname' v='org.apache.commons.logging'/>
    <p n='version' t='version' v='1.1.1.v201101211721'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.commons.logging'/>
    <p n='version' t='version' v='1.1.1'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.commons.logging.impl'/>
    <p n='version' t='version' v='1.1.1'/>
  </capability>
  <require extend='false' filter='(|(ee=CDC-1.0/Foundation-1.0)(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
    Execution Environment (|(ee=CDC-1.0/Foundation-1.0)(ee=J2SE-1.3))
  </require>
</resource>
<resource id='org.apache.commons.collections/3.2.0.v201005080500' presentationname='Apache Commons Collections' symbolicname='org.apache.commons.collections' uri='../org/apache/commons/collections/3.2.0/collections-3.2.0.jar' version='3.2.0.v201005080500'>
  <size>
    611225
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Commons Collections'/>
    <p n='symbolicname' v='org.apache.commons.collections'/>
    <p n='version' t='version' v='3.2.0.v201005080500'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.commons.collections'/>
    <p n='version' t='version' v='3.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.commons.collections.bag'/>
    <p n='version' t='version' v='3.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.commons.collections.bidimap'/>
    <p n='version' t='version' v='3.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.commons.collections.buffer'/>
    <p n='version' t='version' v='3.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.commons.collections.collection'/>
    <p n='version' t='version' v='3.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.commons.collections.comparators'/>
    <p n='version' t='version' v='3.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.commons.collections.functors'/>
    <p n='version' t='version' v='3.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.commons.collections.iterators'/>
    <p n='version' t='version' v='3.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.commons.collections.keyvalue'/>
    <p n='version' t='version' v='3.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.commons.collections.list'/>
    <p n='version' t='version' v='3.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.commons.collections.map'/>
    <p n='version' t='version' v='3.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.commons.collections.set'/>
    <p n='version' t='version' v='3.2.0'/>
  </capability>
  <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
    Execution Environment (|(ee=J2SE-1.3))
  </require>
</resource>
<resource id='org.apache.commons.beanutils/1.7.0.v200902170505' presentationname='Apache Commons BeanUtils' symbolicname='org.apache.commons.beanutils' uri='../org/apache/commons/beanutils/1.7.0/beanutils-1.7.0.jar' version='1.7.0.v200902170505'>
  <size>
    201351
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Commons BeanUtils'/>
    <p n='symbolicname' v='org.apache.commons.beanutils'/>
    <p n='version' t='version' v='1.7.0.v200902170505'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.commons.beanutils'/>
    <p n='version' t='version' v='1.7.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.commons.beanutils.converters'/>
    <p n='version' t='version' v='1.7.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.commons.beanutils.locale'/>
    <p n='version' t='version' v='1.7.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.commons.beanutils.locale.converters'/>
    <p n='version' t='version' v='1.7.0'/>
  </capability>
  <require extend='false' filter='(&amp;(symbolicname=org.apache.commons.collections)(version&gt;=3.2.0))' multiple='false' name='bundle' optional='true'>
    Require Bundle org.apache.commons.collections; 3.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.0.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
    Import package org.apache.commons.logging ;version=[1.0.4,2.0.0)
  </require>
  <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
    Execution Environment (|(ee=J2SE-1.3))
  </require>
</resource>
<resource id='org.apache.tika.app/1.1.0' presentationname='Apache Tika application' symbolicname='org.apache.tika.app' uri='../org/apache/tika/tika-app/1.1/tika-app-1.1.jar' version='1.1.0'>
  <description>
    Apache Tika is a toolkit for detecting and extracting metadata and    structured text content from various documents using existing parser    libraries.
  </description>
  <documentation>
    http://tika.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <size>
    25706895
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Tika application'/>
    <p n='symbolicname' v='org.apache.tika.app'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.tika.cli'/>
    <p n='uses' v='javax.xml.transform.sax,org.xml.sax,org.xml.sax.helpers,org.apache.tika.gui,javax.xml.transform,javax.xml.transform.stream'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.tika.gui'/>
    <p n='uses' v='javax.swing,org.xml.sax.helpers,org.xml.sax,javax.xml.transform,javax.xml.transform.stream,javax.swing.event,javax.xml.transform.sax'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=com.google.protobuf)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package com.google.protobuf
  </require>
  <require extend='false' filter='(&amp;(package=com.ibm.icu.text)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package com.ibm.icu.text
  </require>
  <require extend='false' filter='(&amp;(package=com.sleepycat.je)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package com.sleepycat.je
  </require>
  <require extend='false' filter='(&amp;(package=com.sun.image.codec.jpeg)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package com.sun.image.codec.jpeg
  </require>
  <require extend='false' filter='(&amp;(package=com.sun.javadoc)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package com.sun.javadoc
  </require>
  <require extend='false' filter='(&amp;(package=com.sun.jdi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package com.sun.jdi
  </require>
  <require extend='false' filter='(&amp;(package=com.sun.jdi.connect)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package com.sun.jdi.connect
  </require>
  <require extend='false' filter='(&amp;(package=com.sun.jdi.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package com.sun.jdi.event
  </require>
  <require extend='false' filter='(&amp;(package=com.sun.jdi.request)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package com.sun.jdi.request
  </require>
  <require extend='false' filter='(&amp;(package=com.sun.jdmk.comm)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package com.sun.jdmk.comm
  </require>
  <require extend='false' filter='(&amp;(package=com.sun.msv.datatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package com.sun.msv.datatype
  </require>
  <require extend='false' filter='(&amp;(package=com.sun.msv.datatype.xsd)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package com.sun.msv.datatype.xsd
  </require>
  <require extend='false' filter='(&amp;(package=com.sun.tools.javadoc)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package com.sun.tools.javadoc
  </require>
  <require extend='false' filter='(&amp;(package=edu.wisc.ssec.mcidas)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package edu.wisc.ssec.mcidas
  </require>
  <require extend='false' filter='(&amp;(package=edu.wisc.ssec.mcidas.adde)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package edu.wisc.ssec.mcidas.adde
  </require>
  <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.activation
  </require>
  <require extend='false' filter='(&amp;(package=javax.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.crypto
  </require>
  <require extend='false' filter='(&amp;(package=javax.crypto.interfaces)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.crypto.interfaces
  </require>
  <require extend='false' filter='(&amp;(package=javax.crypto.spec)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.crypto.spec
  </require>
  <require extend='false' filter='(&amp;(package=javax.imageio)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.imageio
  </require>
  <require extend='false' filter='(&amp;(package=javax.imageio.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.imageio.metadata
  </require>
  <require extend='false' filter='(&amp;(package=javax.imageio.plugins.jpeg)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.imageio.plugins.jpeg
  </require>
  <require extend='false' filter='(&amp;(package=javax.imageio.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.imageio.stream
  </require>
  <require extend='false' filter='(&amp;(package=javax.jms)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.jms
  </require>
  <require extend='false' filter='(&amp;(package=javax.mail)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.mail
  </require>
  <require extend='false' filter='(&amp;(package=javax.mail.internet)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.mail.internet
  </require>
  <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.management
  </require>
  <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.naming
  </require>
  <require extend='false' filter='(&amp;(package=javax.naming.directory)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.naming.directory
  </require>
  <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.net.ssl
  </require>
  <require extend='false' filter='(&amp;(package=javax.print)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.print
  </require>
  <require extend='false' filter='(&amp;(package=javax.print.attribute.standard)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.print.attribute.standard
  </require>
  <require extend='false' filter='(&amp;(package=javax.security.auth.x500)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.security.auth.x500
  </require>
  <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.servlet
  </require>
  <require extend='false' filter='(&amp;(package=javax.sound.midi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.sound.midi
  </require>
  <require extend='false' filter='(&amp;(package=javax.sound.sampled)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.sound.sampled
  </require>
  <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.swing
  </require>
  <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.swing.border
  </require>
  <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.swing.event
  </require>
  <require extend='false' filter='(&amp;(package=javax.swing.filechooser)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.swing.filechooser
  </require>
  <require extend='false' filter='(&amp;(package=javax.swing.table)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.swing.table
  </require>
  <require extend='false' filter='(&amp;(package=javax.swing.text)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.swing.text
  </require>
  <require extend='false' filter='(&amp;(package=javax.swing.text.html)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.swing.text.html
  </require>
  <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.swing.tree
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.xml.bind
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.datatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.xml.datatype
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.xml.namespace
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.xml.parsers
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.xml.transform
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.xml.transform.dom
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.xml.transform.sax
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.xml.transform.stream
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.xml.validation
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.xpath)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.xml.xpath
  </require>
  <require extend='false' filter='(&amp;(package=junit.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package junit.framework
  </require>
  <require extend='false' filter='(&amp;(package=junit.textui)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package junit.textui
  </require>
  <require extend='false' filter='(&amp;(package=net.sf.ehcache)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package net.sf.ehcache
  </require>
  <require extend='false' filter='(&amp;(package=opendap.dap)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package opendap.dap
  </require>
  <require extend='false' filter='(&amp;(package=opendap.dap.parser)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package opendap.dap.parser
  </require>
  <require extend='false' filter='(&amp;(package=oracle.xml.parser)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package oracle.xml.parser
  </require>
  <require extend='false' filter='(&amp;(package=oracle.xml.parser.v2)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package oracle.xml.parser.v2
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.avalon.framework.logger)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.avalon.framework.logger
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.commons.httpclient
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.auth)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.commons.httpclient.auth
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.methods)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.commons.httpclient.methods
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.params)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.commons.httpclient.params
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.protocol)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.commons.httpclient.protocol
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.crimson.jaxp)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.crimson.jaxp
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.log)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.log
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.tools.ant)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.tools.ant
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.tools.ant.taskdefs)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.tools.ant.taskdefs
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.tools.ant.types)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.tools.ant.types
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.xerces.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.xerces.dom
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.xerces.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.xerces.parsers
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.xerces.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.xerces.util
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.xerces.xni)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.xerces.xni
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.xerces.xni.parser)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.xerces.xni.parser
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.xml.resolver)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.xml.resolver
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.xml.resolver.tools)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.xml.resolver.tools
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.xmlbeans.impl.xpath.saxon)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.xmlbeans.impl.xpath.saxon
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.xmlbeans.impl.xquery.saxon)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.xmlbeans.impl.xquery.saxon
  </require>
  <require extend='false' filter='(&amp;(package=org.cyberneko.html.xercesbridge)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.cyberneko.html.xercesbridge
  </require>
  <require extend='false' filter='(&amp;(package=org.gjt.xpp)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.gjt.xpp
  </require>
  <require extend='false' filter='(&amp;(package=org.jaxen)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.jaxen
  </require>
  <require extend='false' filter='(&amp;(package=org.jaxen.dom4j)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.jaxen.dom4j
  </require>
  <require extend='false' filter='(&amp;(package=org.jaxen.jdom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.jaxen.jdom
  </require>
  <require extend='false' filter='(&amp;(package=org.jaxen.pattern)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.jaxen.pattern
  </require>
  <require extend='false' filter='(&amp;(package=org.jaxen.saxpath)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.jaxen.saxpath
  </require>
  <require extend='false' filter='(&amp;(package=org.openxmlformats.schemas.officeDocument.x2006.math)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.openxmlformats.schemas.officeDocument.x2006.math
  </require>
  <require extend='false' filter='(&amp;(package=org.openxmlformats.schemas.schemaLibrary.x2006.main)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.openxmlformats.schemas.schemaLibrary.x2006.main
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework
  </require>
  <require extend='false' filter='(&amp;(package=org.relaxng.datatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.relaxng.datatype
  </require>
  <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.xml.sax
  </require>
  <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.xml.sax.ext
  </require>
  <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.xml.sax.helpers
  </require>
  <require extend='false' filter='(&amp;(package=org.xmlpull.v1)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.xmlpull.v1
  </require>
  <require extend='false' filter='(&amp;(package=schemasMicrosoftComOfficePowerpoint)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package schemasMicrosoftComOfficePowerpoint
  </require>
  <require extend='false' filter='(&amp;(package=schemasMicrosoftComOfficeWord)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package schemasMicrosoftComOfficeWord
  </require>
  <require extend='false' filter='(&amp;(package=ucar.grib)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package ucar.grib
  </require>
  <require extend='false' filter='(&amp;(package=ucar.grib.grib1)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package ucar.grib.grib1
  </require>
  <require extend='false' filter='(&amp;(package=ucar.grib.grib2)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package ucar.grib.grib2
  </require>
  <require extend='false' filter='(&amp;(package=ucar.grid)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package ucar.grid
  </require>
  <require extend='false' filter='(&amp;(package=visad)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package visad
  </require>
  <require extend='false' filter='(&amp;(package=visad.data)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package visad.data
  </require>
  <require extend='false' filter='(&amp;(package=visad.data.vis5d)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package visad.data.vis5d
  </require>
  <require extend='false' filter='(&amp;(package=visad.jmet)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package visad.jmet
  </require>
  <require extend='false' filter='(&amp;(package=visad.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package visad.util
  </require>
</resource>
<resource id='org.kjkoster.zapcat/1.2.0.201109021502' presentationname='Zapcat' symbolicname='org.kjkoster.zapcat' uri='../org/kjkoster/org.kjkoster.zapcat/1.2.0/org.kjkoster.zapcat-1.2.0.jar' version='1.2.0.201109021502'>
  <size>
    41010
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Zapcat'/>
    <p n='symbolicname' v='org.kjkoster.zapcat'/>
    <p n='version' t='version' v='1.2.0.201109021502'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.kjkoster.zapcat'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.kjkoster.zapcat.openfire'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.kjkoster.zapcat.servlet'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.kjkoster.zapcat.test'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.kjkoster.zapcat.zabbix'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <require extend='false' filter='(|(ee=JavaSE-1.6))' multiple='false' name='ee' optional='false'>
    Execution Environment (|(ee=JavaSE-1.6))
  </require>
</resource>
<resource id='org.junit/4.8.2.v4_8_2_v20110321-1705' presentationname='pluginName' symbolicname='org.junit' uri='../org/junit/org.junit/4.8.2/org.junit-4.8.2.jar' version='4.8.2.v4_8_2_v20110321-1705'>
  <size>
    202600
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='pluginName'/>
    <p n='symbolicname' v='org.junit'/>
    <p n='version' t='version' v='4.8.2.v4_8_2_v20110321-1705'/>
  </capability>
  <capability name='package'>
    <p n='package' v='junit.extensions'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='junit.framework'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='junit.runner'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='junit.textui'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.experimental'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.experimental.categories'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.experimental.max'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.experimental.results'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.experimental.runners'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.experimental.theories'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.experimental.theories.internal'/>
    <p n='version' t='version' v='4.8.2'/>
    <p n='x-internal' v='true'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.experimental.theories.suppliers'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.internal'/>
    <p n='version' t='version' v='4.8.2'/>
    <p n='x-internal' v='true'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.internal.builders'/>
    <p n='version' t='version' v='4.8.2'/>
    <p n='x-internal' v='true'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.internal.matchers'/>
    <p n='version' t='version' v='4.8.2'/>
    <p n='x-internal' v='true'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.internal.requests'/>
    <p n='version' t='version' v='4.8.2'/>
    <p n='x-internal' v='true'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.internal.runners'/>
    <p n='version' t='version' v='4.8.2'/>
    <p n='x-internal' v='true'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.internal.runners.model'/>
    <p n='version' t='version' v='4.8.2'/>
    <p n='x-internal' v='true'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.internal.runners.statements'/>
    <p n='version' t='version' v='4.8.2'/>
    <p n='x-internal' v='true'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.matchers'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.rules'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.runner'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.runner.manipulation'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.runner.notification'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.runners'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.junit.runners.model'/>
    <p n='version' t='version' v='4.8.2'/>
  </capability>
  <require extend='false' filter='(&amp;(symbolicname=org.hamcrest.core)(version&gt;=1.1.0))' multiple='false' name='bundle' optional='false'>
    Require Bundle org.hamcrest.core; 1.1.0
  </require>
  <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
    Execution Environment (|(ee=J2SE-1.5))
  </require>
</resource>
<resource id='org.igniterealtime.smackx/3.2.2' presentationname='Smack Muc Library' symbolicname='org.igniterealtime.smackx' uri='../org/igniterealtime/smack/smackx/3.2.2/smackx-3.2.2.jar' version='3.2.2'>
  <size>
    711775
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Smack Muc Library'/>
    <p n='symbolicname' v='org.igniterealtime.smackx'/>
    <p n='version' t='version' v='3.2.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='com.jcraft.jzlib'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx'/>
    <p n='uses' v='org.jivesoftware.smack,  org.jivesoftware.smack.packet,  org.jivesoftware.smackx.packet,  org.jivesoftware.smack.filter,  org.jivesoftware.smack.util.collections,  org.jivesoftware.smack.util,  org.xmlpull.v1,  org.jivesoftware.smack.provider,  org.jivesoftware.smackx.provider'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.bookmark'/>
    <p n='uses' v='org.jivesoftware.smackx.provider,  org.jivesoftware.smackx.packet,  org.jivesoftware.smack,  org.jivesoftware.smackx,  org.xmlpull.v1'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.bytestreams'/>
    <p n='uses' v='org.jivesoftware.smack'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.bytestreams.ibb'/>
    <p n='uses' v='org.jivesoftware.smackx.bytestreams.ibb.packet,  org.jivesoftware.smack.filter,  org.jivesoftware.smack,  org.jivesoftware.smack.packet,  org.jivesoftware.smackx.bytestreams,  org.jivesoftware.smack.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.bytestreams.ibb.packet'/>
    <p n='uses' v='org.jivesoftware.smack.packet,org.jivesoftware.smack.util,org.jivesoftware.smackx.bytestreams.ibb'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.bytestreams.ibb.provider'/>
    <p n='uses' v='org.jivesoftware.smackx.bytestreams.ibb.packet,  org.jivesoftware.smack.packet,  org.xmlpull.v1,  org.jivesoftware.smack.provider,  org.jivesoftware.smackx.bytestreams.ibb'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.bytestreams.socks5'/>
    <p n='uses' v='org.jivesoftware.smack.packet,  org.jivesoftware.smack.filter,  org.jivesoftware.smack,  org.jivesoftware.smackx.bytestreams,  org.jivesoftware.smackx.bytestreams.socks5.packet,  org.jivesoftware.smackx.packet,  org.jivesoftware.smack.util,  org.jivesoftware.smackx'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.bytestreams.socks5.packet'/>
    <p n='uses' v='org.jivesoftware.smack.packet'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.bytestreams.socks5.provider'/>
    <p n='uses' v='org.jivesoftware.smack.packet,  org.xmlpull.v1,  org.jivesoftware.smack.provider,  org.jivesoftware.smackx.bytestreams.socks5.packet'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.commands'/>
    <p n='uses' v='org.jivesoftware.smack,  org.jivesoftware.smackx.packet,  org.jivesoftware.smack.packet,  org.jivesoftware.smackx,  org.jivesoftware.smack.filter,  org.jivesoftware.smack.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.filetransfer'/>
    <p n='uses' v='org.jivesoftware.smack,  org.jivesoftware.smack.packet,  org.jivesoftware.smack.filter,  org.jivesoftware.smackx.packet,  org.jivesoftware.smackx,  org.jivesoftware.smackx.bytestreams.ibb.packet,  org.jivesoftware.smackx.bytestreams.ibb,  org.jivesoftware.smackx.bytestreams.socks5,  org.jivesoftware.smackx.bytestreams.socks5.packet'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.muc'/>
    <p n='uses' v='org.jivesoftware.smackx.packet,  org.jivesoftware.smack,  org.jivesoftware.smack.packet,  org.jivesoftware.smackx,  org.jivesoftware.smack.filter,  org.jivesoftware.smack.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.packet'/>
    <p n='uses' v='org.jivesoftware.smack.packet,  org.jivesoftware.smackx.commands,  org.xmlpull.v1,  org.jivesoftware.smack.provider,  org.jivesoftware.smackx,  org.jivesoftware.smack.util,  org.jivesoftware.smack.filter,  org.jivesoftware.smack'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.provider'/>
    <p n='uses' v='org.jivesoftware.smackx.packet,  org.jivesoftware.smack.packet,  org.xmlpull.v1,  org.jivesoftware.smackx.commands,  org.jivesoftware.smack.provider,  org.jivesoftware.smack.util,  org.jivesoftware.smackx,  org.w3c.dom,  javax.xml.parsers'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.pubsub'/>
    <p n='uses' v='org.jivesoftware.smack.packet,  org.jivesoftware.smack,  org.jivesoftware.smackx.packet,  org.jivesoftware.smackx,  org.jivesoftware.smackx.pubsub.packet,  org.jivesoftware.smack.filter,  org.jivesoftware.smackx.pubsub.listener,  org.jivesoftware.smackx.pubsub.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.pubsub.listener'/>
    <p n='uses' v='org.jivesoftware.smackx.pubsub'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.pubsub.packet'/>
    <p n='uses' v='org.jivesoftware.smackx.pubsub,  org.jivesoftware.smack.packet,  org.jivesoftware.smack.filter,  org.jivesoftware.smack'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.pubsub.provider'/>
    <p n='uses' v='org.jivesoftware.smackx.pubsub,  org.jivesoftware.smackx.provider,  org.jivesoftware.smack.packet,  org.jivesoftware.smackx.packet,  org.jivesoftware.smackx,  org.jivesoftware.smack.util,  org.xmlpull.v1,  org.jivesoftware.smack.provider,  org.jivesoftware.smackx.pubsub.packet'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.pubsub.util'/>
    <p n='uses' v='org.jivesoftware.smackx.pubsub,  org.jivesoftware.smack.packet,  org.jivesoftware.smackx.pubsub.packet,  org.jivesoftware.smackx,  javax.xml.transform,  javax.xml.transform.stream'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.search'/>
    <p n='uses' v='org.jivesoftware.smack.packet,  org.xmlpull.v1,  org.jivesoftware.smackx,  org.jivesoftware.smack.util,  org.jivesoftware.smack.provider,  org.jivesoftware.smack.filter,  org.jivesoftware.smackx.packet,  org.jivesoftware.smack'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.workgroup'/>
    <p n='uses' v='org.jivesoftware.smackx.workgroup.util,org.jivesoftware.smack.packet'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.workgroup.agent'/>
    <p n='uses' v='org.jivesoftware.smackx.workgroup.packet,  org.jivesoftware.smack.filter,  org.jivesoftware.smack,  org.jivesoftware.smack.packet,  org.jivesoftware.smack.util,  org.jivesoftware.smackx.workgroup.settings,  org.jivesoftware.smackx.workgroup,  org.jivesoftware.smackx.workgroup.ext.history,  org.jivesoftware.smackx.workgroup.ext.macros,  org.jivesoftware.smackx.workgroup.ext.notes,  org.jivesoftware.smackx.packet,  org.jivesoftware.smackx,  org.xmlpull.v1,  org.jivesoftware.smack.provider'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.workgroup.ext.forms'/>
    <p n='uses' v='org.jivesoftware.smack.packet,  org.jivesoftware.smack.util,  org.xmlpull.v1,  org.jivesoftware.smack.provider'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.workgroup.ext.history'/>
    <p n='uses' v='org.jivesoftware.smack.packet,  org.xmlpull.v1,  org.jivesoftware.smack.provider,  org.jivesoftware.smackx.workgroup.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.workgroup.ext.macros'/>
    <p n='uses' v='org.jivesoftware.smack.packet,  org.xmlpull.v1,  org.xmlpull.mxp1,  org.jivesoftware.smack.provider,  org.jivesoftware.smack.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.workgroup.ext.notes'/>
    <p n='uses' v='org.jivesoftware.smack.packet,org.xmlpull.v1,org.jivesoftware.smack.provider'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.workgroup.packet'/>
    <p n='uses' v='org.jivesoftware.smack.packet,  org.xmlpull.v1,  org.jivesoftware.smack.provider,  org.jivesoftware.smackx.workgroup.util,  org.jivesoftware.smackx.workgroup,  org.jivesoftware.smackx.workgroup.agent,  org.jivesoftware.smack.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.workgroup.settings'/>
    <p n='uses' v='org.jivesoftware.smack.packet,  org.xmlpull.v1,  org.jivesoftware.smack.provider,  org.jivesoftware.smackx.workgroup.util,  org.jivesoftware.smack.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.workgroup.user'/>
    <p n='uses' v='org.jivesoftware.smack,  org.jivesoftware.smackx.muc,  org.jivesoftware.smack.packet,  org.jivesoftware.smackx.workgroup.packet,  org.jivesoftware.smackx.packet,  org.jivesoftware.smackx,  org.jivesoftware.smackx.workgroup.settings,  org.jivesoftware.smackx.workgroup,  org.jivesoftware.smackx.workgroup.ext.forms,  org.jivesoftware.smack.filter,  org.jivesoftware.smack.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smackx.workgroup.util'/>
    <p n='uses' v='org.jivesoftware.smack.util,org.xmlpull.v1'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.xml.parsers
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.xml.transform
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.xml.transform.stream
  </require>
  <require extend='false' filter='(&amp;(package=org.jivesoftware.smack)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.jivesoftware.smack
  </require>
  <require extend='false' filter='(&amp;(package=org.jivesoftware.smack.filter)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.jivesoftware.smack.filter
  </require>
  <require extend='false' filter='(&amp;(package=org.jivesoftware.smack.packet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.jivesoftware.smack.packet
  </require>
  <require extend='false' filter='(&amp;(package=org.jivesoftware.smack.provider)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.jivesoftware.smack.provider
  </require>
  <require extend='false' filter='(&amp;(package=org.jivesoftware.smack.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.jivesoftware.smack.util
  </require>
  <require extend='false' filter='(&amp;(package=org.jivesoftware.smack.util.collections)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.jivesoftware.smack.util.collections
  </require>
  <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.w3c.dom
  </require>
  <require extend='false' filter='(&amp;(package=org.xmlpull.mxp1)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.xmlpull.mxp1
  </require>
  <require extend='false' filter='(&amp;(package=org.xmlpull.v1)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.xmlpull.v1
  </require>
</resource>
<resource id='org.igniterealtime.smack/3.2.2' presentationname='Smack Library' symbolicname='org.igniterealtime.smack' uri='../org/igniterealtime/smack/smack/3.2.2/smack-3.2.2.jar' version='3.2.2'>
  <description>
    Smack Library
  </description>
  <size>
    319135
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Smack Library'/>
    <p n='symbolicname' v='org.igniterealtime.smack'/>
    <p n='version' t='version' v='3.2.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smack'/>
    <p n='uses' v='org.jivesoftware.smack.filter,org.jivesoftware.smack.util,org.jivesoftware.smack.packet,org.jivesoftware.smack.util.collections,org.jivesoftware.smack.debugger,javax.security.auth.callback,javax.net,org.jivesoftware.smack.proxy,javax.net.ssl,org.xmlpull.mxp1,org.xmlpull.v1,org.jivesoftware.smack.sasl'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smack.debugger'/>
    <p n='uses' v='org.jivesoftware.smack,org.jivesoftware.smack.util,org.jivesoftware.smack.packet,javax.swing'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smack.filter'/>
    <p n='uses' v='org.jivesoftware.smack.packet,org.jivesoftware.smack.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smack.packet'/>
    <p n='uses' v='org.jivesoftware.smack.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smack.provider'/>
    <p n='uses' v='org.jivesoftware.smack.util,org.jivesoftware.smack.packet,org.xmlpull.v1,org.xmlpull.mxp1'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smack.proxy'/>
    <p n='uses' v='javax.net,org.jivesoftware.smack.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smack.sasl'/>
    <p n='uses' v='javax.security.auth.callback,org.jivesoftware.smack,org.jivesoftware.smack.packet,javax.security.sasl,org.jivesoftware.smack.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smack.util'/>
    <p n='uses' v='org.jivesoftware.smack.util.collections,javax.naming,javax.naming.directory,org.jivesoftware.smack,org.jivesoftware.smack.packet,org.xmlpull.v1,org.jivesoftware.smack.sasl,org.jivesoftware.smack.provider,org.jivesoftware.smack.filter'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.jivesoftware.smack.util.collections'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.xmlpull.mxp1'/>
    <p n='uses' v='org.xmlpull.v1'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.xmlpull.v1'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.naming
  </require>
  <require extend='false' filter='(&amp;(package=javax.naming.directory)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.naming.directory
  </require>
  <require extend='false' filter='(&amp;(package=javax.net)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.net
  </require>
  <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.net.ssl
  </require>
  <require extend='false' filter='(&amp;(package=javax.security.auth.callback)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.security.auth.callback
  </require>
  <require extend='false' filter='(&amp;(package=javax.security.sasl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.security.sasl
  </require>
  <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.swing
  </require>
</resource>
<resource id='javax.jcr/2.0.0' presentationname='Content Repository for JavaTM Technology API' symbolicname='javax.jcr' uri='../javax/jcr/2.0.0/jcr-2.0.0.jar' version='2.0.0'>
  <description>
    The Content Repository API for JavaTM Technology Version 2.0 is specified by JSR-283.        This module contains the complete API as specified.
  </description>
  <documentation>
    http://www.jcp.org/en/jsr/detail?id=283
  </documentation>
  <size>
    69246
  </size>
  <category id='jcr'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Content Repository for JavaTM Technology API'/>
    <p n='symbolicname' v='javax.jcr'/>
    <p n='version' t='version' v='2.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='javax.jcr.lock'/>
    <p n='uses' v='javax.jcr'/>
    <p n='version' t='version' v='2.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='javax.jcr.retention'/>
    <p n='uses' v='javax.jcr.lock,javax.jcr.version,javax.jcr'/>
    <p n='version' t='version' v='2.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='javax.jcr.security'/>
    <p n='uses' v='javax.jcr.lock,javax.jcr.version,javax.jcr'/>
    <p n='version' t='version' v='2.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='javax.jcr.query'/>
    <p n='uses' v='javax.jcr.lock,javax.jcr.version,javax.jcr.nodetype,javax.jcr.query.qom,javax.jcr'/>
    <p n='version' t='version' v='2.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='javax.jcr.observation'/>
    <p n='uses' v='javax.jcr'/>
    <p n='version' t='version' v='2.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='javax.jcr.version'/>
    <p n='uses' v='javax.jcr.lock,javax.jcr.nodetype,javax.jcr'/>
    <p n='version' t='version' v='2.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='javax.jcr.nodetype'/>
    <p n='uses' v='javax.jcr'/>
    <p n='version' t='version' v='2.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='javax.jcr.query.qom'/>
    <p n='uses' v='javax.jcr.query,javax.jcr'/>
    <p n='version' t='version' v='2.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='javax.jcr'/>
    <p n='uses' v='javax.jcr.lock,org.xml.sax,javax.jcr.retention,javax.jcr.observation,javax.jcr.nodetype,javax.jcr.security,javax.jcr.query,javax.jcr.version'/>
    <p n='version' t='version' v='2.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='javax.jcr.util'/>
    <p n='uses' v='javax.jcr'/>
    <p n='version' t='version' v='2.0.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=javax.jcr)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.jcr ;version=2.0.0
  </require>
  <require extend='false' filter='(&amp;(package=javax.jcr.lock)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.jcr.lock ;version=2.0.0
  </require>
  <require extend='false' filter='(&amp;(package=javax.jcr.nodetype)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.jcr.nodetype ;version=2.0.0
  </require>
  <require extend='false' filter='(&amp;(package=javax.jcr.observation)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.jcr.observation ;version=2.0.0
  </require>
  <require extend='false' filter='(&amp;(package=javax.jcr.query)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.jcr.query ;version=2.0.0
  </require>
  <require extend='false' filter='(&amp;(package=javax.jcr.query.qom)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.jcr.query.qom ;version=2.0.0
  </require>
  <require extend='false' filter='(&amp;(package=javax.jcr.retention)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.jcr.retention ;version=2.0.0
  </require>
  <require extend='false' filter='(&amp;(package=javax.jcr.security)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.jcr.security ;version=2.0.0
  </require>
  <require extend='false' filter='(&amp;(package=javax.jcr.util)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.jcr.util ;version=2.0.0
  </require>
  <require extend='false' filter='(&amp;(package=javax.jcr.version)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.jcr.version ;version=2.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.xml.sax
  </require>
</resource>
<resource id='osgi.enterprise/4.2.0.201003190513' presentationname='osgi.enterprise' symbolicname='osgi.enterprise' uri='../osgi/osgi.enterprise/4.2.0/osgi.enterprise-4.2.0-201003190513.jar' version='4.2.0.201003190513'>
  <copyright>
    Copyright (c) OSGi Alliance (2000, 2010). All Rights Reserved.
  </copyright>
  <description>
    OSGi Service Platform Release 4 Version 4.2, Enterprise Interfaces and Classes for use in compiling bundles.
  </description>
  <license>
    http://opensource.org/licenses/apache2.0.php; link="http://www.apache.org/licenses/LICENSE-2.0"; description="Apache License, Version 2.0"
  </license>
  <size>
    301617
  </size>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='osgi.enterprise'/>
    <p n='symbolicname' v='osgi.enterprise'/>
    <p n='version' t='version' v='4.2.0.201003190513'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.jmx.service.cm'/>
    <p n='uses' v='javax.management.openmbean'/>
    <p n='version' t='version' v='1.3.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.jmx.framework'/>
    <p n='uses' v='org.osgi.jmx,javax.management.openmbean'/>
    <p n='version' t='version' v='1.5.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.jmx.service.permissionadmin'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.jmx.service.provisioning'/>
    <p n='uses' v='javax.management.openmbean'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.jmx.service.useradmin'/>
    <p n='uses' v='org.osgi.jmx,javax.management.openmbean'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.jmx'/>
    <p n='uses' v='javax.management.openmbean'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.blueprint.reflect'/>
    <p n='version' t='version' v='1.0.1'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.blueprint.container'/>
    <p n='uses' v='org.osgi.service.blueprint.reflect,org.osgi.framework'/>
    <p n='version' t='version' v='1.0.1'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.cm'/>
    <p n='uses' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.3.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.component'/>
    <p n='uses' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.event'/>
    <p n='uses' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.http'/>
    <p n='uses' v='javax.servlet.http,javax.servlet'/>
    <p n='version' t='version' v='1.2.1'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.provisioning'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.remoteserviceadmin'/>
    <p n='uses' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.jdbc'/>
    <p n='uses' v='javax.sql'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.jndi'/>
    <p n='uses' v='javax.naming.directory,javax.naming'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='jpa' v='2.0'/>
    <p n='package' v='org.osgi.service.jpa'/>
    <p n='uses' v='javax.persistence'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.log'/>
    <p n='uses' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.3.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.metatype'/>
    <p n='uses' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.useradmin'/>
    <p n='uses' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.util.tracker'/>
    <p n='uses' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.4.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.util.xml'/>
    <p n='uses' v='org.osgi.framework,javax.xml.parsers'/>
    <p n='version' t='version' v='1.0.1'/>
  </capability>
  <require extend='false' filter='(&amp;(package=javax.management.openmbean)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.management.openmbean
  </require>
  <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.naming
  </require>
  <require extend='false' filter='(&amp;(package=javax.naming.directory)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.naming.directory
  </require>
  <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.persistence
  </require>
  <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.servlet
  </require>
  <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.servlet.http
  </require>
  <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.sql
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.xml.parsers
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.framework ;version=[1.5.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.jmx)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.jmx ;version=[1.0.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.jmx.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.jmx.framework ;version=[1.5.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.jmx.service.cm)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.jmx.service.cm ;version=[1.3.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.jmx.service.permissionadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.jmx.service.permissionadmin ;version=[1.2.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.jmx.service.provisioning)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.jmx.service.provisioning ;version=[1.2.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.jmx.service.useradmin)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.jmx.service.useradmin ;version=[1.1.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.container)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.blueprint.container ;version=[1.0.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.reflect)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.blueprint.reflect ;version=[1.0.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.cm ;version=[1.3.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.component ;version=[1.1.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.event ;version=[1.2.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.http ;version=[1.2.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.jdbc)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.jdbc ;version=[1.0.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.jndi)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.jndi ;version=[1.0.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.jpa)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.jpa ;version=[1.0.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.metatype)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.metatype ;version=[1.1.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.provisioning)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.provisioning ;version=[1.2.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.remoteserviceadmin)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.remoteserviceadmin ;version=[1.0.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.useradmin)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.useradmin ;version=[1.1.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.util.xml)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
    Import package org.osgi.util.xml ;version=[1.0.0,2.0.0)
  </require>
</resource>
</repository>