/* Generated By:JJTree&JavaCC: Do not edit this line. ASTDivNode.java */
package com.dexels.navajo.parser.compiled;

import java.util.List;
import java.util.function.Function;

import com.dexels.navajo.document.Operand;
import com.dexels.navajo.expression.api.ContextExpression;
import com.dexels.navajo.expression.api.FunctionClassification;
import com.dexels.navajo.expression.api.TMLExpressionException;
import com.dexels.navajo.parser.Utils;

public final class ASTDivNode extends SimpleNode {
    public ASTDivNode(int id) {
        super(id);
    }

	public final Operand interpret(Operand ao, Operand bo) {
		Object a = ao.value;
		Object b = bo.value;
        if (a instanceof String || b instanceof String)
            throw new TMLExpressionException("Division not defined for strings");
        if (a instanceof Integer && b instanceof Integer)
            return Operand.ofInteger(Integer.valueOf(((Integer) a).intValue() / ((Integer) b).intValue()));
        double dA = Utils.getDoubleValue(a);
        double dB = Utils.getDoubleValue(b);

        return Operand.ofFloat(Double.valueOf(dA / dB));
    }
    
	@Override
	public ContextExpression interpretToLambda(List<String> problems, String expression, Function<String, FunctionClassification> functionClassifier) {
		return untypedLazyBiFunction(problems,expression, (a,b)->interpret(a, b),functionClassifier);
	}
}
