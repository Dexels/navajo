/* Generated By:JJTree&JavaCC: Do not edit this line. ASTNegativeNode.java */
package com.dexels.navajo.parser.compiled;

import java.util.List;
import java.util.Optional;

import com.dexels.navajo.document.types.Money;
import com.dexels.navajo.document.types.Percentage;
import com.dexels.navajo.parser.TMLExpressionException;
import com.dexels.navajo.parser.compiled.api.ContextExpression;


public final class ASTNegativeNode extends SimpleNode {
    public ASTNegativeNode(int id) {
        super(id);
    }

	public final Object interpret(Object a) throws TMLExpressionException {


        if (a instanceof String)
            return "-" + ((String) a); // this is just silly
        else if (a instanceof Integer)
            return new Integer(0 - ((Integer) a).intValue());
        else if (a instanceof Double)
            return new Double(0 - ((Double) a).doubleValue());
        else if (a instanceof Money)
          return new Money(0 - ((Money) a).doubleValue());
        else if (a instanceof Percentage)
          return new Percentage(0 - ((Percentage) a).doubleValue());
        else
          throw new TMLExpressionException("Illegal type encountered before negation");
    }

	@Override
	public ContextExpression interpretToLambda(List<String> problems) {
		return lazyFunction(problems, a->interpret(a), Optional.empty());
	}

}
