/* Generated By:JJTree: Do not edit this line. ASTReactivePipe.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.dexels.navajo.parser.compiled;

import java.util.ArrayList;
import java.util.List;

import com.dexels.navajo.parser.compiled.api.ContextExpression;
import com.dexels.navajo.parser.compiled.api.ParseMode;
import com.dexels.navajo.parser.compiled.api.ReactivePipe;

public
class ASTReactivePipe extends SimpleNode {
  public ASTReactivePipe(int id) {
    super(id);
  }

@Override
public ContextExpression interpretToLambda(List<String> problems, String originalExpression, ParseMode mode) {

	int count = jjtGetNumChildren();
	if(mode==ParseMode.DEFAULT) {
		ContextExpression passthough = (ContextExpression) jjtGetChild(0).interpretToLambda(problems, originalExpression,ParseMode.DEFAULT);
		return passthough;
	}
	List<ContextExpression> pipeElements = new ArrayList<>();
	ContextExpression source = (ContextExpression) jjtGetChild(0).interpretToLambda(problems, originalExpression,ParseMode.REACTIVE_SOURCE);
//	pipeElements.add(source);
	for (int i = 1; i < count; i++) {
		ContextExpression transformer = jjtGetChild(i).interpretToLambda(problems, originalExpression,ParseMode.REACTIVE_TRANSFORMER);
		pipeElements.add(transformer);
	}
	ReactivePipe pipe = new ReactivePipe(source, pipeElements);
	return pipe;
	
}

}
/* JavaCC - OriginalChecksum=dd1db8c7a34ea094a180c8dc73739db3 (do not edit this line) */
