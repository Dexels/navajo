<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<tid xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.navajo.nl/classdef_schema.xsd">

   <tipiclass name="swingcomponent" implements="basecomponent">
		
		<description>
			Standard getters and setters for swing based components.
		</description>
		<values>
		 <value direction="in" name="background" type="color" property="background">
		 	<description>
				Sets the background color for swing components. May be ignored, depending on the Look And Feel.\\
				For more info about look and feel, check: [[concepts:swing:lnf|Look and Feel in Swing]]\\
		 	</description>
		 </value>
		 <value direction="in" name="foreground" type="color" property="foreground">
		 	<description>
				Sets the background color for swing components. May be ignored, depending on the Look And Feel.\\
				For more info about look and feel, check: [[concepts:swing:lnf|Look and Feel in Swing]]\\
		 	</description>
		 </value>
         <value direction="in" name="border" type="border" property="border">
		 	<description>
				Sets a swing border around this component. May be ignored, depending on the Look And Feel.\\
				For more info about look and feel, check: [[concepts:swing:borders|Look and Feel in Swing]]\\
		 	</description>
         </value>
         <value direction="inout" name="tooltip" type="string" property="ToolTipText">
		 	<description>
				Sets a pop up tooltip for component. May be ignored, depending on the Look And Feel.\\
		 	</description>
         </value>
         <value direction="in" name="visible" type="boolean" property="visible" >
			<description>
				Allows for hiding swing components without disposing them. All components are visible by default.
			</description>
		</value>
		</values>
   </tipiclass>
   
   <tipiclass name="dragdrop">
   <description>
   		For more info about drag an drop, check: [[concepts:swing:dragdrop|Drag and Drop in Swing]]\\
   </description>
	<events>
		<event name="onDrag">
			<description>
				Called when a drag is started. This is your opportunity to set the dragValue attribute of this
				component. If, after this event terminates, the dragValue is still null, the drag will fail.\\
				You can use this to do a dynamic check whether dragging is possible at this moment.
				\\
				For more info, check: [[concepts:swing:dragdrop|Drag and Drop in Swing]]\\
			</description>
		</event>
		<event name="onDrop">
			<description>
				This event gets fired when a object with a matching category has been dropped on this component.	
				FIXME: Add a category parameter, to indicate which category matched.
			</description>
			<param name="value" type="object" />
		</event>
	</events>
	<values>
		<value direction="in" name="dragValue" type="object" >
			<description>
				The actual value to be transported. Remember that no onDrag events will be fired as long as
				this attribute is null.
			</description>
		</value>
		<value direction="in" name="dragCategory" type="list">
			<description>
				Use this to add a list of strings as categories. When the user drags, all categories will be associated
				with this drag, and when it is dropped, Tipi will try to match it with a dropCategory.\\
				__Having no dragCategories will disable drags from this component__
			</description>
		</value>
		<value direction="in" name="dropCategory" type="list" >
			<description>
			This lists all possible categories it will accept when the user drops.
			</description>
		</value>
	</values>
</tipiclass>
   
	<tipiclass name="swingbutton">
		<description> Standard getters and setters for swing based components.
		</description>
		<events>
			<event name="onActionPerformed">
				<description> 
					Fired when the button/menuitem/etc gets clicked. The exact moment depends on the item,
					the platform, and even the Look and Feel.
				</description>
			</event>
			<event name="onMouseEntered">
			</event>
			<event name="onMouseExited">
			</event>
		</events>
		<methods>
         <method name="fireAction">
			<description>
				Programmatically fires the 'onActionPerformed' event. You can use this to reduce code duplication.
				If for example, you want to link the onActionPerformed event of this button also to another event,
				just call a fireAction method from there. 
			</description>
         </method>
      </methods>
  
	</tipiclass>

   <tipiaction name="askValue" class="TipiAskValue" package="com.dexels.navajo.tipi.components.swingimpl.actions">
		<description>
			Request a string value of the user, using a dialog.
		</description>
      <param name="text" type="string">
		<description>
			The question text in the dialog
		</description>
      </param>
      <param name="value" type="string" required="true">
		<description>
			The name of the global property to store the result in.
			For example, if I supply 'myvalue' here I could retrieve it with {global:/myvalue}
		</description>
      </param>
      <param name="initialValue" type="string" >
		<description>
			The dialog will be pre-filled with this string.
		</description>
      </param>
   </tipiaction>
   <tipiaction name="askFile" class="TipiAskFile" package="com.dexels.navajo.tipi.components.swingimpl.actions">
      <param name="value" type="string" />
   </tipiaction>
   <tipiaction name="saveValue" class="TipiSaveValue" package="com.dexels.navajo.tipi.components.swingimpl.actions">
		<description>
			Opens a file save dialog and saves the value.\\
			Either the value is a binary (which will be saved as such) or the value will be considered a string.
		</description>
      <param name="value" type="object" />
   </tipiaction>

   <tipiaction name="dumpCache" class="TipiInjectJnlpCache" package="com.dexels.navajo.tipi.components.swingimpl.actions">
		<description>
			Dumps the jnlp cached muffins to stderr
		</description>
   </tipiaction>

   <!--
      <tipiaction name="saveBinary" class="TipiSaveBinary" package="com.dexels.navajo.tipi.components.swingimpl.actions"> <param name="value" type="property" /> </tipiaction>
   -->
   <tipiaction name="saveBinary" class="TipiSaveBinary" package="com.dexels.navajo.tipi.components.swingimpl.actions">
		<description>
			Don't remember this one
		</description>
      <param name="value" type="binary" required="true" />
      <param name="extension" type="string" />
      <param name="fileName" type="string" />
   </tipiaction>

   <tipiaction name="browseBinary" class="TipiBrowseBinary" package="com.dexels.navajo.tipi.components.swingimpl.actions">
		<description>
			Open a file load dialog, and put the selected value (as a binary) in the supplied property
		</description>
      <param name="property" type="property" required="true"/>
   </tipiaction>

   <tipiaction name="createPrintJob" class="TipiCreatePrintJob" package="com.dexels.navajo.tipi.components.swingimpl.actions" deprecated="true">
      <param name="value" type="reference" />
   </tipiaction>

   <tipiaction name="openBrowser" class="TipiOpenBrowser" package="com.dexels.navajo.tipi.components.swingimpl.actions">
		<description>
			Open a native browser with the supplied url.
		</description>
      <param name="url" type="string" required="true" />
   </tipiaction>

   <tipiaction name="playSound" class="TipiPlaySound" package="com.dexels.navajo.tipi.components.swingimpl.actions">
		<description>
			Plays a sound, streamed from the supplied url. The supported types depend on the platform.
		</description>
      <param name="url" type="resource" required="true" />
   </tipiaction>

   <tipiaction name="openBinary" class="TipiOpenBinary" package="com.dexels.navajo.tipi.components.swingimpl.actions">
		<description>
			Attempt to 'open' the binary (similar to double clicking it in the Explorer/Finder etc.)\\
			The file will probably be residing in the temp directory with an unknown extension.\\
			Most platform will prefer some known extensions, you can try to explicitly add the extension\\
			(if you know the type of your binary.)\\
		</description>
      <param name="value" type="binary" required="true" />
      <param name="extension" type="string" />
      <param name="fileName" type="string" />
   </tipiaction>

   <tipiaction name="requestFocus" class="TipiRequestFocus" package="com.dexels.navajo.tipi.components.swingimpl.actions">
		<description>
			Request the focus. I don't think it works well
		</description>
      <param name="component" type="string" required="true" />
   </tipiaction>




   <!-- the actual classes should be refactored too! -->


   <tipiaction name="showQuestion" class="TipiShowQuestion" package="com.dexels.navajo.tipi.actions">
		<description>
			Show a yes/no style question dialog.
			If the user clicks no, the action will fire an 'TipiBreakException' and will not continue.
		</description>
      <param name="text" type="string" required="true" />
      <param name="title" type="string" required="false" />
   </tipiaction>


   <!-- Actually a copy of tipi, with a forced layout, used for echo compatibility
-->
   <tipiclass class="TipiColumn" implements="basecomponent,datacomponent,dragdrop,swingcomponent" deprecated="true" name="column" package="com.dexels.navajo.tipi.components.swingimpl" type="tipi" childcount="*" layoutmanager="false"
      addtocontainer="true">
		<description>
			Deprecated, don't use, use a panel with a verticalboxlayout instead
		</description>

      <values>
          <value direction="in" name="paint" type="paint" property="paint" />

         <value direction="in" name="image" type="resource" property="imageUrl" />
         <value direction="in" name="image_alignment" type="selection" property="alignment">
            <option description="North" value="north" />
            <option description="East" value="east" />
            <option description="South" value="south" />
            <option description="West" value="west" />
            <option description="Center" value="center" />
            <option description="NorthEast" value="northeast" />
            <option description="SouthEast" value="southeast" />
            <option description="NorthWest" value="northwest" />
            <option description="SouthWest" value="southwest" />
         </value>
      </values>
      <methods />
   </tipiclass>

   <!-- Actually a copy of tipi, with a forced layout, used for echo compatibility
-->
   <tipiclass class="TipiRow" implements="basecomponent,datacomponent,dragdrop,swingcomponent" deprecated="true" name="row" package="com.dexels.navajo.tipi.components.swingimpl" type="tipi" childcount="*" layoutmanager="false"
      addtocontainer="true">
      
   		<description>
			Deprecated, don't use, use a panel with a horizontal box layout instead
		</description>
      
      <values>
         <value direction="in" name="paint" type="paint" property="paint" />

         <value direction="in" name="image" type="resource" property="imageUrl" />
         <value direction="in" name="image_alignment" type="selection" property="alignment">
            <option description="North" value="north" />
            <option description="East" value="east" />
            <option description="South" value="south" />
            <option description="West" value="west" />
            <option description="Center" value="center" />
            <option description="NorthEast" value="northeast" />
            <option description="SouthEast" value="southeast" />
            <option description="NorthWest" value="northwest" />
            <option description="SouthWest" value="southwest" />
         </value>
      </values>
      <methods />
   </tipiclass>

   <tipiclass addtocontainer="true"  implements="basecomponent,datacomponent,dragdrop,swingcomponent" childcount="*" class="TipiSwitchPanel" layoutmanager="false" module="container" name="switchpanel" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="tabs.gif" type="tipi">
      <description>
         The switchpanel allows you to add multiple components to it. Only one component will be visible at the time
         It uses the Swing CardLayout, and you can compare it
         to a tabpane without the visible tabs.\\
         You can switch between the tabs by setting the selectedId attribute
      </description>
      
      <values>
         <value direction="inout" name="selectedId" type="string">
            <description>
               Set the selected tab based on a string. The string can be supplied by adding
               a constraint when adding the child.
            </description>
         </value>
         <value direction="in" name="width" type="integer" />
         <value direction="in" name="paint" type="paint" property="paint" />
      </values>
   </tipiclass>

   <!-- This is not a tipi component. Need to look into this one. -->
   <tipiclass addtocontainer="true" deprecated="true" childcount="0" class="TipiSwingErrorHandler" layoutmanager="false" module="abstract" name="error"
      package="com.dexels.navajo.tipi.components.swingimpl" studio-icon="property.gif" type="tipi">
      <description>This component is not used in its current form</description>
   </tipiclass>

   <tipiclass addtocontainer="true" childcount="0" implements="basecomponent,datacomponent,swingcomponent,dragdrop" class="TipiTable" layoutmanager="false" module="data" name="tipitable" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="tipitable.gif" type="tipi" customstructure="true">
      <description>
         A versatile component for displaying arraymessages in a table.
         At the moment this is the only component using a custom component loader.
         Add column tags to
         display columns.
         For more info: [[tipidoc:core:types:date|date]]
      </description>
      <events>
         <event name="onActionPerformed">
            <description>
               Fired when a table row is double clicked
            </description>
         </event>
         <event name="onSelectionChanged">
            <description>
               Fired when a table row is selected or deselected.
               Use the selectedMessage and selectedIndex to check.
            </description>
            <param name="selectedMessage" type="message" />
            <param name="selectedIndex" type="integer" />
         </event>
         <event name="onRowLoad">
            <description>
               Fired when a table row loaded, this means that this event is fired for each and every row,
               BEFORE the onLoad. Here you can fiddle with the data.
               You can call a 'break' to stop processing the events for this injection.
            </description>
            <param name="navajo" type="navajo" />
            <param name="service" type="string" />
            <param name="message" type="message" />
            <param name="index" type="integer" />
         </event>
         <event name="onValueChanged">
            <description>
               Fired when any value has been changed in the table.
               Use the event parameters to filter the exact changes you are interested in.
				NOTE THIS IS INCONSISTENT with java code
            </description>
            <param name="name" type="string" />
            <param name="old" type="string" />
            <param name="new" type="string" />
            <param name="row" type="string" />
            <param name="column" type="string" />
            <param name="message" type="message" />
            <param name="property" type="property" />
            <param name="path" type="string" />
         </event>
         <event name="onReportFinished">
            <description>
               Fired when a generic BIRT report is finished.
               Use the binary event parameter to serve it to the user (or something)
            </description>
            <param name="format" type="string" />
            <param name="report" type="binary" />
         </event>
         <event name="onKey">
         	<description>
         	Recorded a keystroke. Use the parameters to determine if it is the keystroke you are looking for.
         	</description>
            <param name="code" type="integer" />
            <param name="key" type="string" />
            <param name="modifiers" type="string" />
            <param name="mode" type="string" />
         </event>
          <event name="onEnter">
			<description>
				Fired on enter. Slightly deprecated, I prefer onKey with a condition.
			</description>
         </event>
      </events>
      <values>
         <value direction="in" name="highColor" type="color" property="highColor">
         	<description>
				The light color of the zebra	
    	 	</description>
         </value>
         <value direction="in" name="lowColor" type="color" property="lowColor">
         	<description>
				The dark color of the zebra	
    	 	</description>
         </value>
         <value direction="in" name="selectedColor" type="color" property="selectedColor" >
         	<description>
				The color of a selected row	
    	 	</description>
         </value>
         <value direction="inout" name="selectedIndex" type="integer">
         	<description>
				The selected row of the table, or -1 if no row has been selected.\\
				You can both get and set this value.
    	 	</description>
         </value>
         <value direction="inout" name="filtersvisible" type="boolean">
           	<description>
				Set/get whether the filter header is shown (allowing client side filtering)
		 	</description>
         </value>
         
         <value direction="inout" name="columnsvisible" type="boolean" >
           	<description>
				Set/get whether the select column button is visible.\\
				If this button is visible, the user can choose which columns are visible, and in which order.
		 	</description>
         </value>
         
         <value direction="inout" name="headervisible" type="boolean">
          	<description>
				Set/get whether the select column header buttons are visible.\\
				If visible, the user can click the column headers to do client side sorting.
		 	</description>
         </value>
         <value direction="in" name="ignoreList" type="list">
          	<description>
				List the columns that will not be visible, even in the column selection dialog
		 	</description>
         </value>
         
         <!--            <value direction="inout" name="showColumn" type="string"/>
            <value direction="inout" name="hideColumn" type="string"/>-->
         <value direction="inout" name="messagepath" type="string" />
         <value direction="out" name="selectedMessage" type="message" />
         <value direction="out" name="selectedMessages" type="message" />
         <value direction="out" name="filteredMessage" type="message" />

         <value direction="out" name="lastMessage" type="message" />
         <value direction="out" name="firstMessage" type="message" />

         <value direction="in" name="readOnly" type="boolean" />
         <value direction="in" name="opaque" type="boolean" />
         <value direction="in" name="rowHeight" type="integer" />
         <value direction="out" name="columnCount" type="integer" />
         <value direction="out" name="rowCount" type="integer" />
         <value direction="in" name="autoresize" type="selection">
            <option description="Resize off" value="off" />
            <option description="Resize last column" value="last" />
            <option description="Resize next column" value="next" />
            <option description="Resize subsequent columns" value="subsequent" />
            <option description="Resize all columns" value="all" />
         </value>
         <value direction="in" name="filtermode" type="selection">
            <option description="Baby filter" value="baby" />
            <option description="Advanced" value="advanced" />
         </value>
         <value direction="in" name="columnDefinitionSavePath" type="string" />
         <value direction="in" name="refreshAfterEdit" type="boolean" />
         <value direction="in" name="sortable" type="boolean" />
         <value direction="in" name="showRowHeaders" type="boolean" />
         <value direction="in" name="useScroll" type="boolean" />
         <value direction="in" name="border" type="border" />

         <value direction="out" name="currentPage" type="integer" />
            </values>
      <methods>
         <method name="showEditDialog">
            <description>
               Shows a dialog depicting a single row of the table, using regular property components.
            </description>
            <param name="title" type="string" value="'Edit'">
	            <description>
	               The title of the dialog
	            </description>
			</param>
         </method>
         <method name="selectByValue">
            <description>
               Select the rows with the following condition:
               Property named propertyName has the supplied value
            </description>
            <param name="propertyName" type="string" />
            <param name="value" type="object" />
         </method>
         <method name="updateConditionalRemarks">
            <description>
               Refreshes the conditional remarks.
            </description>
         </method>
         <method name="stopCellEditing">
            <description>
               Forces editing to commit its current value.
            </description>
         </method>
         <method name="repaint" />
         <method name="selectNext">
            <description>
               Next row.
            </description>
         </method>
         <method name="selectPrevious">
            <description>
               Previous row.
            </description>
         </method>
         <method name="selectFirst">
            <description>
               First row.
            </description>
         </method>
         <method name="selectLast">
            <description>
               First row.
            </description>
         </method>
         <method name="fireAction">
            <description>
               Programmatically fire an 'onActionPerformed', effectively the same as a double click
            </description>
         </method>

         <method name="saveColumns">
            <description>
               Save the column configuration to the supplied path. Note that the actual storage
               implementation depends on the tipi-storage manager.
            </description>
            <param name="filepath" type="string" />
         </method>
         <method name="loadColumns">
            <description>
               Load the column configuration from the supplied path. Note that the actual storage
               implementation depends on the tipi-storage manager.
            </description>
            <param name="filepath" type="string" />
         </method>
         <method name="print">
            <description deprecated="true">
               Not used.
            </description>
            <param name="printJob" type="object" />
            <param name="header" type="string" />
            <param name="footer" type="string" />
         </method>
         <method name="export">
            <description>
               Export as CSV (or another separator)
            </description>
            <param name="filename" type="string" />
            <param name="delimiter" type="string" />
         </method>
         <method name="printpreview" deprecated="true">
            <description>
               Not used.
            </description>
            <param name="printJob" type="object" />
            <param name="header" type="string" />
            <param name="footer" type="string" />
         </method>
         <method name="setAllSelected">
            <description>
               Select all rows with the following condition:
               Property named propertyName has the supplied value
            </description>
            <param name="propertyName" type="string" required="true" />
            <param name="value" type="object" required="true" />
         </method>
         <method name="doEmail" deprecated="true" />
         <method name="doWord" deprecated="true" />
         <method name="doExcel" deprecated="true" />
         <method name="doSaveColumns">
            <description>
               Save the columns to the present path
            </description>
         </method>
         <method name="doChooseColumns">
            <description>
               Opens the column selection dialog.
            </description>
         </method>

         <method name="doExportAll" />
         <method name="doRunReport">
            <description>
               Initiates a BIRT report run, and returns immediately.
               onReportFinished will fire when the run is finished
            </description>

            <param name="format" type="string" />
            <param name="orientation" type="string" />
            <param name="margins" type="string" />
         </method>
         <method name="editCell">
            <description>
               Programmatically start editing a specific cell. Supply the property you want to edit
            </description>
            <param name="property" type="property" required="true" />
         </method>
         <method name="sort">
            <description>
               Sort the table on the supplied index
            </description>

            <param name="index" type="integer" required="true" />
            <param name="ascending" type="boolean" />
         </method>
         <method name="selectMessages">
            <description>
				Select all messages in the supplied list (.. of messages)
            </description>
            <param name="messages" type="list" required="true" />
         </method>
         
      </methods>
   </tipiclass>

   <tipiclass addtocontainer="true"  implements="basecomponent,datacomponent,swingcomponent,dragdrop"  childcount="0" class="TipiMegaTable" layoutmanager="false" module="data" name="tipimegatable"
      package="com.dexels.navajo.tipi.components.swingimpl.tipimegatable" studio-icon="tipitable.gif" type="tipi" customstructure="true">
      <description>
         The mega table is an n-dimensional data grid. It has a custom component loader, defining the layers.
            </description>

      <events>
         <event name="onActionPerformed">
            <param name="table" type="object" />
            <param name="selected" type="message" />
            <param name="title" type="string" value="'Edit'" />
         </event>
         <event name="onValueChanged">
            <param name="name" type="string" />
            <param name="old" type="string" />
            <param name="new" type="string" />
            <param name="path" type="string" />
         </event>
      </events>
      <values>
         <value direction="inout" name="useTabs" type="boolean" value="true" />
         <value direction="inout" name="innerMessageName" type="string" />
         <value direction="inout" name="outerMessageName" type="string" />
         <value direction="inout" name="titlePropertyName" type="string" />
         <value direction="in" name="rowHeight" type="integer" />
         <value direction="in" name="breaks" type="string" />
         <value direction="inout" name="columnButtonVisible" type="boolean" value="false" />
         <value direction="inout" name="filtersVisible" type="boolean" value="false" />
         <value direction="inout" name="useScrollBars" type="boolean" value="true" />
         <value direction="inout" name="headerVisible" type="boolean" value="true" />
         <value direction="out" name="currentPage" type="integer" />
      </values>
      <methods>
         <method name="flatten">
            <param name="serviceName" type="string" />
            <param name="hostUrl" type="string" />
            <param name="username" type="string" />
            <param name="password" type="string" />
            <param name="pincode" type="string" />
            <param name="keystore" type="string" />
            <param name="keypass" type="string" />
         </method>
         <method name="showEditDialog">
            <param name="table" type="object" />
            <param name="title" type="string" value="Edit" />
         </method>
         <method name="refreshRemarks" />
         <method name="print">
            <param name="printJob" type="object" />
            <param name="header" type="string" />
            <param name="footer" type="string" />
         </method>
         <method name="printpreview">
            <param name="printJob" type="object" />
            <param name="header" type="string" />
            <param name="footer" type="string" />
         </method>
         <method name="export">
            <param name="filename" type="string" />
            <param name="delimiter" type="string" />
         </method>
         <method name="stopCellEditing">
            <description>
               Forces any editing table to commit its current value.
            </description>
         </method>
      </methods>
   </tipiclass>

   <tipiclass addtocontainer="true" childcount="*"  implements="basecomponent,datacomponent,swingcomponent"  class="TipiQuestion" layoutmanager="true" module="data" name="tipiquestion" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="tipitable.gif" type="tipi">
      <description>
      	Part of the question framework. In need of refactoring
      </description>
      <events>
           <!-- todo: implement -->
         <event name="onValueChanged" />
      </events>
      <values>
         <value direction="inout" name="messagePath" type="string" />
         <value direction="inout" name="questionDefinitionName" type="string" />
         <value direction="inout" name="questionGroupPath" type="string" />
         <value direction="in" name="subQuestionPath" type="string" />
      </values>
      <methods>
         <method name="print" />
      </methods>
   </tipiclass>

   <tipiclass addtocontainer="true" childcount="*"  implements="basecomponent,datacomponent,swingcomponent" class="TipiQuestionGroup" layoutmanager="true" module="data" name="tipiquestiongroup" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="tipitable.gif" type="tipi">
      <description>
      	Part of the question framework. In need of refactoring
      </description>

      <values>
         <value direction="inout" name="messagePath" type="string" />
         <value direction="inout" name="questionDefinitionName" type="string" />
         <value direction="inout" name="questionGroupDefinitionName" type="string" />
         <value direction="in" name="valid" type="boolean" />
         <value direction="out" name="description" type="string" />
         <!-- The component the actual questions will be added to-->
         <value direction="inout" name="subComponent" type="string" />
         <!-- with the following constraint -->
         <value direction="inout" name="subConstraint" type="string" />
         <value direction="in" name="subQuestionPath" type="string" />
      </values>
   </tipiclass>

   <tipiclass addtocontainer="true" childcount="*" implements="basecomponent,datacomponent,swingcomponent" class="TipiScrollQuestionGroup" layoutmanager="true" module="data" name="tipiscrollquestiongroup" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="tipitable.gif" type="tipi">
      <description>
      	Part of the question framework. In need of refactoring
      </description>

      <values>
         <value direction="inout" name="messagePath" type="string" />
         <value direction="inout" name="questionDefinitionName" type="string" />
         <value direction="inout" name="questionGroupDefinitionName" type="string" />
         <value direction="in" name="valid" type="boolean" />
         <value direction="out" name="description" type="string" />
         <value direction="in" name="subQuestionPath" type="string" />
      </values>
   </tipiclass>

   <tipiclass addtocontainer="true" childcount="*" class="TipiQuestionList" implements="basecomponent,datacomponent,swingcomponent" layoutmanager="true" module="data" name="tipiquestionlist" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="tipitable.gif" type="tipi">
      <description>
      	Part of the question framework. In need of refactoring
      </description>
      <events>
        <event name="onValidationChanged">
            <param name="valid" type="boolean" />
         </event>
      </events>
      <values>
         <value direction="in" name="messagePath" type="string" />
         <value direction="in" name="questionDefinitionName" type="string" />
         <value direction="in" name="questionGroupDefinitionName" type="string" />
         <value direction="in" name="valid" type="boolean" />
         <value direction="out" name="currentPage" type="integer" />
         <value direction="in" name="subQuestionPath" type="string" />
      </values>
      <methods>
         <method name="flatten">
            <param name="serviceName" type="string" />
            <param name="serviceUrl" type="string" />
            <param name="pincode" type="string" />
            <param name="keystore" type="string" />
            <param name="keypass" type="string" />
         </method>
         <method name="print">
            <param name="printJob" type="object" />
            <param name="header" type="string" />
            <param name="footer" type="string" />
         </method>
         <method name="printpreview">
            <param name="printJob" type="object" />
            <param name="header" type="string" />
            <param name="footer" type="string" />
         </method>
      </methods>
   </tipiclass>

   <tipiclass addtocontainer="true" childcount="*" implements="basecomponent,datacomponent,swingcomponent" class="TipiTabbedQuestionList" layoutmanager="true" module="data" name="tipitabbedquestionlist" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="tipitable.gif" type="tipi">
      <description>
      	Part of the question framework. In need of refactoring
      </description>
      <events>
         <event name="onValidationChanged">
            <param name="valid" type="boolean" />
         </event>
      </events>
      <values>
         <value direction="in" name="messagePath" type="string" />
         <value direction="in" name="questionDefinitionName" type="string" />
         <value direction="in" name="questionGroupDefinitionName" type="string" />
         <value direction="in" name="valid" type="boolean" />
         <value direction="out" name="currentPage" type="integer" />
         <value direction="in" name="subQuestionPath" type="string" />
      </values>
      <methods>
         <method name="flatten">
            <param name="serviceName" type="string" />
            <param name="serviceUrl" type="string" />
            <param name="pincode" type="string" />
            <param name="keystore" type="string" />
            <param name="keypass" type="string" />
         </method>
         <method name="print">
            <param name="printJob" type="object" />
            <param name="header" type="string" />
            <param name="footer" type="string" />
         </method>
         <method name="printpreview">
            <param name="printJob" type="object" />
            <param name="header" type="string" />
            <param name="footer" type="string" />
         </method>
      </methods>
   </tipiclass>


   <!-- Use panel instead -->
   <!-- Identical to panel -->
   <tipiclass addtocontainer="true" implements="basecomponent,datacomponent,swingcomponent,dragdrop" deprecated="true" childcount="*" class="TipiPanel" layoutmanager="true" module="container" name="tipi"
      package="com.dexels.navajo.tipi.components.swingimpl" studio-icon="tipi.gif" type="tipi">
      <description>
         Deprecated, use panel instead. They use the same java class
      </description>

      <values>
         <value direction="in" name="opaque" type="boolean" property="opaque" />
         <value direction="in" name="paint" type="paint" property="paint" />

         <value direction="in" name="image" type="resource" property="imageUrl" />
         <value direction="in" name="image_alignment" type="selection" property="alignment">
            <option description="North" value="north" />
            <option description="East" value="east" />
            <option description="South" value="south" />
            <option description="West" value="west" />
            <option description="Center" value="center" />
            <option description="NorthEast" value="northeast" />
            <option description="SouthEast" value="southeast" />
            <option description="NorthWest" value="northwest" />
            <option description="SouthWest" value="southwest" />
         </value>
      </values>
      <methods />
   </tipiclass>


   <!-- Identical to tipi, but new style -->
   <tipiclass addtocontainer="true" deprecated="true" implements="basecomponent,datacomponent,swingcomponent,dragdrop" childcount="*" class="TipiPanel" layoutmanager="true" module="container" name="panel"
      package="com.dexels.navajo.tipi.components.swingimpl" studio-icon="tipi.gif" type="tipi">
      <description>
      </description>
      <events>
      </events>
      <values>
         <value direction="in" name="opaque" type="boolean" property="opaque" />
         <value direction="in" name="paint" type="paint" property="paint" />

         <value direction="in" name="image" type="resource" property="imageUrl" />
         <value direction="in" name="image_alignment" type="selection" property="alignment">
            <option description="North" value="north" />
            <option description="East" value="east" />
            <option description="South" value="south" />
            <option description="West" value="west" />
            <option description="Center" value="center" />
            <option description="NorthEast" value="northeast" />
            <option description="SouthEast" value="southeast" />
            <option description="NorthWest" value="northwest" />
            <option description="SouthWest" value="southwest" />
         </value>
      </values>
      <methods />
   </tipiclass>


   <tipiclass addtocontainer="true"  implements="basecomponent,datacomponent,messagecomponent,panel,swingcomponent" deprecated="false" childcount="*" class="TipiArrayPanel" layoutmanager="true" module="container" name="arraypanel"
      package="com.dexels.navajo.tipi.components.swingimpl" studio-icon="tipi.gif" type="tipi">
      <description>
   			Based on the panel. Added messagePath and some events
      </description>
      <events>
         <event name="onBegin" >
            <param name="size" type="integer"/>
            <param name="array" type="message"/>
         </event>
         <event name="onBeforeElement">
            <param name="index" type="integer"/>
            <param name="message" type="message"/>
            <param name="size" type="integer"/>
            <param name="array" type="message"/>
         </event>         
         <event name="onAfterElement">
            <param name="index" type="integer"/>
            <param name="message" type="message"/>
            <param name="size" type="integer"/>
            <param name="array" type="message"/>
         </event>
         <event name="onEnd">
            <param name="size" type="integer"/>
            <param name="array" type="message"/>
         </event>
          
      </events>

   </tipiclass>
   
      <!-- Identical to tipi -->
   <tipiclass addtocontainer="true" implements="basecomponent,datacomponent,swingcomponent,panel" deprecated="false" childcount="*" class="TipiMessagePanel" layoutmanager="true" module="container" name="messagepanel"
      package="com.dexels.navajo.tipi.components.swingimpl" studio-icon="tipi.gif" type="tipi">
      <description>
      Based on the panel
      
      
      </description>
      <events>
         <event name="onLoad">
            <param name="message" type="message" />
            <param name="navajo" type="navajo" />
         </event>
      </events>
      <values>
         <!-- only addition from panel -->
         <value direction="in" name="messageName" type="string" />
          <value direction="in" name="message" type="message" />
      </values>
      <methods />
   </tipiclass>
   
   

   <tipiclass addtocontainer="true" implements="basecomponent,datacomponent,swingcomponent,panel" deprecated="true" childcount="*" class="TipiOffsetPanel" layoutmanager="true" module="container" name="offsetpanel"
      package="com.dexels.navajo.tipi.components.swingimpl" studio-icon="tipi.gif" type="tipi">
      <description>
		 This component is used to so 'shifting transitions.\\
         It behaves like a scroll panel without the visible scroll controls.
         
      </description>
      <events>
      </events>
      <values>
         <value direction="in" name="opaque" type="boolean" property="opaque" />
         <value direction="in" name="x" type="integer" property="x" />
         <value direction="in" name="y" type="integer" property="y" />
      </values>
      <methods />
   </tipiclass>



   <tipiclass addtocontainer="false"  implements="basecomponent,datacomponent" childcount="0" layoutmanager="false" class="TipiExportDialog" module="dialogs" name="exportdialog" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="exportdialog.gif" toplevel="true" type="tipi">
      	<description>
			
      	</description>
      <events>
         <event name="onWindowClosed" />
      </events>
      <values>
         <value direction="inout" name="enabled" type="boolean" />
         <value direction="inout" name="title" type="string" />
         <value direction="inout" name="messagepath" type="string" />
         <value direction="inout" name="modal" type="boolean" />
         <value direction="in" name="settingsService" type="string" property="settingsService" />
         <value direction="in" name="x" type="integer" />
         <value direction="in" name="y" type="integer" />
         <value direction="in" name="h" type="integer" />
         <value direction="in" name="w" type="integer" />
         <value direction="out" name="isShowing" type="boolean" />
      </values>
      <methods>
         <method name="show" />
         <method name="hide" />
         <method name="dispose" />
      </methods>
   </tipiclass>
   <tipiclass addtocontainer="true" childcount="*" class="TipiWindow" implements="basecomponent,datacomponent,swingcomponent" layoutmanager="true" module="container" name="window" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="window.gif" toplevel="true" type="tipi">
		<description>
			Internal window (uses JInternalFrame), should only be placed onto desktops.\\
			Internally uses a borderlayout as default.\\
			FIXME: Check if it supports a border
		</description>
      <events>
         <event name="onWindowClosed" />
      </events>
      <values>
         <value direction="in" name="icon" type="resource" property="iconUrl" />
         <value direction="inout" name="title" type="string" property="title" />
         <value direction="in" name="settingsService" type="string" property="settingsService" />
         <value direction="inout" name="x" type="integer" value="50" property="x" />
         <value direction="inout" name="y" type="integer" value="50" property="y" />
         <value direction="inout" name="h" type="integer" value="50" property="h" />
         <value direction="inout" name="w" type="integer" value="50" property="w" />
         <value direction="inout" name="closable" type="boolean" value="true" property="closable" />
         <value direction="inout" name="iconifiable" type="boolean" value="true" property="iconifiable" />
         <value direction="inout" name="maximizable" type="boolean" value="true" property="maximizable" />
         <value direction="inout" name="resizable" type="boolean" value="true" property="resizable" />
         <value direction="inout" name="enabled" type="boolean" value="true" property="enabled" />
         <value direction="inout" name="selected" type="boolean" value="false" property="selected" />
      </values>
      <methods>
         <method name="iconify" />
         <method name="maximize" />
         <method name="restore" />
         <method name="toFront" />
      </methods>
   </tipiclass>


   <tipiclass addtocontainer="true" childcount="*"  implements="basecomponent,datacomponent,swingcomponent" class="TipiUndecoratedWindow" layoutmanager="true" module="container" name="undecoratedwindow"
      package="com.dexels.navajo.tipi.components.swingimpl" studio-icon="window.gif" toplevel="true" type="tipi">
      <description>
         The undecorated window behaves like a regular window (JInternalFrame) only without the normal window controls.
         Useful for transparent controls
      </description>
      <events>
         <event name="onWindowClosed" />
      </events>
      <values>
         <!--     <value name="visible" direction="in" type="boolean"/>-->
         <value direction="in" name="settingsService" type="string" property="settingsService" />
         <value direction="inout" name="x" type="integer" value="50" property="x">
            <description>X position of the window</description>
         </value>
         <value direction="inout" name="y" type="integer" value="50" property="y">
            <description>Y position of the window</description>
         </value>
         <value direction="inout" name="h" type="integer" value="50" property="h">
            <description>Height of the window</description>
         </value>
         <value direction="inout" name="w" type="integer" value="50" property="w">
            <description>Width of the window</description>
         </value>
      </values>
      <methods>
         <method name="iconify" />
         <method name="maximize" />
         <method name="restore" />
         <method name="toFront" />
      </methods>
   </tipiclass>


   <tipiclass addtocontainer="false" implements="basecomponent,datacomponent" childcount="*" class="TipiScreen" layoutmanager="false" module="container" name="screen" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="screen.gif" type="tipi">
	<description>
		This component is used as 'virtual toplevel' although multiple frames are not supported yet.
		You never need to instantiate or access this component.
	</description>
   </tipiclass>
   
   <tipiclass addtocontainer="true" implements="basecomponent,datacomponent,swingcomponent"  childcount="*" class="TipiDesktop" layoutmanager="false" module="container" name="desktop" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="desktop.gif" type="tipi">
      <description>
		This component corresponds to the 'JDesktop' class in Swing. It is a parent for free floating children, typically windows or undecorated windows.
		You can place windows in other components, but take care when it uses a layoutmanager, which will cause the windows to behave a bit oddly.
      </description>
      <events>
         <event name="onMouseClicked">
            <param name="x" type="integer" />
            <param name="y" type="integer" />
            <param name="button" type="integer" />
            <param name="clickCount" type="integer" />
         </event>
      </events>
      <values>
         <value direction="in" name="paint" type="paint" property="paint" />
         <value direction="out" name="height" type="integer"  />
         <value direction="out" name="width" type="integer" />
         <value direction="in" name="logo" type="object" property="logoUrl" />
         <value direction="in" name="image_alignment" type="selection" property="alignment">
            <option description="North" value="north" />
            <option description="East" value="east" />
            <option description="South" value="south" />
            <option description="West" value="west" />
            <option description="Center" value="center" />
            <option description="NorthEast" value="northeast" />
            <option description="SouthEast" value="southeast" />
            <option description="NorthWest" value="northwest" />
            <option description="SouthWest" value="southwest" />
         </value>
      </values>
      <methods />
   </tipiclass>

   <tipiclass addtocontainer="false" implements="basecomponent,datacomponent,swingcomponent"  childcount="*" class="TipiFrame" layoutmanager="true" module="container" name="frame" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="frame.gif" toplevel="true" type="tipi">
      <events>
         <event name="onWindowClosed" />
		 <event name="onInstantiate"/>
      </events>
      <values>
         <value direction="in" name="icon" type="resource" />
         <value direction="inout" name="title" type="string" />
         <value direction="in" name="settingsService" type="string" property="settingsService" />
         <value direction="in" name="x" type="integer" value="0" />
         <value direction="in" name="y" type="integer" value="0" />
         <value direction="in" name="h" type="integer" value="480" />
         <value direction="in" name="w" type="integer" value="640" />
         <value direction="in" name="fullscreen" type="boolean" value="false" />
         <!--            <value direction="in" name="menubar" type="string"/>-->
         <value direction="in" name="centered" type="boolean" value="true" />
      </values>
      <methods>
         <method name="iconify" />
         <method name="maximize" />
         <!--  <method name="restore" /> -->
      </methods>
   </tipiclass>
   <tipiclass addtocontainer="true" childcount="0" implements="basecomponent"  class="TipiFileChooser" layoutmanager="false" module="component" name="filechooser" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="property.gif" type="component">
      <events>
      </events>
      <values>
         <value direction="inout" name="file" type="string" />
         <value direction="in" name="defaultdir" type="string" />
         <value direction="in" name="selectionMode" type="selection">
            <option description="Select only directories" value="dirs" />
            <option description="Select only files" value="files" />
            <option description="Select both files and directories" value="all" />
         </value>
      </values>
      <methods />
   </tipiclass>
   <tipiclass addtocontainer="true" childcount="*" class="TipiTabs" implements="basecomponent,datacomponent,swingcomponent"  layoutmanager="false" module="container" name="tabs" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="tabs.gif" type="tipi">
      <events>
         <event name="onTabChanged" />
      </events>
      <values>
         <!--           <value direction="inout" name="selected" type="tipi"/>
            <value direction="inout" name="lastselected" type="tipi"/>-->
         <value direction="inout" name="selected" type="component" />
         <value direction="inout" name="selectedindex" type="integer" />
         <value direction="out" name="lastselectedindex" type="integer" />
         <value direction="out" name="selectedMessage" type="message" />
         <value direction="in" name="placement" type="selection">
            <option description="Top" value="top" />
            <option description="Bottom" value="bottom" />
            <option description="Left" value="left" />
            <option description="Right" value="right" />
         </value>
      </values>
      <methods>
         <method name="enableTab">
            <param name="tabname" type="string" />
            <param name="value" type="boolean" />
         </method>
         <method name="showTab">
            <param name="component" type="component" />
            <param name="value" type="boolean" />
         </method>

      </methods>
   </tipiclass>

   <tipiclass addtocontainer="true" childcount="*" class="TipiTab" implements="basecomponent,datacomponent"  layoutmanager="true" module="container" name="tab" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="tabs.gif" type="tipi">
      <events>
      </events>
      <values>
         <value direction="in" name="tabForeground" type="color" property="tabForegroundColor" />
         <value direction="in" name="tabBackground" type="color" property="tabBackgroundColor" />
         <value direction="in" name="tabIcon" type="resource" property="iconUrl" />
         <value direction="in" name="tabText" type="string" property="tabText" />
         <value direction="in" name="border" type="border" />
      </values>
      <methods>

      </methods>
   </tipiclass>




   <tipiclass addtocontainer="true" childcount="*" class="TipiCardPanel" implements="basecomponent,datacomponent,swingcomponent" layoutmanager="false" module="container" name="cardpanel" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="tabs.gif" type="tipi">
      <events>
      </events>
      <values>
         <value direction="inout" name="selected" type="tipi" />
         <value direction="inout" name="selectedindex" type="integer" />
      </values>
      <methods />
   </tipiclass>


   <tipiclass addtocontainer="true" childcount="2" class="TipiSplitPane" implements="basecomponent,datacomponent" layoutmanager="false" module="container" name="split" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="hidden.gif" type="tipi">
      <events>
      </events>
      <values>
         <value direction="inout" name="dividerlocation" type="integer" property="dividerLocation" />
         <value direction="in" name="dividersize" type="integer" />
         <value direction="in" name="onetouchexpandable" type="boolean" />
         <value direction="in" name="inverted" type="boolean" />
         <value direction="in" name="orientation" type="selection" property="stringOrientation">
            <option description="Vertical" value="vertical" />
            <option description="Horizontal" value="horizontal" />
         </value>
      </values>
      <methods>
         <method name="enableTab">
            <param name="tabname" type="string" />
            <param name="value" type="boolean" />
         </method>
      </methods>
   </tipiclass>


   <tipiclass addtocontainer="true" childcount="2" class="TipiSlottedViewport" implements="basecomponent,datacomponent" layoutmanager="true" module="container" name="viewport" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="hidden.gif" type="tipi">
      <events>
      </events>
      <values>
         <value direction="in" name="width" type="integer" property="x" />
         <value direction="in" name="height" type="integer" property="y" />
         <value direction="in" name="orientation" type="selection">
            <option description="Vertical" value="vertical" />
            <option description="Horizontal" value="horizontal" />
         </value>
         <value direction="in" name="x" type="integer" property="x" />
         <value direction="in" name="y" type="integer" property="y" />
         <value direction="in" name="gridWidth" type="integer" property="gridWidth" />
         <value direction="in" name="gridHeight" type="integer" property="gridHeight" />


      </values>
      <methods>
         <method name="show">
            <param name="component" type="component" />
         </method>
         <method name="showAnimated">
            <param name="duration" type="int" />
            <param name="component" type="component" />
         </method>

      </methods>
   </tipiclass>


   <tipiclass addtocontainer="false" childcount="*" implements="basecomponent,datacomponent" class="TipiDialog" layoutmanager="true" module="container" name="dialog" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="dialog.gif" toplevel="true" type="tipi">
      <events>
         <event name="onWindowClosed" />
      </events>
      <values>
         <value direction="inout" name="title" type="string" />
         <value direction="in" name="settingsService" type="string" property="settingsService" />
         <value direction="in" name="x" type="integer" />
         <value direction="in" name="y" type="integer" />
         <value direction="in" name="h" type="integer" />
         <value direction="in" name="w" type="integer" />
         <value direction="in" name="modal" type="boolean" />
         <value direction="out" name="isShowing" type="boolean" />
         <value direction="in" name="decorated" type="boolean" />
         <!--            <value direction="in" name="menubar" type="identifier"/>-->
         <value direction="in" name="background" type="color" />
         <value direction="inout" name="tooltip" type="string" />
         <value direction="in" name="layout" type="string" />
         <value direction="in" name="opacity" type="float" />
         <value direction="in" name="icon" type="resource" property="iconUrl"/>
      </values>
      <methods>
         <method name="show" />
         <method name="hide" />
         <method name="dispose" />
      </methods>
   </tipiclass>
   <tipiclass addtocontainer="true" childcount="1" implements="basecomponent,swingcomponent,datacomponent" class="TipiScroller" layoutmanager="false" module="container" name="scroll" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="scroll.gif" type="tipi">
      <values>
         <value direction="inout" name="horizontal_policy" type="selection">
            <option description="As needed" value="as_needed" />
            <option description="Always" value="always" />
            <option description="Never" value="never" />
         </value>
         <value direction="inout" name="vertical_policy" type="selection">
            <option description="As needed" value="as_needed" />
            <option description="Always" value="always" />
            <option description="Never" value="never" />
         </value>
      </values>
      <methods />
   </tipiclass>


      
   <tipiclass addtocontainer="true" class="TipiButton" implements="basecomponent,dragdrop,swingcomponent,swingbutton" module="component" name="button" childcount="0" package="com.dexels.navajo.tipi.components.swingimpl"
      propertycomponent="false" studio-icon="button.gif" type="component">
      <values>
         <value direction="inout" name="text" type="string" property="text" />
         <value direction="in" name="icon" type="resource" property="iconUrl" />

         <value direction="in" name="borderVisible" type="boolean" property="borderVisible">
			<description>
				Indicates if the border will be drawn (default true). Setting it to false, will put the button in
				'toolbar style'
			</description>
         </value>
         <value direction="in" name="enabled" type="boolean" property="enabled" />
         <value direction="inout" name="mnemonic" type="string" property="stringMnemonic" />
         <value direction="in" name="accelerator" type="string" />
      </values>
 
   </tipiclass>

<!--  Copied from button, removed dropCategory -->
   <tipiclass addtocontainer="true" class="TipiDropButton" module="component" implements="basecomponent,swingcomponent,swingbutton" name="dropbutton" childcount="0" package="com.dexels.navajo.tipi.components.swingimpl"
      propertycomponent="false" studio-icon="button.gif" type="component">
      <description>
      	This component allows you to drop files or URL's onto it.
      	How and when this exactly works is platform dependent.
      </description>
      <events>
         <event name="onBinaryDropped">
			<description>
				Fired when a binary has been dropped.
				//Note: This button does not allow 'regular' tipi drops. You can use regular tipi drags, though.//
			</description>
            <param name="value" type="object">
				<description>
				</description>
            </param>
            <param name="path" type="string" />
            <param name="mime" type="string" />
         </event>
      </events>
      <values>
         <value direction="inout" name="text" type="string" property="text" />
         <value direction="in" name="icon" type="resource" property="iconUrl" />
         <value direction="in" name="foreground" type="color" property="foreground" />
         <value direction="in" name="enabled" type="boolean" property="enabled" />
         <value direction="inout" name="mnemonic" type="string" property="stringMnemonic" />
         <value direction="in" name="accelerator" type="string" />
         <value direction="in" name="dragValue" type="object" />
         <value direction="in" name="dragCategory" type="list" />
      </values>
      <methods>
         <method name="fireAction" />
      </methods>
   </tipiclass>

   <tipiclass addtocontainer="true" class="TipiCheckbox" module="component" implements="basecomponent,swingbutton,swingcomponent" name="checkbox" childcount="0" layoutmanager="false" package="com.dexels.navajo.tipi.components.swingimpl"
      propertycomponent="false" studio-icon="button.gif" type="component">
    
      <values>
         <value direction="inout" name="selected" type="string" property="selected" />
         <value direction="inout" name="text" type="string" property="text" />
         <value direction="in" name="icon" type="resource" property="iconUrl" />
         <value direction="in" name="enabled" type="boolean" property="enabled" />
         <value direction="in" name="accelerator" type="string" property="accelerator" />
         <value direction="inout" name="mnemonic" type="string" property="stringMnemonic" />
      </values>
      <methods />
   </tipiclass>
   <tipiclass addtocontainer="true" class="TipiToggleButton" module="component" implements="basecomponent,swingbutton,swingcomponent" name="togglebutton" childcount="0" layoutmanager="false"
      package="com.dexels.navajo.tipi.components.swingimpl" propertycomponent="false" studio-icon="button.gif" type="component">

      <values>
         <value direction="inout" name="selected" type="string" property="selected" />
         <value direction="inout" name="text" type="string" property="text" />
         <value direction="in" name="icon" type="resource" property="iconUrl" />
         <value direction="in" name="foreground" type="color" property="foreground" />
         <value direction="in" name="enabled" type="boolean" property="enabled" />
         <value direction="in" name="accelerator" type="string" property="accelerator" />
         <value direction="inout" name="mnemonic" type="string" property="stringMnemonic" />
         <value direction="inout" name="buttongroup" type="component" />
      </values>
      <methods />
   </tipiclass>
   <tipiclass addtocontainer="false" class="TipiButtonGroup" implements="basecomponent" module="component" name="buttongroup" childcount="0" layoutmanager="false"
      package="com.dexels.navajo.tipi.components.swingimpl" propertycomponent="false" studio-icon="button.gif" type="component">
      <events>
         <event name="onActionPerformed" />
      </events>
   </tipiclass>
   <tipiclass addtocontainer="true" implements="swingcomponent,basecomponent" class="TipiMenubar" module="menu" childcount="*" name="menubar" package="com.dexels.navajo.tipi.components.swingimpl"
      propertycomponent="false" studio-icon="menubar.gif" layoutmanager="false" type="component">
      <values>
         <value direction="in" name="enabled" type="boolean" property="enabled" />
      </values>
      <methods />
   </tipiclass>

   <tipiclass addtocontainer="true" implements="basecomponent,swingcomponent"  class="TipiMenu" module="menu" childcount="*" name="menu" package="com.dexels.navajo.tipi.components.swingimpl" layoutmanager="false"
      propertycomponent="false" studio-icon="menu.gif" type="component">
      <events>
      </events>
      <values>
         <value direction="inout" name="text" type="string" property="text" />
         <value direction="in" name="icon" type="resource" property="iconUrl" />
         <value direction="in" name="enabled" type="boolean" property="enabled" />
         <value direction="in" name="accelerator" type="string" property="accelerator" />
         <value direction="inout" name="mnemonic" type="string" property="stringMnemonic" />
      </values>
      <methods />
   </tipiclass>
   <tipiclass addtocontainer="true" class="TipiMenuSeparator" implements="swingcomponent,basecomponent" module="menu" childcount="0" name="separator" package="com.dexels.navajo.tipi.components.swingimpl"
      layoutmanager="false" propertycomponent="false" studio-icon="menu.gif" type="component">
      <events>
         <event name="onInstantiate" />
      </events>
      <values>
         <value direction="in" name="visible" type="boolean" property="visible" />
      </values>
      <methods />
   </tipiclass>


   <tipiclass addtocontainer="true" class="TipiMenuItem" implements="swingcomponent,basecomponent" module="menu" layoutmanager="false" name="menuitem" package="com.dexels.navajo.tipi.components.swingimpl"
      propertycomponent="false" studio-icon="menuitem.gif" childcount="0" type="component">
      <events>
         <event name="onActionPerformed" />
      </events>
      <values>
         <value direction="inout" name="text" type="string" property="text" />
         <value direction="in" name="icon" type="resource" property="iconUrl" />
         <value direction="in" name="font" type="font" property="font" />
         <value direction="in" name="enabled" type="boolean" property="enabled" />
         <value direction="in" name="accelerator" type="string" property="accelerator" />
         <value direction="inout" name="mnemonic" type="string" property="stringMnemonic" />
      </values>
      <methods />
   </tipiclass>
   <tipiclass addtocontainer="false" class="TipiPopupMenu" implements="basecomponent,swingcomponent" module="menu" name="popupmenu" layoutmanager="false" package="com.dexels.navajo.tipi.components.swingimpl"
      propertycomponent="false" studio-icon="popupmenu.gif" childcount="*" type="component">
      <events>
         <event name="onInstantiate" />
         <event name="onActionPerformed" />
         <event name="onMouseEntered" />
         <event name="onMouseExited" />
      </events>
      <values>
         <value direction="in" name="background" type="color" />
         <value direction="in" name="foreground" type="color" />
         <value direction="in" name="border" type="border" />
         <value direction="in" name="enabled" type="boolean" />
      </values>
      <methods />
   </tipiclass>

   <tipiclass addtocontainer="true" class="TipiThreadActivityLogger" module="component" name="threadlogger" layoutmanager="false" package="com.dexels.navajo.tipi.components.swingimpl"
      propertycomponent="false" studio-icon="label.gif" type="component" childcount="0">
      <events>
         <event name="onInstantiate" />
      </events>
      <values>
      </values>
      <methods />
   </tipiclass>
   <tipiclass addtocontainer="true" class="TipiThreadActivityMonitor" module="component" name="threadmonitor" layoutmanager="false" package="com.dexels.navajo.tipi.components.swingimpl"
      propertycomponent="false" studio-icon="label.gif" type="component" childcount="0">
      <events>
         <event name="onInstantiate" />
      </events>
      <values>
      </values>
      <methods />
   </tipiclass>
   <tipiclass addtocontainer="true" class="TipiLabel" implements="basecomponent,swingcomponent" module="component" name="label" layoutmanager="false" package="com.dexels.navajo.tipi.components.swingimpl"
      propertycomponent="false" studio-icon="label.gif" type="component" childcount="0">
      <events>
         <event name="onDrag" />
         <event name="onDrop">
            <param name="value" type="object" />
         </event>
      </events>
      <values>
         <value direction="inout" name="text" type="string" property="text" />
         <value direction="in" name="icon" type="resource" property="iconUrl" />
         <value direction="in" name="font" type="font" property="font" />
         <value direction="in" name="enabled" type="boolean" property="enabled" />
 	     <value direction="in" name="vertical" type="boolean" property="vertical" />

         <value direction="in" name="horizontalAlignment" type="string" property="tipiHorizontalAlignment">
            <option description="Left" value="left" />
            <option description="Center" value="center" />
            <option description="Right" value="right" />
            <option description="Leading" value="leading" />
            <option description="Trailing" value="trailing" />
         </value>
         <value direction="in" name="verticalAlignment" type="string" property="tipiVerticalAlignment">
            <option description="Center" value="center" />
            <option description="Top" value="top" />
            <option description="Bottom" value="bottom" />
         </value>
         <value direction="in" name="dragValue" type="object" />
         <value direction="in" name="dragCategory" type="list" />
         <value direction="in" name="dropCategory" type="list" />
      </values>
      <methods />
   </tipiclass>


   <tipiclass addtocontainer="true" class="TipiDescription" implements="basecomponent,swingcomponent" module="component" name="description" layoutmanager="false" package="com.dexels.navajo.tipi.components.swingimpl"
      propertycomponent="true" studio-icon="label.gif" type="component" childcount="0">
      <events>
         <event name="onDrag" />
         <event name="onDrop">
            <param name="value" type="object" />
         </event>
      </events>
      <values>
         <value direction="inout" name="propertyName" type="string" />
         <value direction="in" name="font" type="font" property="font" />
         <value direction="in" name="enabled" type="boolean" property="enabled" />
         <value direction="in" name="dragValue" type="object" />
          <value direction="in" name="dragCategory" type="list" />
         <value direction="in" name="dropCategory" type="list" />
      </values>
      <methods />
   </tipiclass>


   <tipiclass addtocontainer="true"  implements="basecomponent,swingcomponent" class="TipiHtmlLabel" module="component" name="htmllabel" layoutmanager="false" package="com.dexels.navajo.tipi.components.swingimpl"
      propertycomponent="true" studio-icon="label.gif" type="component" childcount="0" >
      <events>
      </events>
      <values>
         <value direction="inout" name="text" type="string"/>
        <value direction="in" name="propertyName" type="string" />
    </values>
      <methods />
   </tipiclass>
   <tipiclass addtocontainer="true" class="TipiProgressBar" implements="basecomponent,swingcomponent" module="component" name="progressbar" childcount="0" layoutmanager="false"
      package="com.dexels.navajo.tipi.components.swingimpl" propertycomponent="false" studio-icon="progressbar.gif" type="component">
      <events>
      </events>
      <values>

         <value direction="inout" name="text" type="string" property="text" />
         <value direction="in" name="icon" type="resource" property="iconUrl" />
         <value direction="inout" name="tooltip" type="string" property="ToolTipText" />
         <value direction="in" name="enabled" type="boolean" property="enabled" />
         <value direction="in" name="value" type="integer" property="value" />
         <value direction="in" name="orientation" type="selection" property="stringOrientation">
            <option description="Horizontal" value="horizontal" />
            <option description="Vertical" value="vertical" />
         </value>
         <value direction="in" name="indeterminate" type="boolean" property="indeterminate" />
      </values>
      <methods />
   </tipiclass>



   <tipiclass addtocontainer="true"  implements="basecomponent,swingcomponent" class="TipiTextField" module="component" name="textfield" childcount="0" layoutmanager="false" package="com.dexels.navajo.tipi.components.swingimpl"
      propertycomponent="false" studio-icon="textfield.gif" type="component">
      <events>
         <event name="onKey">
            <param name="code" type="integer" />
            <param name="key" type="string" />
            <param name="modifiers" type="string" />
            <param name="mode" type="string" />
         </event>
         <event name="onEnter" />
         <event name="onFocusGained" />
         <event name="onFocusLost" />
         <event name="onDrag" />
         <event name="onDrop">
            <param name="value" type="object" />
         </event>
      </events>
      <values>
         <value direction="inout" name="text" type="string" property="text" />
         <value direction="in" name="font" type="font" />
         <value direction="inout" name="tooltip" type="string" />
         <value direction="in" name="enabled" type="boolean" />
         <value direction="in" name="dragValue" type="object" />
             <value direction="in" name="dragCategory" type="list" />
         <value direction="in" name="dropCategory" type="list" />
      </values>
      <methods>
         <method name="selectAll" />

         <method name="append">
            <param name="text" type="string" />
         </method>
      </methods>
   </tipiclass>
   <tipiclass addtocontainer="true" class="TipiTextArea"  implements="basecomponent,swingcomponent" layoutmanager="false" module="component" name="textarea" childcount="0"
      package="com.dexels.navajo.tipi.components.swingimpl" propertycomponent="false" studio-icon="textarea.gif" type="component">
      <events>
         <event name="onKey">
            <param name="code" type="integer" />
            <param name="key" type="string" />
            <param name="modifiers" type="string" />
            <param name="mode" type="string" />
         </event>
         <event name="onEnter" />
      </events>
      <values>
         <value direction="inout" name="text" type="string" />
         <value direction="in" name="font" type="font" />
         <value direction="in" name="enabled" type="boolean"  property="enabled"/>
         <value direction="in" name="editable" type="boolean" property="editable"/>
      </values>
      <methods>
         <method name="selectAll" />
         <method name="append">
            <param name="text" type="string" />
         </method>
         <method name="appendLine">
            <param name="text" type="string" />
         </method>
      </methods>
   </tipiclass>


   <tipiclass addtocontainer="true" class="TipiSourceViewer" implements="basecomponent,swingcomponent" layoutmanager="false" module="component" name="sourceviewer" childcount="0"
      package="com.dexels.navajo.tipi.components.swingimpl" propertycomponent="false" studio-icon="textarea.gif" type="component">
      <events>
         <event name="onInstantiate" />
      </events>
      <values>
         <value direction="inout" name="definition" type="string" />
         <value direction="in" name="font" type="font" />
         <value direction="in" name="enabled" type="boolean" />
      </values>
      <methods>
         <method name="save" />
         <method name="reallySave" />
      </methods>

   </tipiclass>
   <tipiclass addtocontainer="true" class="TipiSlider" implements="basecomponent,swingcomponent" module="component" name="slider" childcount="0" layoutmanager="false"
      package="com.dexels.navajo.tipi.components.swingimpl" propertycomponent="false" studio-icon="textfield.gif" type="component">
      <events>
        <event name="onValueChanged"/>
         <event name="onFocusGained" />
         <event name="onFocusLost" />
      </events>
      <values>
         <value direction="inout" name="value" type="integer" />
         <value direction="in" name="min" type="integer" />
         <value direction="in" name="max" type="integer" />
         <value direction="in" name="enabled" type="boolean" />
         <value direction="in" name="snaptoticks" type="boolean" />
         <value direction="in" name="showticks" type="boolean" />
         <value direction="in" name="minortick" type="integer" />
         <value direction="in" name="majortick" type="integer" />
         <value direction="in" name="orientation" type="selection">
            <option description="Horizontal" value="horizontal" />
            <option description="Vertical" value="vertical" />
         </value>
      </values>
      <methods>        
      </methods>
   </tipiclass>

   <tipiclass addtocontainer="true" class="TipiBrowser"  implements="basecomponent,swingcomponent" layoutmanager="false" module="container" name="browser" package="com.dexels.navajo.tipi.components.swingimpl"
      childcount="0" studio-icon="toolbar.gif" type="component">
      <events>
         <event name="onInstantiate" />
      </events>
      <values>
         <value direction="in" name="binary" type="resource" property="binary" />
         <value direction="in" name="url" type="string"/>

      </values>
      <methods />
   </tipiclass>



   <tipiclass addtocontainer="true" class="TipiToolBar" implements="basecomponent,swingcomponent" layoutmanager="true" module="container" name="toolbar" package="com.dexels.navajo.tipi.components.swingimpl"
      childcount="*" studio-icon="toolbar.gif" type="component">
      <events>
      </events>
      <values>
         <value direction="in" name="orientation" type="selection" property="stringOrientation">
            <option description="Horizontal" value="horizontal" />
            <option description="Vertical" value="vertical" />
         </value>
         <value direction="inout" name="floatable" type="boolean" />
         <value direction="in" name="opaque" type="boolean" property="opaque" />
      </values>
      <methods />
   </tipiclass>


   <tipiclass addtocontainer="true" implements="basecomponent,swingcomponent" class="TipiLabel" module="component" name="hidden" layoutmanager="false" package="com.dexels.navajo.tipi.components.swingimpl"
      studio-icon="hidden.gif" type="component" childcount="0" />
     
   <tipiclass addtocontainer="true" class="TipiProperty" implements="basecomponent,swingcomponent" module="component" name="property" layoutmanager="false" package="com.dexels.navajo.tipi.components.swingimpl"
      propertycomponent="true" studio-icon="property.gif" type="component" childcount="0">
      <events>
         <event name="onValueChanged">
            <param name="propertyName" type="string" />
            <param name="propertyValue" type="object" />
            <param name="propertyLength" type="integer" />
            <param name="propertyType" type="string" />
            <param name="old" type="object" />
            <param name="internalChange" type="boolean" />
         </event>
         <event name="onDirectionChanged">
            <param name="propertyName" type="string" />
            <param name="propertyValue" type="string" />
            <param name="propertyLength" type="integer" />
            <param name="propertyType" type="string" />
         </event>
         <event name="onLengthChanged">
            <param name="propertyName" type="string" />
            <param name="propertyValue" type="string" />
            <param name="propertyLength" type="integer" />
            <param name="propertyType" type="string" />
         </event>
         <event name="onDescriptionChanged">
            <param name="propertyName" type="string" />
            <param name="propertyValue" type="string" />
            <param name="propertyLength" type="integer" />
            <param name="propertyType" type="string" />
         </event>
         <event name="onCardinalityChanged">
            <param name="propertyName" type="string" />
            <param name="propertyValue" type="string" />
            <param name="propertyLength" type="integer" />
            <param name="propertyType" type="string" />
         </event>

         <event name="onStateChanged" />
         <event name="onFocusGained" />
         <event name="onFocusLost" />
         <event name="onActionPerformed" />
         <event name="onKey">
            <param name="code" type="integer" />
            <param name="key" type="string" />
            <param name="modifiers" type="string" />
            <param name="mode" type="string" />
         </event>
         <event name="onEnter" />
         <event name="onDrag" />
         <event name="onDrop">
            <param name="value" type="object" />
         </event>
      </events>
      <values>
         <!--  <value direction="out" name="selectionIndex" type="integer" /> -->
         <value direction="inout" name="propertyname" type="string" property="propertyName" />
         <value direction="inout" name="propertyName" type="string" property="propertyName" />

         <value direction="in" name="font" type="font" property="font" />
         <value direction="in" name="enabled" type="boolean" property="enabled" />
         <value direction="inout" name="mnemonic" type="string" property="stringMnemonic" />
         <value direction="inout" name="propertyWidth" type="integer" property="propertyWidth" />
         <value direction="in" name="labelColor" type="color"/>
         <value direction="in" name="labelFont" type="font"/>

         <!-- todo -->
         <value direction="inout" name="propertyValue" type="object" />

         <!--
            Sets whether the property will still be able to get focus, even when it is direction out (defaults to true) if set to false it will not be able for example to copy
            text
         -->
         <value direction="inout" name="focusable" type="boolean" property="focusable" />

         <value direction="in" name="visibleRowCount" type="integer" property="visibleRowCount" />
         <value direction="inout" name="selectiontype" type="selection" property="selectionType">
            <option description="checkbox" value="checkbox" />
            <option description="default" value="default" />
            <option description="list" value="list" />
            <option description="picklist" value="picklist" />
            <option description="radio" value="radio" />
         </value>
         <value direction="inout" name="label_halign" type="selection" property="labelHAlign">
            <option description="Leading" value="leading" />
            <option description="Left" value="left" />
            <option description="Center" value="center" />
            <option description="Right" value="right" />
            <option description="Trailing" value="trailing" />
         </value>
         <value direction="inout" name="label_valign" type="selection" value="'top'" property="labelVAlign">
            <option description="Top" value="top" />
            <option description="Center" value="center" />
            <option description="Bottom" value="bottom" />
         </value>
         <value direction="inout" name="label_indent" type="integer" value="100" property="LabelIndent" />
         <value direction="inout" name="showlabel" type="boolean" value="true" property="showLabel" />
         <value direction="inout" name="alwaysUseLabel" type="boolean" value="false" property="alwaysUseLabel" />
         <value direction="inout" name="showdatepicker" type="boolean" value="false" property="showDatePicker" />
         <value direction="inout" name="capitalization" type="selection" value="'off'" property="capitalization">
            <option description="No capitalization" value="off" />
            <option description="Capitalize first letter" value="firstupper" />
            <option description="Capitalize all letters" value="upper" />
            <option description="Make all letters lowercase" value="lower" />
         </value>
         <value direction="in" name="checkboxGroupColumnCount" type="integer" property="checkboxGroupColumnCount" />
         <value direction="in" name="memoRowCount" type="integer" property="memoRowCount" />
         <value direction="in" name="memoColumnCount" type="integer" property="memoColumnCount" />
         <value direction="in" name="horizontalScrolls" type="boolean" property="horizontalScrolls" />
         <value direction="in" name="verticalScrolls" type="boolean" property="verticalScrolls" />
         <value direction="in" name="maxImageWidth" type="integer" property="maxImageWidth" />
         <value direction="in" name="maxImageHeight" type="integer" property="maxImageHeight" />
         <value direction="in" name="maxWidth" type="integer" property="maxWidth" />
         <value direction="in" name="forcedAlignment" type="string" />

         <value direction="in" name="dragValue" type="object" />
         <value direction="in" name="dragCategory" type="list" />
         <value direction="in" name="dropCategory" type="list" />
      </values>
      <methods>

         <method name="selectByName">
            <param name="value" required="true" type="string" />
         </method>
         <method name="selectByValue">
            <param name="value" required="true" type="string" />
         </method>

         <method name="updateProperty" />
         <method name="requestFocus" />
      </methods>
   </tipiclass>


   <tipiclass class="TipiNavajoTree" name="navajotree" implements="basecomponent,swingcomponent,datacomponent" package="com.dexels.navajo.tipi.components.swingimpl" type="tipi" childcount="0" layoutmanager="false"
      addtocontainer="true">
      <events>
         <event name="onComponentSelected">
            <param name="selectedPath" type="string" />
            <param name="selectedMessage" type="message" />
         </event>


      </events>
      <values>
         <value direction="in" name="selectedPath" type="string" />
      </values>
      <methods />
   </tipiclass>

   <tipiclass class="TipiSwingMessageView" name="messageview" implements="basecomponent,swingcomponent,datacomponent" package="com.dexels.navajo.tipi.components.swingimpl" type="tipi" childcount="0" layoutmanager="false"
      addtocontainer="true">
      <events>

      </events>
      <values>
         <value direction="in" name="message" type="message" />
      </values>
      <methods />
   </tipiclass>


   <tipiclass class="TipiGridPanel" implements="basecomponent,swingcomponent,datacomponent" name="gridpanel" package="com.dexels.navajo.tipi.components.swingimpl" type="tipi" childcount="*" layoutmanager="false"
      addtocontainer="true">
      <events>
      </events>
      <values>
         <value direction="in" name="columnWidth" type="string" />
         <value direction="in" name="height" type="integer" />
         <value direction="in" name="enabled" type="boolean" />
         <value direction="in" name="opaque" type="boolean" property="opaque" />
      </values>
      <methods />
   </tipiclass>

   <tipiclass studio-icon="tipitableprinter.gif" module="extensions" implements="basecomponent,datacomponent" class="TipiEmailLauncher" name="emaillauncher" childcount="0"
      package="com.dexels.navajo.tipi.components.swingimpl" type="tipi" addtocontainer="false" layoutmanager="false">
      <events>
      </events>
      <values />
      <methods>
         <method name="setEmailParameters">
            <param name="messagepath" type="message" />
            <param name="propertyname" type="string" />
            <param name="clubname" type="string" />
         </method>
      </methods>
   </tipiclass>

   <tipiclass studio-icon="tipitableprinter.gif" implements="basecomponent,swingcomponent,datacomponent" module="extensions" class="TipiWindowEmbedComponent" name="windowembed" childcount="0"
      package="com.dexels.navajo.tipi.components.swingimpl" type="tipi" addtocontainer="true" layoutmanager="false">
      <events>
      </events>
      <values>
         <value direction="in" name="resourceCodeBase" type="string" />
         <value direction="in" name="tipiCodeBase" type="string" />
         <value direction="in" name="enabled" type="boolean" />
         <value direction="in" name="binaryCodeBase" type="resource" />
      </values>
      <methods>
         <method name="switch">
            <param name="definition" type="string" />
         </method>
         <method name="loadDefinition">
            <param name="location" type="string" />
         </method>
         <method name="addStartupProperty">
            <param name="propertyName" type="string" />
            <param name="value" type="string" />
         </method>
         <method name="loadAllNavajo">
            <param name="message" type="message" />
         </method>
      </methods>
   </tipiclass>

   <tipiclass studio-icon="property.gif" module="component" implements="basecomponent,swingcomponent,datacomponent" childcount="0" class="TipiAjaxCombobox" name="ajaxcombobox" layoutmanager="false"
      package="com.dexels.navajo.tipi.components.swingimpl" type="tipi" addtocontainer="true">
      <events>
         <!-- When the user edits the combobox, and the combobox needs a refresh
-->
         <event name="onChange">
            <param name="text" type="string" />
            <param name="selectedValue" type="object" />
         </event>
         <!--  when the user selects an item in the combobox -->
         <event name="onSelect">
            <param name="value" type="string" />
            <param name="selectedValue" type="object" />
         </event>
         <!--  when the user presses enter in the combobox -->
         <event name="onEnter">
            <param name="value" type="string" />
            <param name="selectedValue" type="object" />
         </event>

         <event name="onTextChange">
            <param name="text" type="string" />
         </event>
      </events>
      <values>
         <value direction="in" name="messagePath" type="string" />
         <value direction="in" name="propertyName" type="string" />
         <value direction="in" name="valuePropertyName" type="string" />
         <value direction="out" name="selectedValue" type="object" />
         <value direction="in" name="syncRefresh" type="boolean" />
         <!--  not sure what this one does.. -->
         <value direction="in" name="value" type="string" />
         <value direction="in" name="text" type="string" />
         <value direction="in" name="refreshDelay" type="integer" />
      </values>
      <methods>
         <method name="updateCombo">
            <param name="text" type="string" />
            <param name="navajo" type="navajo" />
         </method>
      </methods>
   </tipiclass>

   <tipiclass class="TipiNavajoView" name="navajoviewer" implements="basecomponent,swingcomponent,datacomponent" package="com.dexels.navajo.tipi.components.swingimpl" type="tipi" childcount="*" layoutmanager="false"
      addtocontainer="true">
      <events>
         <event name="onMethodFired">
            <param name="service" type="string" />
            <param name="input" type="navajo" />
         </event>
      </events>
      <values>
         <value direction="in" name="paint" type="paint" property="paint" />

         <value direction="in" name="image" type="resource" property="imageUrl" />
         <value direction="in" name="image_alignment" type="selection" property="alignment">
            <option description="North" value="north" />
            <option description="East" value="east" />
            <option description="South" value="south" />
            <option description="West" value="west" />
            <option description="Center" value="center" />
            <option description="NorthEast" value="northeast" />
            <option description="SouthEast" value="southeast" />
            <option description="NorthWest" value="northwest" />
            <option description="SouthWest" value="southwest" />
         </value>

         <value direction="in" name="navajo" type="navajo" />

      </values>
      <methods>
          <method name="fireMethod">
            <param name="methodName" type="string" />
            <param name="navajo" type="navajo" />
         </method>
      </methods>
 
   </tipiclass>

   <tipiclass class="TipiGridBagLayout" name="gridbag" package="com.dexels.navajo.tipi.components.swingimpl.layout" type="layout" />
   <tipiclass class="TipiBorderLayout" name="border" package="com.dexels.navajo.tipi.components.swingimpl.layout" type="layout" />
   <tipiclass class="TipiFlowLayout" name="flow" package="com.dexels.navajo.tipi.components.swingimpl.layout" type="layout">
      <values>
         <!--  possible values: left, right, center -->
         <value direction="in" name="alignment" type="string" value="left" />
         <value direction="in" name="gap" type="int" value="5" />
      </values>
   </tipiclass>
   <tipiclass class="TipiVerticalBoxLayout" name="verticalbox" package="com.dexels.navajo.tipi.components.swingimpl.layout" type="layout" />
   <tipiclass class="TipiHorizontalBoxLayout" name="horizontalbox" package="com.dexels.navajo.tipi.components.swingimpl.layout" type="layout" />

   <tipiclass class="TipiVerticalLayout" name="vertical" package="com.dexels.navajo.tipi.components.swingimpl.layout" type="layout" />


   <tipiclass class="TipiXYLayout" name="xy" package="com.dexels.navajo.tipi.components.swingimpl.layout" type="layout" />


   <tipi-parser name="border" parser="com.dexels.navajo.tipi.components.swingimpl.parsers.BorderParser" type="javax.swing.border.Border" />
   <tipi-parser name="labelborder" parser="com.dexels.navajo.tipi.components.swingimpl.parsers.BorderParser" type="javax.swing.border.TitledBorder" />

   <tipi-parser name="font" parser="com.dexels.navajo.tipi.components.swingimpl.parsers.FontParser" type="java.awt.Font" >
      <description>
         Een font zit ZO in elkaar bla-bla-bla: For example: {font:/serif-1-1}
      </description>
   </tipi-parser>
   <tipi-parser name="color" parser="com.dexels.navajo.tipi.components.swingimpl.parsers.ColorParser" type="java.awt.Color" />
   <tipi-parser name="paint" parser="com.dexels.navajo.tipi.components.swingimpl.parsers.PaintParser" type="java.awt.Paint" />
  
</tid>
