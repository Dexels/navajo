<tid xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../tipi.xsd">

    <!-- ******************************************************************************************* -->
    <!-- *** PAY ATTENTION                                                                       *** -->
    <!-- *** All the commented code should be turned back on when switching to tabbed version    *** -->
    <!-- *** See personWindow (row 1673) for the reference part which also needs to be activated *** -->
    <!-- ******************************************************************************************* -->



    <!-- constraints & id have to be added at instantiate time -->
    <d.panel name="tabPersonWindowPaymentData" applyCss="true">
<!--         <l.mig grid="ins 0, fill"> -->
<!--             <c.tabs id="tabs" constraint="Center, grow"> -->
<!--                 <onTabChanged> -->
<!--                     <executeMethod name="'DoSelectedTabAction'"/> -->
<!--                 </onTabChanged> -->

<!--                 <c.tab id="tabPersonWindowPaymentDataTabsPaymentInfo" cssClass="'tabPersonWindowPaymentDataTabsPaymentInfo'"> -->
                    <l.mig grid="ins 0, wrap 1, fill">
                        <c.panel id="topPanel1" cssClass="'borderTopPanel1'" constraint="grow, gapbottom 5, hidemode 3" opaque="false">
                            <l.mig grid="wrap 1, fill, ins 0">
                                <c.panel id="personFinancialData" constraint="growx, top, hidemode 3" opaque="false" service="vla/financial/ProcessQueryPersonFinancialData">
                                    <onLoad>
                                        <!-- Save the instructiontype so we can check if it's changed and if so, then maybe we need to show a message regarding directdebit authorizations -->
                                        <setValue to="{globalref:/InstructionTypeOriginal}" from="{property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/InstructionType}"/>
                                        <!-- Used to set instructiontype back to original value if user sets to combola while emailinvoice is set to true -->
                                        <setValue to="{globalref:/InstructionType}" from="{property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/InstructionType}"/>
                                        <block condition="{property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/hasAlternativeBillingAddress} == true">
                                            <setValue from="true" to="{attributeref:/./altBillingAddressPanel:visible}" />
                                            <label.attribute path="{component:/./finanToolbar/lblRequiredFields}" visible="true" />
                                        </block>
                                        <block condition="{property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/hasAlternativeBillingAddress} == false">
                                            <setValue from="false" to="{attributeref:/./altBillingAddressPanel:visible}" />
                                            <label.attribute path="{component:/./finanToolbar/lblRequiredFields}" visible="false" />
                                        </block>
                                        <block condition="{property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/MemberOfFamily} != null" >
                                            <property.attribute path="{component:/./isHeadOfFamilyProperty}" visible="false" />
                                            <label.attribute path="{component:/./memberOfFamilyLabel}" visible="true" cssClass="'lblMemberOffFamily'" />
                                            <applyCss component="{component:/./memberOfFamilyLabel}"/>
                                        </block>
                                        <block condition="{property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/MemberOfFamily} == null" >
                                            <property.attribute path="{component:/./isHeadOfFamilyProperty}" visible="true" />
                                            <label.attribute path="{component:/./memberOfFamilyLabel}" visible="false" cssClass="'lblMemberOffFamilyEmpty'" />
                                            <applyCss component="{component:/./memberOfFamilyLabel}"/>
                                        </block>
                                    </onLoad>
                                    <l.mig grid="wrap 4, ins 5, fill">
                                        <c.property id="BankAccountNumber" capitalization="'upper'" constraint="growx, width 25%:25%:, gapright 10" label_indent="80" propertyname="'/FinancialData/BankAccountNumber'">
                                            <onFocusLost>
                                                <!-- Possibly filter spaces or dots -->
                                                <!-- Needs to be a global because it's a global method -->
                                                <setValue to="{globalref:/AccountNumber}" from="{property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/BankAccountNumber}"/>
                                                <executeMethod name="'FormatAccountNumber'"/>
                                                <setValue to="{propertyref:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/BankAccountNumber}" from="{global:/AccountNumber}"/>
                                                <!-- Calculate BIC -->
                                                <block condition="!IsEmpty( {global:/AccountNumber} ) AND IsEmpty( {property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/BIC} )">
                                                    <callService service="'vla/financial/utils/IBANToBIC'" input="{navajo:/vla/financial/ProcessQueryPersonFinancialData}"/>
                                                    <setValue from="{property:/vla/financial/utils/IBANToBIC:/Result/BIC}" to="{propertyref:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/BIC}" />
                                                </block>
                                            </onFocusLost>
                                        </c.property>
                                        <c.property constraint="growx, width 25%:25%:, gapright 10" label_indent="80" propertyname="'/FinancialData/InstructionType'" >
                                            <onValueChanged>
                                                <!--  if user sets paymentmethod to combola check if person receives invoices by email. combination not possible. invoice by email only possible when paymentmethod is direct bank transfer or hard cold cash -->
                                                <block condition="{property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/EmailInvoice} == true AND {property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/InstructionType} == 'combola'">
                                                    <setValue to="{propertyref:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/InstructionType}" from="{global:/InstructionType}"/>
                                                    <showInfo text="'messageEmailInvoiceCondition3'" />
                                                </block>
                                                <block condition="!({property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/EmailInvoice} == true AND {property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/InstructionType} == 'combola')">
                                                    <!-- Used to set instructiontype back to original value if user sets to combola while emailinvoice is set to true -->
                                                    <setValue to="{globalref:/InstructionType}" from="{property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/InstructionType}"/>
                                                </block>
                                            </onValueChanged>
                                        </c.property>
                                        <c.property id="isHeadOfFamilyProperty" constraint="growx, width 12%:12%:, gapright 10, hidemode 3" label_indent="140"  propertyname="'/FinancialData/IsHeadOfFamily'" />
                                        <c.label id="memberOfFamilyLabel" constraint="growx, width 12%:12%:, gapright 10, gaptop 10, hidemode 3" visible="false" text="''" />
                                        <c.property constraint="growx, width 20%:20%:" label_indent="185" propertyname="'/FinancialData/EmailInvoice'" >
                                            <onValueChanged>
                                                <!--  Only do checks if user sets checkbox to true -->
                                                <block condition="{property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/EmailInvoice} == true">
                                                    <!-- email invoice not possible when paymentmethod is combola -->
                                                    <block condition="{property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/InstructionType} == 'combola'" >
                                                        <setValue to="{propertyref:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/EmailInvoice}" from="false"/>
                                                        <showInfo text="'messageEmailInvoiceCondition1'" />
                                                    </block>
                                                    <block condition="{property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/InstructionType} != 'combola'" >
                                                        <!-- email invoice only possible if person has a emailaddress -->
                                                        <block  condition="{property:/vla/relation/ProcessQueryPerson:/MemberData/EmailAddress} == null OR {property:/vla/relation/ProcessQueryPerson:/MemberData/EmailAddress} == ''">
                                                            <setValue to="{propertyref:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/EmailInvoice}" from="false"/>
                                                            <showInfo text="'messageEmailInvoiceCondition2'" />
                                                        </block>
                                                    </block>
                                                </block>
                                            </onValueChanged>
                                        </c.property>
                                        <c.property id="BankAccountType" constraint="growx, width 25%:25%:, gapright 10" label_indent="80" propertyname="'/FinancialData/AccountType'">
                                            <onValueChanged>
                                                <!-- Convert accountnumber, and calculate BIC, according to chosen type -->
                                                <block condition="{property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/AccountType} != '-1' AND !IsEmpty({property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/BankAccountNumber})">
                                                    <!-- To IBAN -->
                                                    <setValue to="{localref:/ConvertedIBANContainsInvalidString}" from="true"/>
                                                    <block condition="ToUpper(GetSelectedValue({property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/AccountType})) == 'IBAN' AND ( Size({property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/BankAccountNumber}) &lt; 10 AND IsNumeric({property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/BankAccountNumber}) )">
                                                        <callService service="'vla/financial/utils/ConvertToIBAN'" input="{navajo:/vla/financial/ProcessQueryPersonFinancialData}"/>
                                                        <setValue to="{localref:/InvalidIBANString}" from="'null'"/>
                                                        <setValue to="{localref:/ConvertedIBANContainsInvalidString}" from="StringFunction('indexOf', {property:/vla/financial/utils/ConvertToIBAN:/Result/IBAN}, {local:/InvalidIBANString}) != -1"/>
                                                        <block condition="{local:/ConvertedIBANContainsInvalidString} == true">
                                                            <showWarning text="'messageInvalidAccountNumberToIBAN'"/>
                                                        </block>
                                                    </block>
                                                    <!-- Calculate BIC -->
                                                    <block condition="{local:/ConvertedIBANContainsInvalidString} == false">
                                                        <setValue from="{property:/vla/financial/utils/ConvertToIBAN:/Result/IBAN}" to="{propertyref:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/BankAccountNumber}" />
                                                        <callService service="'vla/financial/utils/IBANToBIC'" input="{navajo:/vla/financial/ProcessQueryPersonFinancialData}"/>
                                                        <setValue from="{property:/vla/financial/utils/IBANToBIC:/Result/BIC}" to="{propertyref:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/BIC}" />
                                                    </block>
                                                    <!-- To Bank/Giro -->
                                                    <block condition="ToUpper(GetSelectedValue({property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/AccountType})) != 'IBAN' AND Size({property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/BankAccountNumber}) &gt;= 10">
                                                        <callService service="'vla/financial/utils/ConvertFromIBAN'" input="{navajo:/vla/financial/ProcessQueryPersonFinancialData}"/>
                                                        <setValue from="{property:/vla/financial/utils/ConvertFromIBAN:/Result/AccountNumber}" to="{propertyref:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/BankAccountNumber}" />
                                                        <callService service="'vla/financial/utils/AccountNumberToBIC'" input="{navajo:/vla/financial/ProcessQueryPersonFinancialData}"/>
                                                        <setValue from="{property:/vla/financial/utils/AccountNumberToBIC:/Result/BIC}" to="{propertyref:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/BIC}" />
                                                        <!-- Check the size of the converted number. If 9 or 10, then it's bank, otherwise set to giro -->
                                                        <block condition="Size({property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/BankAccountNumber}) &gt;= 9">
                                                            <setSelectedValue property="{propertyref:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/AccountType}" value="'BANK'"/>
                                                        </block>
                                                        <block condition="Size({property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/BankAccountNumber}) &lt; 9">
                                                            <setSelectedValue property="{propertyref:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/AccountType}" value="'GIRO'"/>
                                                        </block>
                                                    </block>
                                                </block>
                                            </onValueChanged>
                                        </c.property>
                                        <c.property constraint="growx, gapright 10" label_indent="80" propertyname="'/FinancialData/Period'"/> 
                                        <c.hidden constraint="growx"/>                                           
                                        <c.property constraint="growx, width 20%:20%:" label_indent="185" propertyname="'/FinancialData/ExcludeFromContributionCalculation'" >
                                            <onValueChanged>
                                                <block condition="{property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/ExcludeFromContributionCalculation} == true">
                                                    <showInfo text="'messageAutoConnectProfiles'" />
                                                </block>
                                            </onValueChanged>
                                        </c.property>
                                        <c.property id="BICPerson" capitalization="'upper'" constraint="growx, width 25%:25%:, gapright 10" label_indent="80" propertyname="'/FinancialData/BIC'" />
                                        <c.hidden constraint="spanx 1" />
                                        <c.property constraint="growx" label_indent="140" propertyname="'/FinancialData/hasAlternativeBillingAddress'">
                                            <onActionPerformed>
                                                <setValue from="false" to="{attributeref:/.:enabled}" />
                                                <block condition="{attribute:/.:propertyValue} == true">
                                                    <setValue from="true" to="{attributeref:/../altBillingAddressPanel:visible}" />
                                                    <label.attribute path="{component:/../finanToolbar/lblRequiredFields}" visible="true" />
                                                </block>
                                                <block condition="{attribute:/.:propertyValue} == false">
                                                    <setValue from="false" to="{attributeref:/../altBillingAddressPanel:visible}" />
                                                    <label.attribute path="{component:/../finanToolbar/lblRequiredFields}" visible="false" />
                                                </block>
                                                <setValue from="true" to="{attributeref:/.:enabled}" />
                                            </onActionPerformed>
                                        </c.property>
                                        <c.property constraint="growx, width 20%:20%:" label_indent="185"  propertyname="'/FinancialData/ExcludeFromInvoiceReminderRun'" />

                                        <!-- Alternative billing address panel -->
                                        <c.panel id="altBillingAddressPanel" constraint="growx, spanx 4, gaptop 15, hidemode 3" opaque="false" visible="false">
                                            <l.mig grid="wrap 4, ins 0, fill">
                                                <c.property label_indent="80" constraint="growx, width 25%:25%:, gapright 10" capitalization="'firstupper'" propertyname="'/MemberData/LastName'" />
                                                <c.property label_indent="70" constraint="growx, width 25%:25%:, gapright 10" propertyname="'/MemberData/Infix'" />
                                                <c.property label_indent="80" constraint="growx, width 12%:12%:, gapright 10" propertyname="'/MemberData/Initials'" />
                                                <c.property constraint="growx, width 25%:25%:," propertyname="'/MemberData/EmailAddress'" />
                                                <c.property id="ZipCode" label_indent="80" constraint="growx, width 25%:25%:, gapright 10" capitalization="'upper'" propertyname="'/MemberData/ZipCode'" />
                                                <c.property id="AddressNumber" label_indent="70" constraint="growx, width 25%:25%:, gapright 10" propertyname="'/MemberData/AddressNumber'">
                                                    <onFocusLost>
                                                        <block condition="{property:/vla/financial/ProcessQueryPersonFinancialData:/MemberData/AddressNumber} != '' AND {property:/vla/financial/ProcessQueryPersonFinancialData:/MemberData/ZipCode} != '' AND {property:/vla/financial/ProcessQueryPersonFinancialData:/MemberData/AddressCountryCode} == 'NL'">
                                                            <callService service="'vla/ProcessCheckZipCode'" input="{navajo:/vla/financial/ProcessQueryPersonFinancialData}" />
                                                            <block condition="!{property:/vla/ProcessCheckZipCode:/MemberData/ValidAddress}">
                                                                <showInfo text="'messageNoValidAddressFound'" />
                                                            </block>
                                                           <block condition="{property:/vla/ProcessCheckZipCode:/MemberData/ValidAddress}">
                                                                <setValue from="{property:/vla/ProcessCheckZipCode:/MemberData/StreetName}" to="{propertyref:/vla/financial/ProcessQueryPersonFinancialData:/MemberData/StreetName}" />
                                                            </block>
                                                            <block condition="{property:/vla/ProcessCheckZipCode:/MemberData/City} != ''">
                                                                <setValue from="{property:/vla/ProcessCheckZipCode:/MemberData/City}" to="{propertyref:/vla/financial/ProcessQueryPersonFinancialData:/MemberData/City}" />
                                                            </block>
                                                            <block condition="{property:/vla/ProcessCheckZipCode:/MemberData/ZipCode} != ''">
                                                                <setValue from="{property:/vla/ProcessCheckZipCode:/MemberData/ZipCode}" to="{propertyref:/vla/financial/ProcessQueryPersonFinancialData:/MemberData/ZipCode}" />
                                                            </block>
                                                        </block>
                                                    </onFocusLost>
                                                </c.property>
                                                <c.property id="AddressNumberAppendix" label_indent="80" constraint="growx, width 12%:12%:, gapright 10" propertyname="'/MemberData/AddressNumberAppendix'" />
                                                <c.property id="StreetName" constraint="growx, width 25%:25%:," capitalization="'firstupper'" propertyname="'/MemberData/StreetName'" />
                                                <c.property id="City" label_indent="80" constraint="growx, width 25%:25%:, gapright 10" capitalization="'upper'" propertyname="'/MemberData/City'">
                                                    <onFocusLost>
                                                        <block condition="{property:/vla/financial/ProcessQueryPersonFinancialData:/MemberData/AddressNumber} != null AND {property:/vla/financial/ProcessQueryPersonFinancialData:/MemberData/City} != ''  AND {property:/vla/financial/ProcessQueryPersonFinancialData:/MemberData/StreetName} != '' AND {property:/vla/financial/ProcessQueryPersonFinancialData:/MemberData/AddressCountryCode} == 'NL'">
                                                            <callService service="'vla/ProcessCheckZipCode'" input="{navajo:/vla/financial/ProcessQueryPersonFinancialData}" />
                                                            <block condition="!{property:/vla/ProcessCheckZipCode:/MemberData/ValidAddress}">
                                                                <showInfo text="'messageNoValidAddressFound'" />
                                                            </block>
                                                            <block condition="{property:/vla/ProcessCheckZipCode:/MemberData/ValidAddress}">
                                                                <setValue from="{property:/vla/ProcessCheckZipCode:/MemberData/StreetName}" to="{propertyref:/vla/financial/ProcessQueryPersonFinancialData:/MemberData/StreetName}" />
                                                            </block>
                                                            <block condition="{property:/vla/ProcessCheckZipCode:/MemberData/City} != null">
                                                                <setValue from="{property:/vla/ProcessCheckZipCode:/MemberData/City}" to="{propertyref:/vla/financial/ProcessQueryPersonFinancialData:/MemberData/City}" />
                                                            </block>
                                                            <block condition="{property:/vla/ProcessCheckZipCode:/MemberData/ZipCode} != null">
                                                                <setValue from="{property:/vla/ProcessCheckZipCode:/MemberData/ZipCode}" to="{propertyref:/vla/financial/ProcessQueryPersonFinancialData:/MemberData/ZipCode}" />
                                                            </block>
                                                        </block>
                                                    </onFocusLost>
                                                </c.property>
                                                <c.property id="AddressCountryCode" label_indent="70" constraint="growx, width 25%:25%:, gapright 10" propertyname="'/MemberData/AddressCountryCode'" />
                                            </l.mig>
                                        </c.panel>

                                        <!-- finan toolbar -->
                                        <c.panel constraint="growx, spanx 4" opaque="false" id="finanToolbar">
                                            <l.mig grid="fillx, ins 0">
                                                <c.label id="lblRequiredFields" foreground="{color:/#992200}" cssClass="'lblRequiredFields'" visible="false" />
                                                <c.hidden constraint="growx" />
                                            </l.mig>
                                        </c.panel>
                                    </l.mig>
                                </c.panel>
                            </l.mig>
                        </c.panel>
                        
                        <!-- Authorizations -->
                        <c.panel id="topPanel2" cssClass="'borderTopPanel2'" constraint="grow, gapbottom 5, bottom, pushy, hidemode 3" opaque="false">
                            <l.mig grid="wrap 1, fill, ins 0">
                                <c.tipitable id="directDebitAuthorizationTable" constraint="grow" opaque="false" columnsvisible="false" filtersvisible="false" messagepath="'/DirectDebitAuthorizations'" service="vla/financial/directdebit_authorization/ProcessQueryDirectDebitAuthorizations">
                                    <column name="AuthorizationNumber" size="80" />
                                    <column name="AuthorizationTypeDescription" size="90" />
                                    <column name="IssueDate" size="80" />
                                    <column name="ConfirmationDate" size="90" />
                                    <column name="StartDate" size="100" />
                                    <column name="EndDate" size="80" />
                                    <column name="MaximumAmount" size="80" />
                                    <column name="FrequencyTypeDescription" size="90" />
                                    <column name="Remarks" size="150" />
                                    <column name="DocumentPresent" size="100" />
                                    
                                    <onActionPerformed>
                                        <block condition="{global:/IsContributionReadOnly}">
                                            <showInfo text="'messageReadOnlyRights'"/>
                                        </block>
                                        <block condition="!{global:/IsContributionReadOnly}">
                                            <setValue from="{property:/.:selectedMessage:ObjectId}" to="{globalref:/DirectDebitAuthorization_ObjectId}" />
                                            <setValue from="{property:/.:selectedMessage:ObjectType}" to="{globalref:/DirectDebitAuthorization_ObjectType}" />
                                            <setValue from="{property:/.:selectedMessage:AuthorizationNumber}" to="{globalref:/DirectDebitAuthorization_AuthorizationNumber}" />
                                            <setValue from="{property:/.:selectedMessage:AuthorizationType}" to="{globalref:/DirectDebitAuthorization_AuthorizationType}" />
                                            <setValue from="{property:/.:selectedMessage:StartDate}" to="{globalref:/DirectDebitAuthorization_StartDate}" />
                                            <instantiate id="'editDirectDebitAuthorization'" location="{component://init/desktop}" name="'editDirectDebitAuthorization'" />
                                        </block>
                                    </onActionPerformed>
                                    <onLoad>
                                        <!-- enable / disable add /remove buttons -->
                                        <block condition="IsNull( {navajo:/vla/financial/directdebit_authorization/ProcessQueryDirectDebitAuthorizations} )">
                                            <button.attribute path="{component:/../directDebitAuthorizationToolbar/cosDeletePersonDirectDebitAuthorizationBtn}" enabled="false" />
                                        </block>
                                        <block condition="!IsNull( {navajo:/vla/financial/directdebit_authorization/ProcessQueryDirectDebitAuthorizations} )">
                                            <block condition="Size( {message:/vla/financial/directdebit_authorization/ProcessQueryDirectDebitAuthorizations:/DirectDebitAuthorizations} ) &gt; 0">
                                                <button.attribute path="{component:/../directDebitAuthorizationToolbar/cosDeletePersonDirectDebitAuthorizationBtn}" enabled="true" />
                                            </block>
                                            <block condition="Size( {message:/vla/financial/directdebit_authorization/ProcessQueryDirectDebitAuthorizations:/DirectDebitAuthorizations} ) == 0">
                                                <button.attribute path="{component:/../directDebitAuthorizationToolbar/cosDeletePersonDirectDebitAuthorizationBtn}" enabled="false" />
                                            </block>
                                        </block>
                                        <button.attribute enabled="{global:/PersonStatus} != 'insync_removed'" path="{component:/../directDebitAuthorizationToolbar/cosInsertPersonDirectDebitAuthorizationBtn}" />
                                    </onLoad>
                                </c.tipitable>
                                <!-- DirectDebitAuthorization toolbar -->
                                <c.panel id="directDebitAuthorizationToolbar" constraint="growx" opaque="false" service="vla/financial/directdebit_authorizationform/InitQueryPayeeAddressType">
                                    <l.mig grid="fillx, ins 5">
                                        <c.label cssClass="'messageDoubleClickOnRowToEdit'" />
                                        <c.hidden constraint="growx" />
                                        <c.property showlabel="false" propertyname="'/Payee/AddressType'" selectiontype="'radio'" constraint="growx, gapleft 3, width 400!" checkboxGroupColumnCount="2" />
                                        
                                        <c.button id="btnDirectdebitAuthorizationPrintNew" cssClass="'printButtonAddSmall btnDirectdebitAuthorizationPrintNew'" borderVisible="false">
                                            <onActionPerformed>
                                                <block condition="{attribute:/../../directDebitAuthorizationTable:selectedIndex} == '-1'">
                                                    <showInfo text="'messageNoRowSelected'"/>
                                                </block>
                                                <block condition="{attribute:/../../directDebitAuthorizationTable:selectedIndex} != '-1'">
                                                    <setValue to="{localref:/DirectDebitUseFormatExisting}" from="false"/>
                                                    <setValue to="{localref:/DirectDebitAuthorizationNumber}" from="{property:/../../directDebitAuthorizationTable:selectedMessage:AuthorizationNumber}"/>
                                                    <executeMethod name="'DoPrintAuthorization'"/>
                                                </block>
                                            </onActionPerformed>
                                        </c.button>
                                        <c.button id="btnDirectdebitAuthorizationPrintExisting" cssClass="'printButtonSmall btnDirectdebitAuthorizationPrintExisting'" borderVisible="false">
                                            <onActionPerformed>
                                                <block condition="{attribute:/../../directDebitAuthorizationTable:selectedIndex} == '-1'">
                                                    <showInfo text="'messageNoRowSelected'"/>
                                                </block>
                                                <block condition="{attribute:/../../directDebitAuthorizationTable:selectedIndex} != '-1'">
                                                    <setValue to="{localref:/DirectDebitUseFormatExisting}" from="true"/>
                                                    <setValue to="{localref:/DirectDebitAuthorizationNumber}" from="{property:/../../directDebitAuthorizationTable:selectedMessage:AuthorizationNumber}"/>
                                                    <executeMethod name="'DoPrintAuthorization'"/>
                                                </block>
                                            </onActionPerformed>
                                        </c.button>
                                        <c.button id="openDirectdebitAuthorizationBtn" cssClass="'openFolderButtonSmall'" tooltip="'Document tonen'" borderVisible="false">
                                            <onActionPerformed>
                                                <block condition="{attribute:/../../directDebitAuthorizationTable:selectedIndex} == '-1'">
                                                    <showWarning text="'messageNoAuthorizationDataPresent'"/>
                                                </block>
                                                <block condition="{attribute:/../../directDebitAuthorizationTable:selectedIndex} != '-1'">
                                                    <block condition="IsNull( {property:/../../directDebitAuthorizationTable:selectedMessage:DocumentData} )">
                                                        <showWarning text="'messageNoAuthorizationDataPresent'"/>
                                                    </block>
                                                    <block condition="!IsNull( {property:/../../directDebitAuthorizationTable:selectedMessage:DocumentData} )">
                                                        <openBinary value="{property:/../../directDebitAuthorizationTable:selectedMessage:DocumentData}"/>
                                                    </block>
                                                </block>
                                            </onActionPerformed>
                                        </c.button>
                                        <c.button id="cosInsertPersonDirectDebitAuthorizationBtn" cssClass="'addButtonSmall'" enabled="false" borderVisible="false">
                                            <onActionPerformed>
                                                <block condition="IsEmpty({property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/BankAccountNumber}) OR {property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/InstructionType} != 'directdebit'">
                                                    <showInfo text="'messageDirectdebitAuthorizationCondition'"/>
                                                </block>
                                                <block condition="!IsEmpty({property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/BankAccountNumber}) AND {property:/vla/financial/ProcessQueryPersonFinancialData:/FinancialData/InstructionType} == 'directdebit'">
                                                    <setValue from="{property:/vla/relation/ProcessQueryPerson:/MemberData/PersonId}" to="{globalref:/DirectDebitAuthorization_ObjectId}"/>
                                                    <setValue from="'PERSON'" to="{globalref:/DirectDebitAuthorization_ObjectType}"/>
                                                    <instantiate id="'addDirectDebitAuthorization'" location="{component://init/desktop}" name="'addDirectDebitAuthorization'" />
                                                </block>
                                            </onActionPerformed>
                                        </c.button>
                                        <c.button id="cosDeletePersonDirectDebitAuthorizationBtn" cssClass="'deleteButtonSmall'" enabled="false" borderVisible="false">
                                            <onActionPerformed>
                                                <block condition="{attribute:/../../directDebitAuthorizationTable:selectedIndex} == '-1'">
                                                    <showWarning text="'messageNoRowSelected'"/>
                                                </block>
                                                <block condition="{attribute:/../../directDebitAuthorizationTable:selectedIndex} != '-1'">
                                                    <callService service="'vla/financial/directdebit_authorization/InitDeleteDirectDebitAuthorization'"/>
                                                    <setValue from="{property:/../../directDebitAuthorizationTable:selectedMessage:ObjectId}" to="{propertyref:/vla/financial/directdebit_authorization/InitDeleteDirectDebitAuthorization:/DirectDebitAuthorization/ObjectId}" />
                                                    <setValue from="{property:/../../directDebitAuthorizationTable:selectedMessage:ObjectType}" to="{propertyref:/vla/financial/directdebit_authorization/InitDeleteDirectDebitAuthorization:/DirectDebitAuthorization/ObjectType}" />
                                                    <setValue from="{property:/../../directDebitAuthorizationTable:selectedMessage:AuthorizationNumber}" to="{propertyref:/vla/financial/directdebit_authorization/InitDeleteDirectDebitAuthorization:/DirectDebitAuthorization/AuthorizationNumber}" />
                                                    <callService service="'vla/financial/directdebit_authorization/ProcessDeleteDirectDebitAuthorization'" input="{navajo:/vla/financial/directdebit_authorization/InitDeleteDirectDebitAuthorization}"/>
                                                    <callService service="'vla/financial/directdebit_authorization/ProcessQueryDirectDebitAuthorizations'" input="{navajo:/vla/InitMessageStoreData}"/>
                                                </block>
                                            </onActionPerformed>
                                        </c.button>
                                    </l.mig>
                                </c.panel>
                            </l.mig>
                        </c.panel>
                    </l.mig>
<!--                 </c.tab> -->

<!--                 <c.tab id="tabPersonWindowPaymentDataTabsContributionInfo" cssClass="'tabPersonWindowPaymentDataTabsContributionInfo'" service="vla/financial/ProcessQueryPersonContribPeriodSettings"> -->
<!--                     <l.mig grid="ins 0, wrap 1, fill"> -->
<!--                         <c.panel id="pnlSetPaidPeriods" cssClass="'borderPnlSetPaidPeriods'" constraint="grow, gapbottom 5, hidemode 3" opaque="false"> -->
<!--                             <l.mig grid="ins 3, wrap 1, fill"> -->
                            
<!--                             </l.mig> -->
<!--                         </c.panel> -->
<!--                     </l.mig> -->
<!--                 </c.tab> -->
<!--             </c.tabs> -->
<!--         </l.mig> -->
        
        <!-- Method for printing pdf stuff -->
        <localmethod name="DoPrintAuthorization">
            <callService service="'vla/financial/directdebit_authorizationform/InitPrintDirectDebitAuthorization'" input="{navajo:/vla/InitMessageStoreData}"/>
            <setValue from="{local:/DirectDebitAuthorizationNumber}" to="{propertyref:/vla/financial/directdebit_authorizationform/InitPrintDirectDebitAuthorization:/DirectDebitAuthorization/AuthorizationNumber}" />
            <setValue from="{local:/DirectDebitUseFormatExisting}" to="{propertyref:/vla/financial/directdebit_authorizationform/InitPrintDirectDebitAuthorization:/DirectDebitAuthorization/UseFormatExisting}" />
            <setValue from="GetSelectedValue( {property:/vla/financial/directdebit_authorizationform/InitQueryPayeeAddressType:/Payee/AddressType} )" to="{propertyref:/vla/financial/directdebit_authorizationform/InitPrintDirectDebitAuthorization:/DirectDebitAuthorization/PayeeAddressType}" />
            <callService service="'vla/financial/directdebit_authorizationform/ProcessQueryDirectDebitAuthorization'" input="{navajo:/vla/financial/directdebit_authorizationform/InitPrintDirectDebitAuthorization}"/>
            <callService service="'vla/financial/directdebit_authorizationform/ProcessPrintDirectDebitAuthorizations'" input="{navajo:/vla/financial/directdebit_authorizationform/ProcessQueryDirectDebitAuthorization}"/>
            <!-- Time to create the pdf -->
            <callService service="'ProcessDelegateBirt'" input="{navajo:/vla/financial/directdebit_authorizationform/ProcessPrintDirectDebitAuthorizations}"  />
            <openBinary value="{property:/ProcessDelegateBirt:/Result/Data}" />
        </localmethod>
        
        <localmethod name="DoSelectedTabAction">
            <block condition="{attribute:/~/tabs:selectedindex} == 1">
                <callService service="'vla/financial/ProcessQueryPersonContribPeriodSettings'" input="{navajo:/vla/InitMessageStoreData}"/>
            </block>
        </localmethod>
    </d.panel>
</tid>
