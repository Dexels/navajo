/*
* generated by Xtext
*/
grammar InternalTsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.dexels.navajo.dsl.tsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.dexels.navajo.dsl.tsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.dexels.navajo.dsl.tsl.services.TslGrammarAccess;

}

@parser::members {

 	private TslGrammarAccess grammarAccess;
 	
    public InternalTslParser(TokenStream input, TslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Tml";	
   	}
   	
   	@Override
   	protected TslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleTml
entryRuleTml returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTmlRule()); }
	 iv_ruleTml=ruleTml 
	 { $current=$iv_ruleTml.current; } 
	 EOF 
;

// Rule Tml
ruleTml returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTmlAccess().getTmlAction_0(),
            $current);
    }
)(this_XMLHead_1=RULE_XMLHEAD
    { 
    newLeafNode(this_XMLHead_1, grammarAccess.getTmlAccess().getXMLHeadTerminalRuleCall_1()); 
    }
)?this_NAVASCRIPT_START_2=RULE_NAVASCRIPT_START
    { 
    newLeafNode(this_NAVASCRIPT_START_2, grammarAccess.getTmlAccess().getNAVASCRIPT_STARTTerminalRuleCall_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTmlAccess().getAttributesPossibleExpressionParserRuleCall_3_0()); 
	    }
		lv_attributes_3_0=rulePossibleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTmlRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_3_0, 
        		"PossibleExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*((this_XML_TAG_END_4=RULE_XML_TAG_END
    { 
    newLeafNode(this_XML_TAG_END_4, grammarAccess.getTmlAccess().getXML_TAG_ENDTerminalRuleCall_4_0_0()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTmlAccess().getChildrenMessageParserRuleCall_4_0_1_0_0()); 
	    }
		lv_children_5_0=ruleMessage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTmlRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_5_0, 
        		"Message");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTmlAccess().getChildrenMapParserRuleCall_4_0_1_1_0()); 
	    }
		lv_children_6_0=ruleMap		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTmlRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_6_0, 
        		"Map");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTmlAccess().getChildrenParamParserRuleCall_4_0_1_2_0()); 
	    }
		lv_children_7_0=ruleParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTmlRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_7_0, 
        		"Param");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTmlAccess().getMethodsMethodsParserRuleCall_4_0_1_3_0()); 
	    }
		lv_methods_8_0=ruleMethods		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTmlRule());
	        }
       		add(
       			$current, 
       			"methods",
        		lv_methods_8_0, 
        		"Methods");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTmlAccess().getChildrenDebugTagParserRuleCall_4_0_1_4_0()); 
	    }
		lv_children_9_0=ruleDebugTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTmlRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_9_0, 
        		"DebugTag");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTmlAccess().getChildrenIncludeParserRuleCall_4_0_1_5_0()); 
	    }
		lv_children_10_0=ruleInclude		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTmlRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_10_0, 
        		"Include");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTmlAccess().getChildrenValidationsParserRuleCall_4_0_1_6_0()); 
	    }
		lv_children_11_0=ruleValidations		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTmlRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_11_0, 
        		"Validations");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTmlAccess().getChildrenCommentParserRuleCall_4_0_1_7_0()); 
	    }
		lv_children_12_0=ruleComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTmlRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_12_0, 
        		"Comment");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_NAVASCRIPT_END_13=RULE_NAVASCRIPT_END
    { 
    newLeafNode(this_NAVASCRIPT_END_13, grammarAccess.getTmlAccess().getNAVASCRIPT_ENDTerminalRuleCall_4_0_2()); 
    }
)
    |this_XML_TAG_SINGLEEND_14=RULE_XML_TAG_SINGLEEND
    { 
    newLeafNode(this_XML_TAG_SINGLEEND_14, grammarAccess.getTmlAccess().getXML_TAG_SINGLEENDTerminalRuleCall_4_1()); 
    }
))
;





// Entry rule entryRuleAttributeName
entryRuleAttributeName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeNameRule()); } 
	 iv_ruleAttributeName=ruleAttributeName 
	 { $current=$iv_ruleAttributeName.current.getText(); }  
	 EOF 
;

// Rule AttributeName
ruleAttributeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getAttributeNameAccess().getIDTerminalRuleCall()); 
    }

    ;





// Entry rule entryRulePossibleExpression
entryRulePossibleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPossibleExpressionRule()); }
	 iv_rulePossibleExpression=rulePossibleExpression 
	 { $current=$iv_rulePossibleExpression.current; } 
	 EOF 
;

// Rule PossibleExpression
rulePossibleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_namespace_0_0=RULE_ID
		{
			newLeafNode(lv_namespace_0_0, grammarAccess.getPossibleExpressionAccess().getNamespaceIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPossibleExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"namespace",
        		lv_namespace_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPossibleExpressionAccess().getColonKeyword_0_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPossibleExpressionAccess().getKeyAttributeNameParserRuleCall_1_0()); 
	    }
		lv_key_2_0=ruleAttributeName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPossibleExpressionRule());
	        }
       		set(
       			$current, 
       			"key",
        		lv_key_2_0, 
        		"AttributeName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPossibleExpressionAccess().getEqualsSignKeyword_2());
    }
((this_QUOTEQ_4=RULE_QUOTEQ
    { 
    newLeafNode(this_QUOTEQ_4, grammarAccess.getPossibleExpressionAccess().getQUOTEQTerminalRuleCall_3_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPossibleExpressionAccess().getExpressionValueTopLevelParserRuleCall_3_0_1_0()); 
	    }
		lv_expressionValue_5_0=ruleTopLevel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPossibleExpressionRule());
	        }
       		set(
       			$current, 
       			"expressionValue",
        		lv_expressionValue_5_0, 
        		"TopLevel");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_endToken_6_0=RULE_SEMICOLONQUOTE
		{
			newLeafNode(lv_endToken_6_0, grammarAccess.getPossibleExpressionAccess().getEndTokenSEMICOLONQUOTETerminalRuleCall_3_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPossibleExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"endToken",
        		lv_endToken_6_0, 
        		"SEMICOLONQUOTE");
	    }

)
))
    |(
(
		lv_value_7_0=RULE_ATTRIBUTESTRING
		{
			newLeafNode(lv_value_7_0, grammarAccess.getPossibleExpressionAccess().getValueATTRIBUTESTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPossibleExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_7_0, 
        		"ATTRIBUTESTRING");
	    }

)
)
    |(
(
		lv_value_8_0=RULE_EMPTYSTRING
		{
			newLeafNode(lv_value_8_0, grammarAccess.getPossibleExpressionAccess().getValueEMPTYSTRINGTerminalRuleCall_3_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPossibleExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_8_0, 
        		"EMPTYSTRING");
	    }

)
)))
;





// Entry rule entryRuleMethods
entryRuleMethods returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodsRule()); }
	 iv_ruleMethods=ruleMethods 
	 { $current=$iv_ruleMethods.current; } 
	 EOF 
;

// Rule Methods
ruleMethods returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_METHODS_START_TAG_0=RULE_METHODS_START_TAG
    { 
    newLeafNode(this_METHODS_START_TAG_0, grammarAccess.getMethodsAccess().getMETHODS_START_TAGTerminalRuleCall_0()); 
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodsAccess().getMethodsAction_1(),
            $current);
    }
)(((
(
		lv_splitTag_2_0=RULE_XML_TAG_END
		{
			newLeafNode(lv_splitTag_2_0, grammarAccess.getMethodsAccess().getSplitTagXML_TAG_ENDTerminalRuleCall_2_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splitTag",
        		true, 
        		"XML_TAG_END");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodsAccess().getMethodMethodParserRuleCall_2_0_1_0()); 
	    }
		lv_method_3_0=ruleMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodsRule());
	        }
       		add(
       			$current, 
       			"method",
        		lv_method_3_0, 
        		"Method");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		lv_closedTag_4_0=RULE_METHODS_END_TAG
		{
			newLeafNode(lv_closedTag_4_0, grammarAccess.getMethodsAccess().getClosedTagMETHODS_END_TAGTerminalRuleCall_2_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"closedTag",
        		true, 
        		"METHODS_END_TAG");
	    }

)
))
    |this_XML_TAG_SINGLEEND_5=RULE_XML_TAG_SINGLEEND
    { 
    newLeafNode(this_XML_TAG_SINGLEEND_5, grammarAccess.getMethodsAccess().getXML_TAG_SINGLEENDTerminalRuleCall_2_1()); 
    }
))
;





// Entry rule entryRuleMethod
entryRuleMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodRule()); }
	 iv_ruleMethod=ruleMethod 
	 { $current=$iv_ruleMethod.current; } 
	 EOF 
;

// Rule Method
ruleMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_METHOD_START_TAG_0=RULE_METHOD_START_TAG
    { 
    newLeafNode(this_METHOD_START_TAG_0, grammarAccess.getMethodAccess().getMETHOD_START_TAGTerminalRuleCall_0()); 
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodAccess().getMethodAction_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); 
	    }
		lv_attributes_2_0=rulePossibleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_2_0, 
        		"PossibleExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*(((
(
		lv_splitTag_3_0=RULE_XML_TAG_END
		{
			newLeafNode(lv_splitTag_3_0, grammarAccess.getMethodAccess().getSplitTagXML_TAG_ENDTerminalRuleCall_3_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splitTag",
        		true, 
        		"XML_TAG_END");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getChildrenRequiredParserRuleCall_3_0_1_0()); 
	    }
		lv_children_4_0=ruleRequired		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_4_0, 
        		"Required");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		lv_closedTag_5_0=RULE_METHOD_END_TAG
		{
			newLeafNode(lv_closedTag_5_0, grammarAccess.getMethodAccess().getClosedTagMETHOD_END_TAGTerminalRuleCall_3_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"closedTag",
        		true, 
        		"METHOD_END_TAG");
	    }

)
))
    |this_XML_TAG_SINGLEEND_6=RULE_XML_TAG_SINGLEEND
    { 
    newLeafNode(this_XML_TAG_SINGLEEND_6, grammarAccess.getMethodAccess().getXML_TAG_SINGLEENDTerminalRuleCall_3_1()); 
    }
))
;





// Entry rule entryRuleValidations
entryRuleValidations returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValidationsRule()); }
	 iv_ruleValidations=ruleValidations 
	 { $current=$iv_ruleValidations.current; } 
	 EOF 
;

// Rule Validations
ruleValidations returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_VALIDATIONS_START_TAG_0=RULE_VALIDATIONS_START_TAG
    { 
    newLeafNode(this_VALIDATIONS_START_TAG_0, grammarAccess.getValidationsAccess().getVALIDATIONS_START_TAGTerminalRuleCall_0()); 
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getValidationsAccess().getValidationsAction_1(),
            $current);
    }
)(((
(
		lv_splitTag_2_0=RULE_XML_TAG_END
		{
			newLeafNode(lv_splitTag_2_0, grammarAccess.getValidationsAccess().getSplitTagXML_TAG_ENDTerminalRuleCall_2_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValidationsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splitTag",
        		true, 
        		"XML_TAG_END");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getValidationsAccess().getChildrenCheckParserRuleCall_2_0_1_0()); 
	    }
		lv_children_3_0=ruleCheck		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValidationsRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_3_0, 
        		"Check");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		lv_closedTag_4_0=RULE_VALIDATIONS_END_TAG
		{
			newLeafNode(lv_closedTag_4_0, grammarAccess.getValidationsAccess().getClosedTagVALIDATIONS_END_TAGTerminalRuleCall_2_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValidationsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"closedTag",
        		true, 
        		"VALIDATIONS_END_TAG");
	    }

)
))
    |this_XML_TAG_SINGLEEND_5=RULE_XML_TAG_SINGLEEND
    { 
    newLeafNode(this_XML_TAG_SINGLEEND_5, grammarAccess.getValidationsAccess().getXML_TAG_SINGLEENDTerminalRuleCall_2_1()); 
    }
))
;





// Entry rule entryRuleCheck
entryRuleCheck returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCheckRule()); }
	 iv_ruleCheck=ruleCheck 
	 { $current=$iv_ruleCheck.current; } 
	 EOF 
;

// Rule Check
ruleCheck returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_CHECK_START_TAG_0=RULE_CHECK_START_TAG
    { 
    newLeafNode(this_CHECK_START_TAG_0, grammarAccess.getCheckAccess().getCHECK_START_TAGTerminalRuleCall_0()); 
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getCheckAccess().getCheckAction_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCheckAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); 
	    }
		lv_attributes_2_0=rulePossibleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCheckRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_2_0, 
        		"PossibleExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*(((
(
		lv_splitTag_3_0=RULE_XML_TAG_END
		{
			newLeafNode(lv_splitTag_3_0, grammarAccess.getCheckAccess().getSplitTagXML_TAG_ENDTerminalRuleCall_3_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCheckRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splitTag",
        		true, 
        		"XML_TAG_END");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCheckAccess().getExpressionTopLevelParserRuleCall_3_0_1_0()); 
	    }
		lv_expression_4_0=ruleTopLevel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCheckRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_4_0, 
        		"TopLevel");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_closedTag_5_0=RULE_CHECK_END_TAG
		{
			newLeafNode(lv_closedTag_5_0, grammarAccess.getCheckAccess().getClosedTagCHECK_END_TAGTerminalRuleCall_3_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCheckRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"closedTag",
        		true, 
        		"CHECK_END_TAG");
	    }

)
))
    |this_XML_TAG_SINGLEEND_6=RULE_XML_TAG_SINGLEEND
    { 
    newLeafNode(this_XML_TAG_SINGLEEND_6, grammarAccess.getCheckAccess().getXML_TAG_SINGLEENDTerminalRuleCall_3_1()); 
    }
))
;





// Entry rule entryRuleComment
entryRuleComment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommentRule()); }
	 iv_ruleComment=ruleComment 
	 { $current=$iv_ruleComment.current; } 
	 EOF 
;

// Rule Comment
ruleComment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_COMMENT_START_TAG_0=RULE_COMMENT_START_TAG
    { 
    newLeafNode(this_COMMENT_START_TAG_0, grammarAccess.getCommentAccess().getCOMMENT_START_TAGTerminalRuleCall_0()); 
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getCommentAccess().getCommentAction_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCommentAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); 
	    }
		lv_attributes_2_0=rulePossibleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommentRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_2_0, 
        		"PossibleExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*(((
(
		lv_splitTag_3_0=RULE_XML_TAG_END
		{
			newLeafNode(lv_splitTag_3_0, grammarAccess.getCommentAccess().getSplitTagXML_TAG_ENDTerminalRuleCall_3_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splitTag",
        		true, 
        		"XML_TAG_END");
	    }

)
)(
(
		lv_closedTag_4_0=RULE_COMMENT_END_TAG
		{
			newLeafNode(lv_closedTag_4_0, grammarAccess.getCommentAccess().getClosedTagCOMMENT_END_TAGTerminalRuleCall_3_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"closedTag",
        		true, 
        		"COMMENT_END_TAG");
	    }

)
))
    |this_XML_TAG_SINGLEEND_5=RULE_XML_TAG_SINGLEEND
    { 
    newLeafNode(this_XML_TAG_SINGLEEND_5, grammarAccess.getCommentAccess().getXML_TAG_SINGLEENDTerminalRuleCall_3_1()); 
    }
))
;





// Entry rule entryRuleBreak
entryRuleBreak returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBreakRule()); }
	 iv_ruleBreak=ruleBreak 
	 { $current=$iv_ruleBreak.current; } 
	 EOF 
;

// Rule Break
ruleBreak returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_BREAK_START_TAG_0=RULE_BREAK_START_TAG
    { 
    newLeafNode(this_BREAK_START_TAG_0, grammarAccess.getBreakAccess().getBREAK_START_TAGTerminalRuleCall_0()); 
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getBreakAccess().getBreakAction_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBreakAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); 
	    }
		lv_attributes_2_0=rulePossibleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBreakRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_2_0, 
        		"PossibleExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*(((
(
		lv_splitTag_3_0=RULE_XML_TAG_END
		{
			newLeafNode(lv_splitTag_3_0, grammarAccess.getBreakAccess().getSplitTagXML_TAG_ENDTerminalRuleCall_3_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBreakRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splitTag",
        		true, 
        		"XML_TAG_END");
	    }

)
)(
(
		lv_closedTag_4_0=RULE_BREAK_END_TAG
		{
			newLeafNode(lv_closedTag_4_0, grammarAccess.getBreakAccess().getClosedTagBREAK_END_TAGTerminalRuleCall_3_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBreakRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"closedTag",
        		true, 
        		"BREAK_END_TAG");
	    }

)
))
    |this_XML_TAG_SINGLEEND_5=RULE_XML_TAG_SINGLEEND
    { 
    newLeafNode(this_XML_TAG_SINGLEEND_5, grammarAccess.getBreakAccess().getXML_TAG_SINGLEENDTerminalRuleCall_3_1()); 
    }
))
;





// Entry rule entryRuleInclude
entryRuleInclude returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIncludeRule()); }
	 iv_ruleInclude=ruleInclude 
	 { $current=$iv_ruleInclude.current; } 
	 EOF 
;

// Rule Include
ruleInclude returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_INCLUDE_START_TAG_0=RULE_INCLUDE_START_TAG
    { 
    newLeafNode(this_INCLUDE_START_TAG_0, grammarAccess.getIncludeAccess().getINCLUDE_START_TAGTerminalRuleCall_0()); 
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getIncludeAccess().getMethodAction_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIncludeAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); 
	    }
		lv_attributes_2_0=rulePossibleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncludeRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_2_0, 
        		"PossibleExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*(((
(
		lv_splitTag_3_0=RULE_XML_TAG_END
		{
			newLeafNode(lv_splitTag_3_0, grammarAccess.getIncludeAccess().getSplitTagXML_TAG_ENDTerminalRuleCall_3_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIncludeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splitTag",
        		true, 
        		"XML_TAG_END");
	    }

)
)(
(
		lv_closedTag_4_0=RULE_INCLUDE_END_TAG
		{
			newLeafNode(lv_closedTag_4_0, grammarAccess.getIncludeAccess().getClosedTagINCLUDE_END_TAGTerminalRuleCall_3_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIncludeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"closedTag",
        		true, 
        		"INCLUDE_END_TAG");
	    }

)
))
    |this_XML_TAG_SINGLEEND_5=RULE_XML_TAG_SINGLEEND
    { 
    newLeafNode(this_XML_TAG_SINGLEEND_5, grammarAccess.getIncludeAccess().getXML_TAG_SINGLEENDTerminalRuleCall_3_1()); 
    }
))
;





// Entry rule entryRuleMessage
entryRuleMessage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMessageRule()); }
	 iv_ruleMessage=ruleMessage 
	 { $current=$iv_ruleMessage.current; } 
	 EOF 
;

// Rule Message
ruleMessage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_MESSAGE_START_TAG_0=RULE_MESSAGE_START_TAG
    { 
    newLeafNode(this_MESSAGE_START_TAG_0, grammarAccess.getMessageAccess().getMESSAGE_START_TAGTerminalRuleCall_0()); 
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getMessageAccess().getMessageAction_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); 
	    }
		lv_attributes_2_0=rulePossibleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_2_0, 
        		"PossibleExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*(((
(
		lv_splitTag_3_0=RULE_XML_TAG_END
		{
			newLeafNode(lv_splitTag_3_0, grammarAccess.getMessageAccess().getSplitTagXML_TAG_ENDTerminalRuleCall_3_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMessageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splitTag",
        		true, 
        		"XML_TAG_END");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getChildrenMessageParserRuleCall_3_0_1_0_0()); 
	    }
		lv_children_4_0=ruleMessage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_4_0, 
        		"Message");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getChildrenPropertyParserRuleCall_3_0_1_1_0()); 
	    }
		lv_children_5_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_5_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getChildrenParamParserRuleCall_3_0_1_2_0()); 
	    }
		lv_children_6_0=ruleParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_6_0, 
        		"Param");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getChildrenMapParserRuleCall_3_0_1_3_0()); 
	    }
		lv_children_7_0=ruleMap		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_7_0, 
        		"Map");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getChildrenMapMethodParserRuleCall_3_0_1_4_0()); 
	    }
		lv_children_8_0=ruleMapMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_8_0, 
        		"MapMethod");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getChildrenDebugTagParserRuleCall_3_0_1_5_0()); 
	    }
		lv_children_9_0=ruleDebugTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_9_0, 
        		"DebugTag");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getChildrenFieldParserRuleCall_3_0_1_6_0()); 
	    }
		lv_children_10_0=ruleField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_10_0, 
        		"Field");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getChildrenCommentParserRuleCall_3_0_1_7_0()); 
	    }
		lv_children_11_0=ruleComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_11_0, 
        		"Comment");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getChildrenBreakParserRuleCall_3_0_1_8_0()); 
	    }
		lv_children_12_0=ruleBreak		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_12_0, 
        		"Break");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
(
		lv_closedTag_13_0=RULE_MESSAGE_END_TAG
		{
			newLeafNode(lv_closedTag_13_0, grammarAccess.getMessageAccess().getClosedTagMESSAGE_END_TAGTerminalRuleCall_3_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMessageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"closedTag",
        		true, 
        		"MESSAGE_END_TAG");
	    }

)
))
    |this_XML_TAG_SINGLEEND_14=RULE_XML_TAG_SINGLEEND
    { 
    newLeafNode(this_XML_TAG_SINGLEEND_14, grammarAccess.getMessageAccess().getXML_TAG_SINGLEENDTerminalRuleCall_3_1()); 
    }
))
;





// Entry rule entryRuleMap
entryRuleMap returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMapRule()); }
	 iv_ruleMap=ruleMap 
	 { $current=$iv_ruleMap.current; } 
	 EOF 
;

// Rule Map
ruleMap returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_MAPSTARTKEYWORD_0=RULE_MAPSTARTKEYWORD
    { 
    newLeafNode(this_MAPSTARTKEYWORD_0, grammarAccess.getMapAccess().getMAPSTARTKEYWORDTerminalRuleCall_0()); 
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getMapAccess().getMapAction_1(),
            $current);
    }
)((this_DOT_2=RULE_DOT
    { 
    newLeafNode(this_DOT_2, grammarAccess.getMapAccess().getDOTTerminalRuleCall_2_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMapAccess().getMapNameMapIdParserRuleCall_2_0_1_0()); 
	    }
		lv_mapName_3_0=ruleMapId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapRule());
	        }
       		set(
       			$current, 
       			"mapName",
        		lv_mapName_3_0, 
        		"MapId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMapAccess().getAttributesPossibleExpressionParserRuleCall_2_0_2_0()); 
	    }
		lv_attributes_4_0=rulePossibleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_4_0, 
        		"PossibleExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapAccess().getAttributesPossibleExpressionParserRuleCall_2_1_0()); 
	    }
		lv_attributes_5_0=rulePossibleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_5_0, 
        		"PossibleExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*)(this_XML_TAG_SINGLEEND_6=RULE_XML_TAG_SINGLEEND
    { 
    newLeafNode(this_XML_TAG_SINGLEEND_6, grammarAccess.getMapAccess().getXML_TAG_SINGLEENDTerminalRuleCall_3_0()); 
    }

    |((
(
		lv_splitTag_7_0=RULE_XML_TAG_END
		{
			newLeafNode(lv_splitTag_7_0, grammarAccess.getMapAccess().getSplitTagXML_TAG_ENDTerminalRuleCall_3_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splitTag",
        		true, 
        		"XML_TAG_END");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getMapAccess().getChildrenMessageParserRuleCall_3_1_1_0_0()); 
	    }
		lv_children_8_0=ruleMessage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_8_0, 
        		"Message");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapAccess().getChildrenPropertyParserRuleCall_3_1_1_1_0()); 
	    }
		lv_children_9_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_9_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapAccess().getChildrenParamParserRuleCall_3_1_1_2_0()); 
	    }
		lv_children_10_0=ruleParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_10_0, 
        		"Param");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapAccess().getChildrenMapParserRuleCall_3_1_1_3_0()); 
	    }
		lv_children_11_0=ruleMap		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_11_0, 
        		"Map");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapAccess().getChildrenMapMethodParserRuleCall_3_1_1_4_0()); 
	    }
		lv_children_12_0=ruleMapMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_12_0, 
        		"MapMethod");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapAccess().getChildrenDebugTagParserRuleCall_3_1_1_5_0()); 
	    }
		lv_children_13_0=ruleDebugTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_13_0, 
        		"DebugTag");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapAccess().getChildrenFieldParserRuleCall_3_1_1_6_0()); 
	    }
		lv_children_14_0=ruleField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_14_0, 
        		"Field");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapAccess().getChildrenCommentParserRuleCall_3_1_1_7_0()); 
	    }
		lv_children_15_0=ruleComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_15_0, 
        		"Comment");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapAccess().getChildrenBreakParserRuleCall_3_1_1_8_0()); 
	    }
		lv_children_16_0=ruleBreak		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_16_0, 
        		"Break");
	        afterParserOrEnumRuleCall();
	    }

)
))*(this_MAPENDKEYWORD_17=RULE_MAPENDKEYWORD
    { 
    newLeafNode(this_MAPENDKEYWORD_17, grammarAccess.getMapAccess().getMAPENDKEYWORDTerminalRuleCall_3_1_2_0()); 
    }
(this_DOT_18=RULE_DOT
    { 
    newLeafNode(this_DOT_18, grammarAccess.getMapAccess().getDOTTerminalRuleCall_3_1_2_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMapAccess().getMapClosingNameMapIdParserRuleCall_3_1_2_1_1_0()); 
	    }
		lv_mapClosingName_19_0=ruleMapId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapRule());
	        }
       		set(
       			$current, 
       			"mapClosingName",
        		lv_mapClosingName_19_0, 
        		"MapId");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		lv_closedTag_20_0=RULE_XML_TAG_END
		{
			newLeafNode(lv_closedTag_20_0, grammarAccess.getMapAccess().getClosedTagXML_TAG_ENDTerminalRuleCall_3_1_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"closedTag",
        		true, 
        		"XML_TAG_END");
	    }

)
)))))
;





// Entry rule entryRuleMapId
entryRuleMapId returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMapIdRule()); } 
	 iv_ruleMapId=ruleMapId 
	 { $current=$iv_ruleMapId.current.getText(); }  
	 EOF 
;

// Rule MapId
ruleMapId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getMapIdAccess().getIDTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleRequired
entryRuleRequired returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequiredRule()); }
	 iv_ruleRequired=ruleRequired 
	 { $current=$iv_ruleRequired.current; } 
	 EOF 
;

// Rule Required
ruleRequired returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_REQUIRED_START_TAG_0=RULE_REQUIRED_START_TAG
    { 
    newLeafNode(this_REQUIRED_START_TAG_0, grammarAccess.getRequiredAccess().getREQUIRED_START_TAGTerminalRuleCall_0()); 
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getRequiredAccess().getRequiredAction_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRequiredAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); 
	    }
		lv_attributes_2_0=rulePossibleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequiredRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_2_0, 
        		"PossibleExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*(this_XML_TAG_SINGLEEND_3=RULE_XML_TAG_SINGLEEND
    { 
    newLeafNode(this_XML_TAG_SINGLEEND_3, grammarAccess.getRequiredAccess().getXML_TAG_SINGLEENDTerminalRuleCall_3_0()); 
    }

    |((
(
		lv_splitTag_4_0=RULE_XML_TAG_END
		{
			newLeafNode(lv_splitTag_4_0, grammarAccess.getRequiredAccess().getSplitTagXML_TAG_ENDTerminalRuleCall_3_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequiredRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splitTag",
        		true, 
        		"XML_TAG_END");
	    }

)
)(
(
		lv_closedTag_5_0=RULE_REQUIRED_END_TAG
		{
			newLeafNode(lv_closedTag_5_0, grammarAccess.getRequiredAccess().getClosedTagREQUIRED_END_TAGTerminalRuleCall_3_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequiredRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"closedTag",
        		true, 
        		"REQUIRED_END_TAG");
	    }

)
))))
;





// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	 iv_ruleProperty=ruleProperty 
	 { $current=$iv_ruleProperty.current; } 
	 EOF 
;

// Rule Property
ruleProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_PROPERTY_START_TAG_0=RULE_PROPERTY_START_TAG
    { 
    newLeafNode(this_PROPERTY_START_TAG_0, grammarAccess.getPropertyAccess().getPROPERTY_START_TAGTerminalRuleCall_0()); 
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getPropertyAccess().getPropertyAction_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); 
	    }
		lv_attributes_2_0=rulePossibleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_2_0, 
        		"PossibleExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*(this_XML_TAG_SINGLEEND_3=RULE_XML_TAG_SINGLEEND
    { 
    newLeafNode(this_XML_TAG_SINGLEEND_3, grammarAccess.getPropertyAccess().getXML_TAG_SINGLEENDTerminalRuleCall_3_0()); 
    }

    |((
(
		lv_splitTag_4_0=RULE_XML_TAG_END
		{
			newLeafNode(lv_splitTag_4_0, grammarAccess.getPropertyAccess().getSplitTagXML_TAG_ENDTerminalRuleCall_3_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splitTag",
        		true, 
        		"XML_TAG_END");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getChildrenExpressionOrOptionParserRuleCall_3_1_1_0_0()); 
	    }
		lv_children_5_0=ruleExpressionOrOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_5_0, 
        		"ExpressionOrOption");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getChildrenMapParserRuleCall_3_1_1_1_0()); 
	    }
		lv_children_6_0=ruleMap		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_6_0, 
        		"Map");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
(
		lv_closedTag_7_0=RULE_PROPERTY_END_TAG
		{
			newLeafNode(lv_closedTag_7_0, grammarAccess.getPropertyAccess().getClosedTagPROPERTY_END_TAGTerminalRuleCall_3_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"closedTag",
        		true, 
        		"PROPERTY_END_TAG");
	    }

)
))))
;





// Entry rule entryRuleParam
entryRuleParam returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParamRule()); }
	 iv_ruleParam=ruleParam 
	 { $current=$iv_ruleParam.current; } 
	 EOF 
;

// Rule Param
ruleParam returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_PARAM_START_TAG_0=RULE_PARAM_START_TAG
    { 
    newLeafNode(this_PARAM_START_TAG_0, grammarAccess.getParamAccess().getPARAM_START_TAGTerminalRuleCall_0()); 
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getParamAccess().getParamAction_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParamAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); 
	    }
		lv_attributes_2_0=rulePossibleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParamRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_2_0, 
        		"PossibleExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*(this_XML_TAG_SINGLEEND_3=RULE_XML_TAG_SINGLEEND
    { 
    newLeafNode(this_XML_TAG_SINGLEEND_3, grammarAccess.getParamAccess().getXML_TAG_SINGLEENDTerminalRuleCall_3_0()); 
    }

    |((
(
		lv_splitTag_4_0=RULE_XML_TAG_END
		{
			newLeafNode(lv_splitTag_4_0, grammarAccess.getParamAccess().getSplitTagXML_TAG_ENDTerminalRuleCall_3_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParamRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splitTag",
        		true, 
        		"XML_TAG_END");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getParamAccess().getChildrenExpressionOrOptionParserRuleCall_3_1_1_0_0()); 
	    }
		lv_children_5_0=ruleExpressionOrOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParamRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_5_0, 
        		"ExpressionOrOption");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getParamAccess().getChildrenMapParserRuleCall_3_1_1_1_0()); 
	    }
		lv_children_6_0=ruleMap		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParamRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_6_0, 
        		"Map");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
(
		lv_closedTag_7_0=RULE_PARAM_END_TAG
		{
			newLeafNode(lv_closedTag_7_0, grammarAccess.getParamAccess().getClosedTagPARAM_END_TAGTerminalRuleCall_3_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParamRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"closedTag",
        		true, 
        		"PARAM_END_TAG");
	    }

)
))))
;





// Entry rule entryRuleMapMethod
entryRuleMapMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMapMethodRule()); }
	 iv_ruleMapMethod=ruleMapMethod 
	 { $current=$iv_ruleMapMethod.current; } 
	 EOF 
;

// Rule MapMethod
ruleMapMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_MAP_METHOD_STARTTAG_START_0=RULE_MAP_METHOD_STARTTAG_START
    { 
    newLeafNode(this_MAP_METHOD_STARTTAG_START_0, grammarAccess.getMapMethodAccess().getMAP_METHOD_STARTTAG_STARTTerminalRuleCall_0()); 
    }
(
(
		lv_mapName_1_0=RULE_ID
		{
			newLeafNode(lv_mapName_1_0, grammarAccess.getMapMethodAccess().getMapNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mapName",
        		lv_mapName_1_0, 
        		"ID");
	    }

)
)this_DOT_2=RULE_DOT
    { 
    newLeafNode(this_DOT_2, grammarAccess.getMapMethodAccess().getDOTTerminalRuleCall_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMapMethodAccess().getMethodNameAttributeNameParserRuleCall_3_0()); 
	    }
		lv_methodName_3_0=ruleAttributeName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapMethodRule());
	        }
       		set(
       			$current, 
       			"methodName",
        		lv_methodName_3_0, 
        		"AttributeName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMapMethodAccess().getAttributesPossibleExpressionParserRuleCall_4_0()); 
	    }
		lv_attributes_4_0=rulePossibleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapMethodRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_4_0, 
        		"PossibleExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*(this_XML_TAG_SINGLEEND_5=RULE_XML_TAG_SINGLEEND
    { 
    newLeafNode(this_XML_TAG_SINGLEEND_5, grammarAccess.getMapMethodAccess().getXML_TAG_SINGLEENDTerminalRuleCall_5_0()); 
    }

    |((
(
		lv_splitTag_6_0=RULE_XML_TAG_END
		{
			newLeafNode(lv_splitTag_6_0, grammarAccess.getMapMethodAccess().getSplitTagXML_TAG_ENDTerminalRuleCall_5_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splitTag",
        		true, 
        		"XML_TAG_END");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getMapMethodAccess().getChildrenExpressionOrOptionParserRuleCall_5_1_1_0_0()); 
	    }
		lv_children_7_0=ruleExpressionOrOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapMethodRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_7_0, 
        		"ExpressionOrOption");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapMethodAccess().getChildrenMessageParserRuleCall_5_1_1_1_0()); 
	    }
		lv_children_8_0=ruleMessage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapMethodRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_8_0, 
        		"Message");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapMethodAccess().getChildrenPropertyParserRuleCall_5_1_1_2_0()); 
	    }
		lv_children_9_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapMethodRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_9_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapMethodAccess().getChildrenParamParserRuleCall_5_1_1_3_0()); 
	    }
		lv_children_10_0=ruleParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapMethodRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_10_0, 
        		"Param");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapMethodAccess().getChildrenMapParserRuleCall_5_1_1_4_0()); 
	    }
		lv_children_11_0=ruleMap		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapMethodRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_11_0, 
        		"Map");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapMethodAccess().getChildrenMapMethodParserRuleCall_5_1_1_5_0()); 
	    }
		lv_children_12_0=ruleMapMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapMethodRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_12_0, 
        		"MapMethod");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapMethodAccess().getChildrenDebugTagParserRuleCall_5_1_1_6_0()); 
	    }
		lv_children_13_0=ruleDebugTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapMethodRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_13_0, 
        		"DebugTag");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapMethodAccess().getChildrenFieldParserRuleCall_5_1_1_7_0()); 
	    }
		lv_children_14_0=ruleField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapMethodRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_14_0, 
        		"Field");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapMethodAccess().getChildrenCommentParserRuleCall_5_1_1_8_0()); 
	    }
		lv_children_15_0=ruleComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapMethodRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_15_0, 
        		"Comment");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMapMethodAccess().getChildrenBreakParserRuleCall_5_1_1_9_0()); 
	    }
		lv_children_16_0=ruleBreak		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapMethodRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_16_0, 
        		"Break");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
(
		lv_closedTag_17_0=RULE_MAP_METHOD_ENDTAG_START
		{
			newLeafNode(lv_closedTag_17_0, grammarAccess.getMapMethodAccess().getClosedTagMAP_METHOD_ENDTAG_STARTTerminalRuleCall_5_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"closedTag",
        		true, 
        		"MAP_METHOD_ENDTAG_START");
	    }

)
)(
(
		lv_methodClosingName_18_0=RULE_ID
		{
			newLeafNode(lv_methodClosingName_18_0, grammarAccess.getMapMethodAccess().getMethodClosingNameIDTerminalRuleCall_5_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"methodClosingName",
        		lv_methodClosingName_18_0, 
        		"ID");
	    }

)
)this_DOT_19=RULE_DOT
    { 
    newLeafNode(this_DOT_19, grammarAccess.getMapMethodAccess().getDOTTerminalRuleCall_5_1_4()); 
    }
(
(
		lv_methodClosingMethod_20_0=RULE_ID
		{
			newLeafNode(lv_methodClosingMethod_20_0, grammarAccess.getMapMethodAccess().getMethodClosingMethodIDTerminalRuleCall_5_1_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"methodClosingMethod",
        		lv_methodClosingMethod_20_0, 
        		"ID");
	    }

)
)this_XML_TAG_END_21=RULE_XML_TAG_END
    { 
    newLeafNode(this_XML_TAG_END_21, grammarAccess.getMapMethodAccess().getXML_TAG_ENDTerminalRuleCall_5_1_6()); 
    }
)))
;





// Entry rule entryRuleField
entryRuleField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	 iv_ruleField=ruleField 
	 { $current=$iv_ruleField.current; } 
	 EOF 
;

// Rule Field
ruleField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_FIELD_START_TAG_0=RULE_FIELD_START_TAG
    { 
    newLeafNode(this_FIELD_START_TAG_0, grammarAccess.getFieldAccess().getFIELD_START_TAGTerminalRuleCall_0()); 
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getFieldAccess().getFieldAction_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); 
	    }
		lv_attributes_2_0=rulePossibleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_2_0, 
        		"PossibleExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*(this_XML_TAG_SINGLEEND_3=RULE_XML_TAG_SINGLEEND
    { 
    newLeafNode(this_XML_TAG_SINGLEEND_3, grammarAccess.getFieldAccess().getXML_TAG_SINGLEENDTerminalRuleCall_3_0()); 
    }

    |(((
(
		lv_splitTag_4_0=RULE_XML_TAG_END
		{
			newLeafNode(lv_splitTag_4_0, grammarAccess.getFieldAccess().getSplitTagXML_TAG_ENDTerminalRuleCall_3_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splitTag",
        		true, 
        		"XML_TAG_END");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAccess().getChildrenExpressionOrOptionParserRuleCall_3_1_0_1_0_0()); 
	    }
		lv_children_5_0=ruleExpressionOrOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_5_0, 
        		"ExpressionOrOption");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAccess().getChildrenParamParserRuleCall_3_1_0_1_1_0()); 
	    }
		lv_children_6_0=ruleParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_6_0, 
        		"Param");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAccess().getChildrenMapParserRuleCall_3_1_0_1_2_0()); 
	    }
		lv_children_7_0=ruleMap		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_7_0, 
        		"Map");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAccess().getChildrenMapMethodParserRuleCall_3_1_0_1_3_0()); 
	    }
		lv_children_8_0=ruleMapMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_8_0, 
        		"MapMethod");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAccess().getChildrenDebugTagParserRuleCall_3_1_0_1_4_0()); 
	    }
		lv_children_9_0=ruleDebugTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_9_0, 
        		"DebugTag");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAccess().getChildrenCommentParserRuleCall_3_1_0_1_5_0()); 
	    }
		lv_children_10_0=ruleComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_10_0, 
        		"Comment");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAccess().getChildrenBreakParserRuleCall_3_1_0_1_6_0()); 
	    }
		lv_children_11_0=ruleBreak		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_11_0, 
        		"Break");
	        afterParserOrEnumRuleCall();
	    }

)
))*)(
(
		lv_closedTag_12_0=RULE_FIELD_END_TAG
		{
			newLeafNode(lv_closedTag_12_0, grammarAccess.getFieldAccess().getClosedTagFIELD_END_TAGTerminalRuleCall_3_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"closedTag",
        		true, 
        		"FIELD_END_TAG");
	    }

)
))))
;





// Entry rule entryRuleDebugTag
entryRuleDebugTag returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDebugTagRule()); }
	 iv_ruleDebugTag=ruleDebugTag 
	 { $current=$iv_ruleDebugTag.current; } 
	 EOF 
;

// Rule DebugTag
ruleDebugTag returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_DEBUG_START_TAG_0=RULE_DEBUG_START_TAG
    { 
    newLeafNode(this_DEBUG_START_TAG_0, grammarAccess.getDebugTagAccess().getDEBUG_START_TAGTerminalRuleCall_0()); 
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getDebugTagAccess().getDebugTagAction_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDebugTagAccess().getAttributesPossibleExpressionParserRuleCall_2_0()); 
	    }
		lv_attributes_2_0=rulePossibleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDebugTagRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_2_0, 
        		"PossibleExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*(this_XML_TAG_SINGLEEND_3=RULE_XML_TAG_SINGLEEND
    { 
    newLeafNode(this_XML_TAG_SINGLEEND_3, grammarAccess.getDebugTagAccess().getXML_TAG_SINGLEENDTerminalRuleCall_3_0()); 
    }

    |((
(
		lv_splitTag_4_0=RULE_XML_TAG_END
		{
			newLeafNode(lv_splitTag_4_0, grammarAccess.getDebugTagAccess().getSplitTagXML_TAG_ENDTerminalRuleCall_3_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDebugTagRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splitTag",
        		true, 
        		"XML_TAG_END");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDebugTagAccess().getExpressionTopLevelParserRuleCall_3_1_1_0()); 
	    }
		lv_expression_5_0=ruleTopLevel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDebugTagRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"TopLevel");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_closedTag_6_0=RULE_DEBUG_END_TAG
		{
			newLeafNode(lv_closedTag_6_0, grammarAccess.getDebugTagAccess().getClosedTagDEBUG_END_TAGTerminalRuleCall_3_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDebugTagRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"closedTag",
        		true, 
        		"DEBUG_END_TAG");
	    }

)
))))
;





// Entry rule entryRuleExpressionOrOption
entryRuleExpressionOrOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionOrOptionRule()); }
	 iv_ruleExpressionOrOption=ruleExpressionOrOption 
	 { $current=$iv_ruleExpressionOrOption.current; } 
	 EOF 
;

// Rule ExpressionOrOption
ruleExpressionOrOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_EXPRESSION_START_TAG_0=RULE_EXPRESSION_START_TAG
    { 
    newLeafNode(this_EXPRESSION_START_TAG_0, grammarAccess.getExpressionOrOptionAccess().getEXPRESSION_START_TAGTerminalRuleCall_0_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getExpressionOrOptionAccess().getExpressionTagParserRuleCall_0_1()); 
    }
    this_ExpressionTag_1=ruleExpressionTag
    { 
        $current = $this_ExpressionTag_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(this_OPTION_START_TAG_2=RULE_OPTION_START_TAG
    { 
    newLeafNode(this_OPTION_START_TAG_2, grammarAccess.getExpressionOrOptionAccess().getOPTION_START_TAGTerminalRuleCall_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getExpressionOrOptionAccess().getOptionParserRuleCall_1_1()); 
    }
    this_Option_3=ruleOption
    { 
        $current = $this_Option_3.current; 
        afterParserOrEnumRuleCall();
    }
))
;





// Entry rule entryRuleExpressionTag
entryRuleExpressionTag returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionTagRule()); }
	 iv_ruleExpressionTag=ruleExpressionTag 
	 { $current=$iv_ruleExpressionTag.current; } 
	 EOF 
;

// Rule ExpressionTag
ruleExpressionTag returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpressionTagAccess().getExpressionTagAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionTagAccess().getAttributesPossibleExpressionParserRuleCall_1_0()); 
	    }
		lv_attributes_1_0=rulePossibleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionTagRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_1_0, 
        		"PossibleExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*(this_XML_TAG_SINGLEEND_2=RULE_XML_TAG_SINGLEEND
    { 
    newLeafNode(this_XML_TAG_SINGLEEND_2, grammarAccess.getExpressionTagAccess().getXML_TAG_SINGLEENDTerminalRuleCall_2_0()); 
    }

    |((
(
		lv_splitTag_3_0=RULE_XML_TAG_END
		{
			newLeafNode(lv_splitTag_3_0, grammarAccess.getExpressionTagAccess().getSplitTagXML_TAG_ENDTerminalRuleCall_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionTagRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splitTag",
        		true, 
        		"XML_TAG_END");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionTagAccess().getExpressionTopLevelParserRuleCall_2_1_1_0()); 
	    }
		lv_expression_4_0=ruleTopLevel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionTagRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_4_0, 
        		"TopLevel");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_closedTag_5_0=RULE_EXPRESSION_END_TAG
		{
			newLeafNode(lv_closedTag_5_0, grammarAccess.getExpressionTagAccess().getClosedTagEXPRESSION_END_TAGTerminalRuleCall_2_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionTagRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"closedTag",
        		true, 
        		"EXPRESSION_END_TAG");
	    }

)
))))
;





// Entry rule entryRuleOption
entryRuleOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOptionRule()); }
	 iv_ruleOption=ruleOption 
	 { $current=$iv_ruleOption.current; } 
	 EOF 
;

// Rule Option
ruleOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOptionAccess().getOptionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOptionAccess().getAttributesPossibleExpressionParserRuleCall_1_0()); 
	    }
		lv_attributes_1_0=rulePossibleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_1_0, 
        		"PossibleExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*(this_XML_TAG_SINGLEEND_2=RULE_XML_TAG_SINGLEEND
    { 
    newLeafNode(this_XML_TAG_SINGLEEND_2, grammarAccess.getOptionAccess().getXML_TAG_SINGLEENDTerminalRuleCall_2_0()); 
    }

    |((
(
		lv_splitTag_3_0=RULE_XML_TAG_END
		{
			newLeafNode(lv_splitTag_3_0, grammarAccess.getOptionAccess().getSplitTagXML_TAG_ENDTerminalRuleCall_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splitTag",
        		true, 
        		"XML_TAG_END");
	    }

)
)(
(
		lv_closedTag_4_0=RULE_OPTION_END_TAG
		{
			newLeafNode(lv_closedTag_4_0, grammarAccess.getOptionAccess().getClosedTagOPTION_END_TAGTerminalRuleCall_2_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"closedTag",
        		true, 
        		"OPTION_END_TAG");
	    }

)
))))
;





// Entry rule entryRuleTopLevel
entryRuleTopLevel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTopLevelRule()); }
	 iv_ruleTopLevel=ruleTopLevel 
	 { $current=$iv_ruleTopLevel.current; } 
	 EOF 
;

// Rule TopLevel
ruleTopLevel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getTopLevelAccess().getToplevelExpressionOrExpressionParserRuleCall_0()); 
	    }
		lv_toplevelExpression_0_0=ruleOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopLevelRule());
	        }
       		set(
       			$current, 
       			"toplevelExpression",
        		lv_toplevelExpression_0_0, 
        		"OrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRulePathElement
entryRulePathElement returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPathElementRule()); } 
	 iv_rulePathElement=rulePathElement 
	 { $current=$iv_rulePathElement.current.getText(); }  
	 EOF 
;

// Rule PathElement
rulePathElement returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getPathElementAccess().getIDTerminalRuleCall_0()); 
    }

    |
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPathElementAccess().getFullStopKeyword_1()); 
    }

    |    this_PARENT_2=RULE_PARENT    {
		$current.merge(this_PARENT_2);
    }

    { 
    newLeafNode(this_PARENT_2, grammarAccess.getPathElementAccess().getPARENTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleTmlExpression
entryRuleTmlExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTmlExpressionRule()); }
	 iv_ruleTmlExpression=ruleTmlExpression 
	 { $current=$iv_ruleTmlExpression.current; } 
	 EOF 
;

// Rule TmlExpression
ruleTmlExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_SQBRACKET_OPEN_0=RULE_SQBRACKET_OPEN
    { 
    newLeafNode(this_SQBRACKET_OPEN_0, grammarAccess.getTmlExpressionAccess().getSQBRACKET_OPENTerminalRuleCall_0()); 
    }
(
(
		lv_absolute_1_0=RULE_TML_SEPARATOR
		{
			newLeafNode(lv_absolute_1_0, grammarAccess.getTmlExpressionAccess().getAbsoluteTML_SEPARATORTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTmlExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"absolute",
        		true, 
        		"TML_SEPARATOR");
	    }

)
)?(
(
		lv_param_2_0=RULE_AT
		{
			newLeafNode(lv_param_2_0, grammarAccess.getTmlExpressionAccess().getParamATTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTmlExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"param",
        		true, 
        		"AT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getTmlExpressionAccess().getElementsPathElementParserRuleCall_3_0()); 
	    }
		lv_elements_3_0=rulePathElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTmlExpressionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"PathElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_TML_SEPARATOR_4=RULE_TML_SEPARATOR
    { 
    newLeafNode(this_TML_SEPARATOR_4, grammarAccess.getTmlExpressionAccess().getTML_SEPARATORTerminalRuleCall_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTmlExpressionAccess().getElementsPathElementParserRuleCall_4_1_0()); 
	    }
		lv_elements_5_0=rulePathElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTmlExpressionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_5_0, 
        		"PathElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_SQBRACKET_CLOSE_6=RULE_SQBRACKET_CLOSE
    { 
    newLeafNode(this_SQBRACKET_CLOSE_6, grammarAccess.getTmlExpressionAccess().getSQBRACKET_CLOSETerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuleExistsTmlExpression
entryRuleExistsTmlExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExistsTmlExpressionRule()); }
	 iv_ruleExistsTmlExpression=ruleExistsTmlExpression 
	 { $current=$iv_ruleExistsTmlExpression.current; } 
	 EOF 
;

// Rule ExistsTmlExpression
ruleExistsTmlExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_TML_EXISTS_0=RULE_TML_EXISTS
    { 
    newLeafNode(this_TML_EXISTS_0, grammarAccess.getExistsTmlExpressionAccess().getTML_EXISTSTerminalRuleCall_0()); 
    }
this_SQBRACKET_OPEN_1=RULE_SQBRACKET_OPEN
    { 
    newLeafNode(this_SQBRACKET_OPEN_1, grammarAccess.getExistsTmlExpressionAccess().getSQBRACKET_OPENTerminalRuleCall_1()); 
    }
(
(
		lv_absolute_2_0=RULE_TML_SEPARATOR
		{
			newLeafNode(lv_absolute_2_0, grammarAccess.getExistsTmlExpressionAccess().getAbsoluteTML_SEPARATORTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExistsTmlExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"absolute",
        		true, 
        		"TML_SEPARATOR");
	    }

)
)?(
(
		lv_param_3_0=RULE_AT
		{
			newLeafNode(lv_param_3_0, grammarAccess.getExistsTmlExpressionAccess().getParamATTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExistsTmlExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"param",
        		true, 
        		"AT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getExistsTmlExpressionAccess().getElementsPathElementParserRuleCall_4_0()); 
	    }
		lv_elements_4_0=rulePathElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExistsTmlExpressionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"PathElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_TML_SEPARATOR_5=RULE_TML_SEPARATOR
    { 
    newLeafNode(this_TML_SEPARATOR_5, grammarAccess.getExistsTmlExpressionAccess().getTML_SEPARATORTerminalRuleCall_5_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExistsTmlExpressionAccess().getElementsPathElementParserRuleCall_5_1_0()); 
	    }
		lv_elements_6_0=rulePathElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExistsTmlExpressionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_6_0, 
        		"PathElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_SQBRACKET_CLOSE_7=RULE_SQBRACKET_CLOSE
    { 
    newLeafNode(this_SQBRACKET_CLOSE_7, grammarAccess.getExistsTmlExpressionAccess().getSQBRACKET_CLOSETerminalRuleCall_6()); 
    }
)
;





// Entry rule entryRuleMapReferenceParams
entryRuleMapReferenceParams returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMapReferenceParamsRule()); }
	 iv_ruleMapReferenceParams=ruleMapReferenceParams 
	 { $current=$iv_ruleMapReferenceParams.current; } 
	 EOF 
;

// Rule MapReferenceParams
ruleMapReferenceParams returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMapReferenceParamsAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMapReferenceParamsAccess().getGetterParamsLiteralParserRuleCall_1_0()); 
	    }
		lv_getterParams_1_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapReferenceParamsRule());
	        }
       		add(
       			$current, 
       			"getterParams",
        		lv_getterParams_1_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMapReferenceParamsAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMapReferenceParamsAccess().getGetterParamsLiteralParserRuleCall_2_1_0()); 
	    }
		lv_getterParams_3_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapReferenceParamsRule());
	        }
       		add(
       			$current, 
       			"getterParams",
        		lv_getterParams_3_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMapReferenceParamsAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleMapGetReference
entryRuleMapGetReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMapGetReferenceRule()); }
	 iv_ruleMapGetReference=ruleMapGetReference 
	 { $current=$iv_ruleMapGetReference.current; } 
	 EOF 
;

// Rule MapGetReference
ruleMapGetReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_operations_0_0=RULE_DOLLAR
		{
			newLeafNode(lv_operations_0_0, grammarAccess.getMapGetReferenceAccess().getOperationsDOLLARTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapGetReferenceRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"operations",
        		lv_operations_0_0, 
        		"DOLLAR");
	    }

)
)((
(
		lv_elements_1_0=RULE_PARENT
		{
			newLeafNode(lv_elements_1_0, grammarAccess.getMapGetReferenceAccess().getElementsPARENTTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapGetReferenceRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"elements",
        		lv_elements_1_0, 
        		"PARENT");
	    }

)
)this_TML_SEPARATOR_2=RULE_TML_SEPARATOR
    { 
    newLeafNode(this_TML_SEPARATOR_2, grammarAccess.getMapGetReferenceAccess().getTML_SEPARATORTerminalRuleCall_1_1()); 
    }
)*(
(
		lv_elements_3_0=RULE_ID
		{
			newLeafNode(lv_elements_3_0, grammarAccess.getMapGetReferenceAccess().getElementsIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapGetReferenceRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMapGetReferenceAccess().getReferenceParamsMapReferenceParamsParserRuleCall_3_0()); 
	    }
		lv_referenceParams_4_0=ruleMapReferenceParams		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapGetReferenceRule());
	        }
       		set(
       			$current, 
       			"referenceParams",
        		lv_referenceParams_4_0, 
        		"MapReferenceParams");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleOrExpression
entryRuleOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrExpressionRule()); }
	 iv_ruleOrExpression=ruleOrExpression 
	 { $current=$iv_ruleOrExpression.current; } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOrExpressionAccess().getParametersAndExpressionParserRuleCall_0_0()); 
	    }
		lv_parameters_0_0=ruleAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_0_0, 
        		"AndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_operations_1_0=	'OR' 
    {
        newLeafNode(lv_operations_1_0, grammarAccess.getOrExpressionAccess().getOperationsORKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrExpressionRule());
	        }
       		addWithLastConsumed($current, "operations", lv_operations_1_0, "OR");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOrExpressionAccess().getParametersAndExpressionParserRuleCall_1_1_0()); 
	    }
		lv_parameters_2_0=ruleAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"AndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	 iv_ruleAndExpression=ruleAndExpression 
	 { $current=$iv_ruleAndExpression.current; } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAndExpressionAccess().getParametersEqualityExpressionParserRuleCall_0_0()); 
	    }
		lv_parameters_0_0=ruleEqualityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_0_0, 
        		"EqualityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_operations_1_0=	'AND' 
    {
        newLeafNode(lv_operations_1_0, grammarAccess.getAndExpressionAccess().getOperationsANDKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAndExpressionRule());
	        }
       		addWithLastConsumed($current, "operations", lv_operations_1_0, "AND");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAndExpressionAccess().getParametersEqualityExpressionParserRuleCall_1_1_0()); 
	    }
		lv_parameters_2_0=ruleEqualityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"EqualityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEqualityExpressionRule()); }
	 iv_ruleEqualityExpression=ruleEqualityExpression 
	 { $current=$iv_ruleEqualityExpression.current; } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getParametersRelationalExpressionParserRuleCall_0_0()); 
	    }
		lv_parameters_0_0=ruleRelationalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_0_0, 
        		"RelationalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
		lv_operations_1_0=	'==' 
    {
        newLeafNode(lv_operations_1_0, grammarAccess.getEqualityExpressionAccess().getOperationsEqualsSignEqualsSignKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEqualityExpressionRule());
	        }
       		addWithLastConsumed($current, "operations", lv_operations_1_0, "==");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getParametersRelationalExpressionParserRuleCall_1_0_1_0()); 
	    }
		lv_parameters_2_0=ruleRelationalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"RelationalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_operations_3_0=	'!=' 
    {
        newLeafNode(lv_operations_3_0, grammarAccess.getEqualityExpressionAccess().getOperationsExclamationMarkEqualsSignKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEqualityExpressionRule());
	        }
       		addWithLastConsumed($current, "operations", lv_operations_3_0, "!=");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getParametersRelationalExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_parameters_4_0=ruleRelationalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_4_0, 
        		"RelationalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;





// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationalExpressionRule()); }
	 iv_ruleRelationalExpression=ruleRelationalExpression 
	 { $current=$iv_ruleRelationalExpression.current; } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRelationalExpressionAccess().getExpressionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getParametersAdditiveExpressionParserRuleCall_1_0()); 
	    }
		lv_parameters_1_0=ruleAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_1_0, 
        		"AdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
		lv_operations_2_0=RULE_XML_LT
		{
			newLeafNode(lv_operations_2_0, grammarAccess.getRelationalExpressionAccess().getOperationsXML_LTTerminalRuleCall_2_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"operations",
        		lv_operations_2_0, 
        		"XML_LT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getParametersAdditiveExpressionParserRuleCall_2_0_1_0()); 
	    }
		lv_parameters_3_0=ruleAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"AdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_operations_4_0=RULE_XML_GT
		{
			newLeafNode(lv_operations_4_0, grammarAccess.getRelationalExpressionAccess().getOperationsXML_GTTerminalRuleCall_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"operations",
        		lv_operations_4_0, 
        		"XML_GT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getParametersAdditiveExpressionParserRuleCall_2_1_1_0()); 
	    }
		lv_parameters_5_0=ruleAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"AdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_operations_6_0=RULE_XML_LTEQ
		{
			newLeafNode(lv_operations_6_0, grammarAccess.getRelationalExpressionAccess().getOperationsXML_LTEQTerminalRuleCall_2_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"operations",
        		lv_operations_6_0, 
        		"XML_LTEQ");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getParametersAdditiveExpressionParserRuleCall_2_2_1_0()); 
	    }
		lv_parameters_7_0=ruleAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_7_0, 
        		"AdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_operations_8_0=RULE_XML_GTEQ
		{
			newLeafNode(lv_operations_8_0, grammarAccess.getRelationalExpressionAccess().getOperationsXML_GTEQTerminalRuleCall_2_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationalExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"operations",
        		lv_operations_8_0, 
        		"XML_GTEQ");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getParametersAdditiveExpressionParserRuleCall_2_3_1_0()); 
	    }
		lv_parameters_9_0=ruleAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_9_0, 
        		"AdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;





// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionRule()); }
	 iv_ruleAdditiveExpression=ruleAdditiveExpression 
	 { $current=$iv_ruleAdditiveExpression.current; } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getParametersMultiplicativeExpressionParserRuleCall_0_0()); 
	    }
		lv_parameters_0_0=ruleMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_0_0, 
        		"MultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_1='+' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAdditiveExpressionAccess().getPlusSignKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getParametersMultiplicativeExpressionParserRuleCall_1_0_1_0()); 
	    }
		lv_parameters_2_0=ruleMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"MultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_3='-' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAdditiveExpressionAccess().getHyphenMinusKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getParametersMultiplicativeExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_parameters_4_0=ruleMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_4_0, 
        		"MultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); }
	 iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression 
	 { $current=$iv_ruleMultiplicativeExpression.current; } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getParametersUnaryExpressionParserRuleCall_0_0()); 
	    }
		lv_parameters_0_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_0_0, 
        		"UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
		lv_operations_1_0=	'*' 
    {
        newLeafNode(lv_operations_1_0, grammarAccess.getMultiplicativeExpressionAccess().getOperationsAsteriskKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		addWithLastConsumed($current, "operations", lv_operations_1_0, "*");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getParametersUnaryExpressionParserRuleCall_1_0_1_0()); 
	    }
		lv_parameters_2_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_operations_3_0=RULE_TML_SEPARATOR
		{
			newLeafNode(lv_operations_3_0, grammarAccess.getMultiplicativeExpressionAccess().getOperationsTML_SEPARATORTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"operations",
        		lv_operations_3_0, 
        		"TML_SEPARATOR");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getParametersUnaryExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_parameters_4_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_4_0, 
        		"UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	 iv_ruleUnaryExpression=ruleUnaryExpression 
	 { $current=$iv_ruleUnaryExpression.current; } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_operations_0_0=	'!' 
    {
        newLeafNode(lv_operations_0_0, grammarAccess.getUnaryExpressionAccess().getOperationsExclamationMarkKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExpressionRule());
	        }
       		addWithLastConsumed($current, "operations", lv_operations_0_0, "!");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getParametersPrimaryExpressionParserRuleCall_0_1_0()); 
	    }
		lv_parameters_1_0=rulePrimaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_1_0, 
        		"PrimaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_1()); 
    }
    this_PrimaryExpression_2=rulePrimaryExpression
    { 
        $current = $this_PrimaryExpression_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	 iv_rulePrimaryExpression=rulePrimaryExpression 
	 { $current=$iv_rulePrimaryExpression.current; } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParametersLiteralParserRuleCall_0_0()); 
	    }
		lv_parameters_0_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_0_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParametersOrExpressionParserRuleCall_1_1_0()); 
	    }
		lv_parameters_2_0=ruleOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"OrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_2());
    }
))
;





// Entry rule entryRuleFunctionName
entryRuleFunctionName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionNameRule()); } 
	 iv_ruleFunctionName=ruleFunctionName 
	 { $current=$iv_ruleFunctionName.current.getText(); }  
	 EOF 
;

// Rule FunctionName
ruleFunctionName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getFunctionNameAccess().getIDTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleFunctionCall
entryRuleFunctionCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionCallRule()); }
	 iv_ruleFunctionCall=ruleFunctionCall 
	 { $current=$iv_ruleFunctionCall.current; } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionCallAccess().getNameFunctionNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleFunctionName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionCallRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"FunctionName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersOrExpressionParserRuleCall_2_0()); 
	    }
		lv_parameters_2_0=ruleOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionCallRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"OrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFunctionCallAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersOrExpressionParserRuleCall_3_1_0()); 
	    }
		lv_parameters_4_0=ruleOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionCallRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_4_0, 
        		"OrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleDateLiteral
entryRuleDateLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDateLiteralRule()); }
	 iv_ruleDateLiteral=ruleDateLiteral 
	 { $current=$iv_ruleDateLiteral.current; } 
	 EOF 
;

// Rule DateLiteral
ruleDateLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDateLiteralAccess().getExpressionAction_0(),
            $current);
    }
)this_NUMBER_1=RULE_NUMBER
    { 
    newLeafNode(this_NUMBER_1, grammarAccess.getDateLiteralAccess().getNUMBERTerminalRuleCall_1()); 
    }
	otherlv_2='#' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDateLiteralAccess().getNumberSignKeyword_2());
    }
this_NUMBER_3=RULE_NUMBER
    { 
    newLeafNode(this_NUMBER_3, grammarAccess.getDateLiteralAccess().getNUMBERTerminalRuleCall_3()); 
    }
	otherlv_4='#' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDateLiteralAccess().getNumberSignKeyword_4());
    }
this_NUMBER_5=RULE_NUMBER
    { 
    newLeafNode(this_NUMBER_5, grammarAccess.getDateLiteralAccess().getNUMBERTerminalRuleCall_5()); 
    }
	otherlv_6='#' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDateLiteralAccess().getNumberSignKeyword_6());
    }
this_NUMBER_7=RULE_NUMBER
    { 
    newLeafNode(this_NUMBER_7, grammarAccess.getDateLiteralAccess().getNUMBERTerminalRuleCall_7()); 
    }
	otherlv_8='#' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDateLiteralAccess().getNumberSignKeyword_8());
    }
this_NUMBER_9=RULE_NUMBER
    { 
    newLeafNode(this_NUMBER_9, grammarAccess.getDateLiteralAccess().getNUMBERTerminalRuleCall_9()); 
    }
	otherlv_10='#' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDateLiteralAccess().getNumberSignKeyword_10());
    }
this_NUMBER_11=RULE_NUMBER
    { 
    newLeafNode(this_NUMBER_11, grammarAccess.getDateLiteralAccess().getNUMBERTerminalRuleCall_11()); 
    }
)
;





// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current; } 
	 EOF 
;

// Rule Literal
ruleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralAccess().getExpressionAction_0_0(),
            $current);
    }
)this_NUMBER_1=RULE_NUMBER
    { 
    newLeafNode(this_NUMBER_1, grammarAccess.getLiteralAccess().getNUMBERTerminalRuleCall_0_1()); 
    }
)
    |(
(
		lv_valueString_2_0=RULE_LITERALSTRING
		{
			newLeafNode(lv_valueString_2_0, grammarAccess.getLiteralAccess().getValueStringLITERALSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valueString",
        		lv_valueString_2_0, 
        		"LITERALSTRING");
	    }

)
)
    |((
(
		lv_operations_3_0=RULE_FORALL
		{
			newLeafNode(lv_operations_3_0, grammarAccess.getLiteralAccess().getOperationsFORALLTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"operations",
        		lv_operations_3_0, 
        		"FORALL");
	    }

)
)	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLiteralAccess().getLeftParenthesisKeyword_2_1());
    }
(
(
		lv_valueString_5_0=RULE_LITERALSTRING
		{
			newLeafNode(lv_valueString_5_0, grammarAccess.getLiteralAccess().getValueStringLITERALSTRINGTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valueString",
        		lv_valueString_5_0, 
        		"LITERALSTRING");
	    }

)
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLiteralAccess().getCommaKeyword_2_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralAccess().getParametersOrExpressionParserRuleCall_2_4_0()); 
	    }
		lv_parameters_7_0=ruleOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_7_0, 
        		"OrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLiteralAccess().getRightParenthesisKeyword_2_5());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralAccess().getParametersFunctionCallParserRuleCall_3_0()); 
	    }
		lv_parameters_9_0=ruleFunctionCall		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_9_0, 
        		"FunctionCall");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		lv_expressionType_10_0=	'{' 
    {
        newLeafNode(lv_expressionType_10_0, grammarAccess.getLiteralAccess().getExpressionTypeLeftCurlyBracketKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed($current, "expressionType", lv_expressionType_10_0, "{");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralAccess().getParametersOrExpressionParserRuleCall_4_1_0()); 
	    }
		lv_parameters_11_0=ruleOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_11_0, 
        		"OrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getLiteralAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralAccess().getParametersOrExpressionParserRuleCall_4_2_1_0()); 
	    }
		lv_parameters_13_0=ruleOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_13_0, 
        		"OrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getLiteralAccess().getRightCurlyBracketKeyword_4_3());
    }
)
    |(
(
		lv_elements_15_0=RULE_NULL
		{
			newLeafNode(lv_elements_15_0, grammarAccess.getLiteralAccess().getElementsNULLTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"elements",
        		lv_elements_15_0, 
        		"NULL");
	    }

)
)
    |(
(
		lv_elements_16_0=RULE_TODAY
		{
			newLeafNode(lv_elements_16_0, grammarAccess.getLiteralAccess().getElementsTODAYTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"elements",
        		lv_elements_16_0, 
        		"TODAY");
	    }

)
)
    |(
(
		lv_elements_17_0=RULE_TRUE
		{
			newLeafNode(lv_elements_17_0, grammarAccess.getLiteralAccess().getElementsTRUETerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"elements",
        		lv_elements_17_0, 
        		"TRUE");
	    }

)
)
    |(
(
		lv_elements_18_0=RULE_FALSE
		{
			newLeafNode(lv_elements_18_0, grammarAccess.getLiteralAccess().getElementsFALSETerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"elements",
        		lv_elements_18_0, 
        		"FALSE");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralAccess().getParametersTmlExpressionParserRuleCall_9_0()); 
	    }
		lv_parameters_19_0=ruleTmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_19_0, 
        		"TmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralAccess().getParametersExistsTmlExpressionParserRuleCall_10_0()); 
	    }
		lv_parameters_20_0=ruleExistsTmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_20_0, 
        		"ExistsTmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralAccess().getParametersMapGetReferenceParserRuleCall_11_0()); 
	    }
		lv_parameters_21_0=ruleMapGetReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_21_0, 
        		"MapGetReference");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralAccess().getParametersDateLiteralParserRuleCall_12_0()); 
	    }
		lv_parameters_22_0=ruleDateLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_22_0, 
        		"DateLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





RULE_XMLHEAD : '<?' ( options {greedy=false;} : . )*'?>';

RULE_XMLCOMMENT : '<!--' ( options {greedy=false;} : . )*'-->';

RULE_QUOTEQ : '"=';

RULE_SEMICOLONQUOTE : ';"';

RULE_DOT : '.';

RULE_DEBUG_START_TAG : '<debug';

RULE_DEBUG_END_TAG : '</debug' RULE_XML_TAG_END;

RULE_EMPTYSTRING : '""';

RULE_ATTRIBUTESTRING : '"' ~(('='|'"'))* '"';

RULE_XML_START_ENDTAG : '</';

RULE_XML_TAG_END : '>';

RULE_XML_TAG_SINGLEEND : '/>';

RULE_MAP_METHOD_STARTTAG_START : '<_';

RULE_MAP_METHOD_ENDTAG_START : '</_';

RULE_MAPENDKEYWORD : '</map';

RULE_MAPSTARTKEYWORD : '<map';

RULE_INCLUDE_START_TAG : '<include';

RULE_PROPERTY_START_TAG : '<property';

RULE_REQUIRED_START_TAG : '<required';

RULE_VALIDATIONS_START_TAG : '<validations';

RULE_CHECK_START_TAG : '<check';

RULE_COMMENT_START_TAG : '<comment';

RULE_BREAK_START_TAG : '<break';

RULE_OPTION_START_TAG : '<option';

RULE_BREAK_END_TAG : '</break' RULE_XML_TAG_END;

RULE_OPTION_END_TAG : '</option' RULE_XML_TAG_END;

RULE_REQUIRED_END_TAG : '</required' RULE_XML_TAG_END;

RULE_INCLUDE_END_TAG : '</include' RULE_XML_TAG_END;

RULE_PROPERTY_END_TAG : '</property' RULE_XML_TAG_END;

RULE_COMMENT_END_TAG : '</comment' RULE_XML_TAG_END;

RULE_VALIDATIONS_END_TAG : '</validations' RULE_XML_TAG_END;

RULE_CHECK_END_TAG : '</check' RULE_XML_TAG_END;

RULE_PARAM_END_TAG : '</param' RULE_XML_TAG_END;

RULE_MESSAGE_END_TAG : '</message' RULE_XML_TAG_END;

RULE_METHODS_END_TAG : '</methods' RULE_XML_TAG_END;

RULE_METHOD_END_TAG : '</method' RULE_XML_TAG_END;

RULE_FIELD_END_TAG : '</field' RULE_XML_TAG_END;

RULE_EXPRESSION_START_TAG : '<expression';

RULE_EXPRESSION_END_TAG : '</expression' RULE_XML_TAG_END;

RULE_PARAM_START_TAG : '<param';

RULE_MESSAGE_START_TAG : '<message';

RULE_METHOD_START_TAG : '<method';

RULE_METHODS_START_TAG : '<methods';

RULE_FIELD_START_TAG : '<field';

RULE_NAVASCRIPT_START : ('<navascript'|'<tsl');

RULE_NAVASCRIPT_END : ('</navascript' RULE_XML_TAG_END|'</tsl' RULE_XML_TAG_END);

RULE_XML_GT : '&gt;';

RULE_XML_LT : '&lt;';

RULE_XML_GTEQ : '&gt;=';

RULE_XML_LTEQ : '&lt;=';

RULE_NUMBER : ('0'..'9')+ ('.' ('0'..'9')+)?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_TRUE : ('true'|'TRUE');

RULE_FALSE : ('false'|'FALSE');

RULE_NULL : ('null'|'NULL');

RULE_TODAY : ('today'|'TODAY');

RULE_FORALL : 'FORALL';

RULE_PARENT : '..';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_AT : '@';

RULE_LITERALSTRING : ('\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\''|'<![CDATA[' ( options {greedy=false;} : . )*']]>');

RULE_SQBRACKET_OPEN : '[';

RULE_SQBRACKET_CLOSE : ']';

RULE_TML_SEPARATOR : '/';

RULE_TML_EXISTS : '?';

RULE_DOLLAR : '$';


