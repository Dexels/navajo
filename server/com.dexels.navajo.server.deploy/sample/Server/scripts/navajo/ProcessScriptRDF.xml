<?xml version="1.0" encoding="UTF-8"?>
<navascript xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.navajo.nl/schemas/navascript.xsd">
    <!-- Call ProcessIntrospectScript -->
    <map.navajomap>
        <navajomap.sendThrough value="true"/>
        <navajomap.callwebservice name="'navajo/ProcessIntrospectScript'"/>
        <!-- Get script name first -->
        <param name="ScriptName">
            <expression value="$property('/ScriptInfo/ScriptName')"/>
        </param>
        <param name="ScriptURI">
            <expression value="'service:' + StringFunction('replaceAll', $property('/ScriptInfo/ScriptName'), '/', '_')"/>
        </param>
        <navajomap.messagePointer value="'/ScriptInfo/Dependencies'"/>
        <message name="Triple" type="array">
            <message name="Triple">
                <property name="Subject" direction="out">
                    <expression value="[/@ScriptURI]"/>
                </property>
                <property name="Predicate" direction="out">
                    <expression value="'rdf:type'"/>
                </property>
                <property name="Object" direction="out">
                    <expression value="':service'"/>
                </property>
            </message>
            <message name="Triple" condition="$property('/ScriptInfo/Root') != null AND $property('/ScriptInfo/Root') != ''">
                <property name="Subject" direction="out">
                    <expression value="[/@ScriptURI]"/>
                </property>
                <property name="Predicate" direction="out">
                    <expression value="':hasCVSRoot'"/>
                </property>
                <property name="Object" direction="out">
                    <expression value="$property('/ScriptInfo/Root')"/>
                </property>
            </message>
            <message name="Triple" condition="$property('/ScriptInfo/Repository') != null AND $property('/ScriptInfo/Repository') != ''">
                <property name="Subject" direction="out">
                    <expression value="[/@ScriptURI]"/>
                </property>
                <property name="Predicate" direction="out">
                    <expression value="':hasCVSRepository'"/>
                </property>
                <property name="Object" direction="out">
                    <expression value="$property('/ScriptInfo/Repository')"/>
                </property>
            </message>
            <message name="Triple" condition="$property('/ScriptInfo/Version') != null AND $property('/ScriptInfo/Version') != ''">
                <property name="Subject" direction="out">
                    <expression value="[/@ScriptURI]"/>
                </property>
                <property name="Predicate" direction="out">
                    <expression value="':hasCVSVersion'"/>
                </property>
                <property name="Object" direction="out">
                    <expression value="$property('/ScriptInfo/Version')"/>
                </property>
            </message>
            <message name="Triple" condition="$property('/ScriptInfo/LastUpdate') != null AND $property('/ScriptInfo/LastUpdate') != ''">
                <property name="Subject" direction="out">
                    <expression value="[/@ScriptURI]"/>
                </property>
                <property name="Predicate" direction="out">
                    <expression value="':hasCVSLastUpdate'"/>
                </property>
                <property name="Object" direction="out">
                    <expression value="$property('/ScriptInfo/LastUpdate')"/>
                </property>
            </message>
            <message name="Triple" condition="$exists('/ScriptInfo/Author') AND $property('/ScriptInfo/Author') != ''">
                <property name="Subject" direction="out">
                    <expression value="[/@ScriptURI]"/>
                </property>
                <property name="Predicate" direction="out">
                    <expression value="':hasCVSAuthor'"/>
                </property>
                <property name="Object" direction="out">
                    <expression value="$property('/ScriptInfo/Author')"/>
                </property>
            </message>
            <message name="Triple">
                <property name="Subject" direction="out">
                    <expression value="[/@ScriptURI]"/>
                </property>
                <property name="Predicate" direction="out">
                    <expression value="':inspectedOn'"/>
                </property>
                <property name="Object" direction="out">
                    <expression value="TODAY"/>
                </property>
            </message>
            <message name="Triple">
                <property name="Subject" direction="out">
                    <expression value="[/@ScriptURI]"/>
                </property>
                <property name="Predicate" direction="out">
                    <expression value="':hasError'"/>
                </property>
                <property name="Object" direction="out">
                    <expression condition="$property('/ScriptInfo/HasErrors')" value="true"/>
                    <expression value="false"/>
                </property>
            </message>
            <message name="Triple" condition="$property('/ScriptInfo/HasErrors') == true">
                <property name="Subject" direction="out">
                    <expression value="[/@ScriptURI]"/>
                </property>
                <property name="Predicate" direction="out">
                    <expression value="':hasErrorMessage'"/>
                </property>
                <property name="Object" direction="out">
                    <expression value="$property('/ScriptInfo/ErrorMessage')"/>
                </property>
            </message>
        </message>
        <message name="Triple" type="array">
            <map ref="messages">
                <property name="Subject" direction="out">
                    <expression value="[/@ScriptURI]"/>
                </property>
                <param name="ObjectName">
                    <expression value="StringFunction('replaceAll', $property('Name'), '/', '_')"/>
                </param>
                <param name="ObjectName">
                    <expression value="Trim(StringFunction('replaceAll', [/@ObjectName], '\\n', ''))"/>
                </param>
                <property name="Predicate" direction="out">
                    <expression condition="$property('Type') == 'IncludeDependency'" value="':includesService'"/>
                    <expression condition="$property('Type') == 'InheritDependency'" value="':injectsService'"/>
                    <expression condition="$property('Type') == 'JavaDependency'" value="'navajo:usesJavaClass'"/>
                    <expression condition="$property('Type') == 'script'" value="'navajo:callsService'"/>
                    <expression condition="$property('Type') == 'codetable'" value="':usesCodetable'"/>
                    <expression condition="$property('Type') == 'table' OR $property('Type') == 'storedproc'" value="':usesDbObject'"/>
                    <expression condition="$property('Type') == 'database'" value="':usesDatabase'"/>
                    <expression value="':' + $property('Type')"/>
                </property>
                <property name="Object" direction="out">
                    <expression condition="$property('Type') == 'table' OR $property('Type') == 'storedproc'" value="'dbobject:' + [/@ObjectName]"/>
                    <expression condition="$property('Type') == 'JavaDependency'" value="'navajoadapter:' + [/@ObjectName]"/>
                    <expression condition="$property('Type') == 'script' OR $property('Type') == 'IncludeDependency' OR  $property('Type') == 'InheritDependency'" value="'service:' + [/@ObjectName]"/>
                    <expression value="StringFunction('replaceAll', $property('Name'), '\\'', '')"/>
                </property>
                <!-- Check DB dependencies -->
            </map>
        </message>
    </map.navajomap>
    <!-- Store RDF -->
    <map.navajomap>
        <navajomap.useCurrentOutDoc value="true"/>
        <navajomap.createproperty name="'/Datasource/Name'" value="'navajostore'"/>
        <navajomap.callwebservice name="'rdf/ProcessUpdateRDF'"/>
    </map.navajomap>
</navascript>
